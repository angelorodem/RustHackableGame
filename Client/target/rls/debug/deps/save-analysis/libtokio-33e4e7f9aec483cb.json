{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22","program":"/home/oleg/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=33e4e7f9aec483cb","-C","extra-filename=-33e4e7f9aec483cb","--out-dir","/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps","-L","dependency=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps","--extern","bytes=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libbytes-cca8ffb3deeab0da.rmeta","--extern","fnv=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libfnv-ce800f92c18bad0c.rmeta","--extern","futures_core=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libfutures_core-34960367f73b2a4e.rmeta","--extern","iovec=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libiovec-83b18d16ab60040b.rmeta","--extern","lazy_static=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/liblazy_static-4f4c3986ba0f23cb.rmeta","--extern","libc=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/liblibc-9061af0f084776f9.rmeta","--extern","memchr=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libmemchr-5f35df95f21b1740.rmeta","--extern","mio=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libmio-b294bc3a62165917.rmeta","--extern","mio_uds=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libmio_uds-79741a3dfdb13017.rmeta","--extern","num_cpus=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libnum_cpus-747773433786b63c.rmeta","--extern","pin_project_lite=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libpin_project_lite-b726d9b4188c0a33.rmeta","--extern","signal_hook_registry=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libsignal_hook_registry-aff240322141f572.rmeta","--extern","slab=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libslab-717f30fe9c33c592.rmeta","--extern","tokio_macros=/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libtokio_macros-568993ba4be19c87.so","--cap-lints","allow","--error-format=json","--sysroot","/home/oleg/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/oleg/git/RustHackableGame/Client/target/rls/debug/deps/libtokio-33e4e7f9aec483cb.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[1549350532173872244,3330225724392166713]},"crate_root":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src","external_crates":[{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13842155912677385872,11660590378338683385]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[1145230128757463294,15976268636418953592]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10006185802367012891,4937926339965588888]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18134491841186215314,8619879253945163470]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4357087487764653857,7816708319091665300]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10862771416828768076,14090399182622295334]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7832813774001485751,4465207999706185911]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14203079308812153325,7069038021421518271]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17468104730350570711,1510909898039763528]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11081656445949358564,12304596919514716713]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[4496289705150708668,14963538919535077439]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[12585038344938944291,11081610577875308163]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4866546307375520792,3681606541934731072]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[6903286030758146719,12939842262273902871]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[15205549772639345506,4740454705265952229]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","num":16,"id":{"name":"bytes","disambiguator":[5211756538344022394,4914126673298779355]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","num":17,"id":{"name":"lazy_static","disambiguator":[2376082943716136021,4502182007221238058]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","num":18,"id":{"name":"futures_core","disambiguator":[8851254234861291976,18314546048136600119]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":19,"id":{"name":"mio","disambiguator":[4018296413128198383,1645681052830942602]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":20,"id":{"name":"net2","disambiguator":[10662300994377833667,7364007016619368130]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","num":21,"id":{"name":"libc","disambiguator":[11478400254289900752,17693001060084426160]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":22,"id":{"name":"cfg_if","disambiguator":[8399646777753009860,5233712646035546754]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","num":23,"id":{"name":"iovec","disambiguator":[8939676177555857619,12042214904787964548]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","num":24,"id":{"name":"slab","disambiguator":[9028093394024662471,16096422059806763953]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":25,"id":{"name":"log","disambiguator":[7079415731269664720,8188119293287117788]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":26,"id":{"name":"mio_uds","disambiguator":[16363704971493774031,3173948889028119501]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","num":27,"id":{"name":"fnv","disambiguator":[3197708289232479702,16253427413017448953]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":28,"id":{"name":"tokio_macros","disambiguator":[14947859785933010115,8039625551564680144]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","num":29,"id":{"name":"memchr","disambiguator":[14525067682591052395,13058984448108081315]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/mod.rs","num":30,"id":{"name":"num_cpus","disambiguator":[15027076441537742778,12516582107920004761]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":31,"id":{"name":"signal_hook_registry","disambiguator":[3476110981135052233,8963303952068632021]}},{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":32,"id":{"name":"arc_swap","disambiguator":[1379366164375251868,9441419171779751419]}}],"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30868,"byte_end":30878,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30880,"byte_end":30887,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30915,"byte_end":30927,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":8293},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":30012},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32445},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":903},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355609,"byte_end":8355621,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355666,"byte_end":8355676,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355729,"byte_end":8355743,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355790,"byte_end":8355800,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355833,"byte_end":8355837,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355880,"byte_end":8355889,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355930,"byte_end":8355938,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355987,"byte_end":8355998,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8406075,"byte_end":8406082,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8406139,"byte_end":8406153,"line_start":7,"line_end":7,"column_start":33,"column_end":47},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8406208,"byte_end":8406221,"line_start":10,"line_end":10,"column_start":32,"column_end":45},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1126},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356044,"byte_end":8356048,"line_start":54,"line_end":54,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356090,"byte_end":8356098,"line_start":57,"line_end":57,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356100,"byte_end":8356108,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356110,"byte_end":8356117,"line_start":57,"line_end":57,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356161,"byte_end":8356170,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356223,"byte_end":8356237,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356282,"byte_end":8356292,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356345,"byte_end":8356359,"line_start":69,"line_end":69,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356406,"byte_end":8356417,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356454,"byte_end":8356460,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356515,"byte_end":8356530,"line_start":78,"line_end":78,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356587,"byte_end":8356603,"line_start":81,"line_end":81,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356638,"byte_end":8356643,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356676,"byte_end":8356680,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1731},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1787},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45489,"byte_end":45495,"line_start":211,"line_end":211,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1788},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45497,"byte_end":45503,"line_start":211,"line_end":211,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1792},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45542,"byte_end":45547,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45549,"byte_end":45554,"line_start":214,"line_end":214,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1797},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45595,"byte_end":45601,"line_start":217,"line_end":217,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1798},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45603,"byte_end":45609,"line_start":217,"line_end":217,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1922},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2969},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2984},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12234},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12220},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12157},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2970},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11251},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11205},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2532},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":6619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2530},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72748,"byte_end":72759,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656496,"byte_end":8656504,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656534,"byte_end":8656542,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656544,"byte_end":8656553,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3549},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656596,"byte_end":8656609,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3553},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656611,"byte_end":8656625,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3558},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656627,"byte_end":8656639,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3527},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3564},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3700},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8716294,"byte_end":8716302,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3705},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8716304,"byte_end":8716316,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3695},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8716318,"byte_end":8716326,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3693},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8737382,"byte_end":8737390,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8737485,"byte_end":8737493,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8737495,"byte_end":8737504,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3980},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8737593,"byte_end":8737598,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3954},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72995,"byte_end":73007,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3962},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73037,"byte_end":73049,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73077,"byte_end":73087,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105488,"byte_end":105492,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105613,"byte_end":105614,"line_start":20,"line_end":20,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105632,"byte_end":105633,"line_start":20,"line_end":20,"column_start":63,"column_end":64},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105651,"byte_end":105652,"line_start":20,"line_end":20,"column_start":82,"column_end":83},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105671,"byte_end":105672,"line_start":20,"line_end":20,"column_start":102,"column_end":103},"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5755},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977764,"byte_end":8977770,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5750}},{"kind":"Use","ref_id":{"krate":0,"index":6009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014674,"byte_end":9014684,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6101},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014714,"byte_end":9014719,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6541},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014721,"byte_end":9014726,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014892,"byte_end":9014896,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6548},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014898,"byte_end":9014902,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6292},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015012,"byte_end":9015016,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6562},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015018,"byte_end":9015022,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6315},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015057,"byte_end":9015064,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015066,"byte_end":9015073,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6575},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015113,"byte_end":9015122,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015414,"byte_end":9015420,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":7952},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133229,"byte_end":9133236,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133238,"byte_end":9133255,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":6922},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181660,"byte_end":9181667,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":6916},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181669,"byte_end":9181677,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":6907},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181679,"byte_end":9181685,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7194},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181763,"byte_end":9181780,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7188},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181782,"byte_end":9181799,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7179},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181801,"byte_end":9181816,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":8089},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133480,"byte_end":9133485,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7257},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133487,"byte_end":9133497,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8096},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133499,"byte_end":9133511,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7261},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133513,"byte_end":9133528,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8101},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133568,"byte_end":9133574,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8234},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133711,"byte_end":9133720,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8238},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133722,"byte_end":9133737,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133739,"byte_end":9133759,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8255},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133800,"byte_end":9133806,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8262},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133808,"byte_end":9133823,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133825,"byte_end":9133841,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8345},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406436,"byte_end":9406450,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8342},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406502,"byte_end":9406516,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":4996},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406577,"byte_end":9406586,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":4998},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406588,"byte_end":9406598,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406636,"byte_end":9406641,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8366},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406686,"byte_end":9406695,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8526},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406750,"byte_end":9406761,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8517},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406763,"byte_end":9406771,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8469},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406819,"byte_end":9406827,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9026},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445936,"byte_end":9445946,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8632},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445976,"byte_end":9445985,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8631},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445987,"byte_end":9445998,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9068},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446000,"byte_end":9446005,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9125},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446059,"byte_end":9446064,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9137},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446103,"byte_end":9446110,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8885},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446146,"byte_end":9446154,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8886},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446156,"byte_end":9446167,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446169,"byte_end":9446177,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446227,"byte_end":9446234,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8915},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446236,"byte_end":9446246,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9165},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446248,"byte_end":9446255,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9625},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446257,"byte_end":9446264,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9187},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446323,"byte_end":9446331,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9579},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446333,"byte_end":9446341,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":2,"index":32309},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9446450,"byte_end":9446458,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/mod.rs","byte_start":179642,"byte_end":179654,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":765}},{"kind":"Use","ref_id":{"krate":28,"index":45},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14841,"byte_end":14872,"line_start":403,"line_end":403,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":39},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15208,"byte_end":15221,"line_start":412,"line_end":412,"column_start":35,"column_end":48},"alias_span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15225,"byte_end":15229,"line_start":412,"line_end":412,"column_start":52,"column_end":56},"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":42},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15328,"byte_end":15341,"line_start":415,"line_end":415,"column_start":35,"column_end":48},"alias_span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15345,"byte_end":15349,"line_start":415,"line_end":415,"column_start":52,"column_end":56},"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":896},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":4103},{"krate":0,"index":562},{"krate":0,"index":746},{"krate":0,"index":5750},{"krate":0,"index":5931},{"krate":0,"index":6620},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8541},{"krate":0,"index":765},{"krate":0,"index":9551},{"krate":0,"index":9552},{"krate":0,"index":9553}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"! - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"! - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"! - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"! - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"! - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"! - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"! - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"! the built in timer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"! - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"! dependencies. They are not included in `full`:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## CPU-bound tasks and blocking code","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"! swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"! swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"! without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"! threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"! will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"! spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"! block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"! out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"! on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"! configured on the [`Builder`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"! [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"!     // This is running on a core thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"!     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"!         // This is running on a blocking thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"!         // Blocking here is ok.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!     // We can wait for the blocking task like this:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"!     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"!     // panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"!     blocking_task.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"! to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"! can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"! rayon task finishes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":896},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1121},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1297}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18938,"byte_end":18960,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354298,"byte_end":8354316,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354318,"byte_end":8354371,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354372,"byte_end":8354375,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354376,"byte_end":8354454,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354455,"byte_end":8354519,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"! filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354520,"byte_end":8354598,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354599,"byte_end":8354602,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354603,"byte_end":8354674,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"! servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354675,"byte_end":8354749,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"! however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354750,"byte_end":8354824,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"! to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354825,"byte_end":8354894,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354895,"byte_end":8354970,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"! *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8354971,"byte_end":8355035,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355036,"byte_end":8355039,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355040,"byte_end":8355052,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355053,"byte_end":8355056,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355057,"byte_end":8355131,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"! traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355132,"byte_end":8355207,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"! type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355208,"byte_end":8355284,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"! return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355285,"byte_end":8355362,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"! `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355363,"byte_end":8355441,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! to a *backup* thread immediately.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355442,"byte_end":8355479,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355480,"byte_end":8355483,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8355484,"byte_end":8355561,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358841,"byte_end":8358853,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"fn (path: impl AsRef<Path>) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357335,"byte_end":8357407,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357408,"byte_end":8357462,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357463,"byte_end":8357466,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357467,"byte_end":8357529,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357530,"byte_end":8357533,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357534,"byte_end":8357566,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357567,"byte_end":8357570,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357571,"byte_end":8357603,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357604,"byte_end":8357607,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357608,"byte_end":8357682,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357683,"byte_end":8357760,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357761,"byte_end":8357817,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357818,"byte_end":8357821,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357822,"byte_end":8357896,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357897,"byte_end":8357974,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8357975,"byte_end":8358052,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358053,"byte_end":8358131,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358132,"byte_end":8358187,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358188,"byte_end":8358191,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358192,"byte_end":8358277,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358278,"byte_end":8358377,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358378,"byte_end":8358381,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358382,"byte_end":8358394,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358395,"byte_end":8358398,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358399,"byte_end":8358477,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358478,"byte_end":8358510,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358511,"byte_end":8358514,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358515,"byte_end":8358543,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358544,"byte_end":8358599,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358600,"byte_end":8358603,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358604,"byte_end":8358618,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358619,"byte_end":8358622,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358623,"byte_end":8358636,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358637,"byte_end":8358655,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358656,"byte_end":8358672,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358673,"byte_end":8358676,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358677,"byte_end":8358695,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358696,"byte_end":8358735,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358736,"byte_end":8358798,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358799,"byte_end":8358813,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358814,"byte_end":8358819,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8358820,"byte_end":8358827,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360410,"byte_end":8360420,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359064,"byte_end":8359119,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359120,"byte_end":8359123,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359124,"byte_end":8359184,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359185,"byte_end":8359188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359189,"byte_end":8359219,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359220,"byte_end":8359223,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359224,"byte_end":8359256,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359257,"byte_end":8359260,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359261,"byte_end":8359332,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359333,"byte_end":8359383,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359384,"byte_end":8359440,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359441,"byte_end":8359444,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359445,"byte_end":8359530,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359531,"byte_end":8359534,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359535,"byte_end":8359612,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359613,"byte_end":8359690,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359691,"byte_end":8359742,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359743,"byte_end":8359746,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359747,"byte_end":8359759,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359760,"byte_end":8359763,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359764,"byte_end":8359842,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359843,"byte_end":8359875,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359876,"byte_end":8359879,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359880,"byte_end":8359939,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8359940,"byte_end":8360018,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360019,"byte_end":8360089,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360090,"byte_end":8360106,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360107,"byte_end":8360135,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360136,"byte_end":8360139,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360140,"byte_end":8360187,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360188,"byte_end":8360191,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360192,"byte_end":8360206,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360207,"byte_end":8360210,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360211,"byte_end":8360224,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360225,"byte_end":8360243,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360244,"byte_end":8360260,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360261,"byte_end":8360264,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360265,"byte_end":8360283,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360284,"byte_end":8360323,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360324,"byte_end":8360367,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360368,"byte_end":8360382,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360383,"byte_end":8360388,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8360389,"byte_end":8360396,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362173,"byte_end":8362187,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360624,"byte_end":8360700,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360701,"byte_end":8360717,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360718,"byte_end":8360721,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360722,"byte_end":8360786,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360787,"byte_end":8360790,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360791,"byte_end":8360825,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360826,"byte_end":8360829,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360830,"byte_end":8360862,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360863,"byte_end":8360866,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360867,"byte_end":8360938,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360939,"byte_end":8360989,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8360990,"byte_end":8361046,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361047,"byte_end":8361050,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361051,"byte_end":8361136,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361137,"byte_end":8361140,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361141,"byte_end":8361153,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361154,"byte_end":8361157,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361158,"byte_end":8361236,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361237,"byte_end":8361269,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361270,"byte_end":8361273,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361274,"byte_end":8361351,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361352,"byte_end":8361428,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361429,"byte_end":8361508,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361509,"byte_end":8361544,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361545,"byte_end":8361548,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361549,"byte_end":8361622,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361623,"byte_end":8361709,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361710,"byte_end":8361791,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361792,"byte_end":8361869,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361870,"byte_end":8361910,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361911,"byte_end":8361914,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361915,"byte_end":8361958,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361959,"byte_end":8361962,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361963,"byte_end":8361977,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361978,"byte_end":8361981,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361982,"byte_end":8361995,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8361996,"byte_end":8362014,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362015,"byte_end":8362018,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362019,"byte_end":8362037,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362038,"byte_end":8362082,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362083,"byte_end":8362130,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362131,"byte_end":8362145,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362146,"byte_end":8362151,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8362152,"byte_end":8362159,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362803,"byte_end":8362813,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362395,"byte_end":8362453,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362454,"byte_end":8362457,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additional Unix-specific options are available via importing the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362458,"byte_end":8362526,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`DirBuilderExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362527,"byte_end":8362555,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362556,"byte_end":8362559,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362560,"byte_end":8362633,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362634,"byte_end":8362656,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362657,"byte_end":8362660,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362661,"byte_end":8362707,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`DirBuilderExt`]: crate::fs::os::unix::DirBuilderExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8362708,"byte_end":8362765,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363452,"byte_end":8363455,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363047,"byte_end":8363123,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363128,"byte_end":8363165,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363170,"byte_end":8363173,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363178,"byte_end":8363243,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363248,"byte_end":8363251,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363256,"byte_end":8363291,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363296,"byte_end":8363299,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363304,"byte_end":8363318,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363323,"byte_end":8363326,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363331,"byte_end":8363344,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363349,"byte_end":8363379,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363384,"byte_end":8363387,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363392,"byte_end":8363428,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363433,"byte_end":8363440,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364077,"byte_end":8364086,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"fn (&mut self, recursive: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363506,"byte_end":8363597,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363602,"byte_end":8363692,"line_start":46,"line_end":46,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363697,"byte_end":8363700,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363705,"byte_end":8363741,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363746,"byte_end":8363749,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363754,"byte_end":8363825,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363830,"byte_end":8363833,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363838,"byte_end":8363879,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363884,"byte_end":8363887,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363892,"byte_end":8363906,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363911,"byte_end":8363914,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363919,"byte_end":8363932,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363937,"byte_end":8363967,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363972,"byte_end":8363975,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363980,"byte_end":8364020,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364025,"byte_end":8364053,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364058,"byte_end":8364065,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365291,"byte_end":8365297,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364190,"byte_end":8364254,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364259,"byte_end":8364262,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364267,"byte_end":8364335,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364340,"byte_end":8364370,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364375,"byte_end":8364378,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364383,"byte_end":8364451,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364456,"byte_end":8364459,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364464,"byte_end":8364502,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364507,"byte_end":8364510,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364515,"byte_end":8364527,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364532,"byte_end":8364535,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364540,"byte_end":8364604,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364609,"byte_end":8364612,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364617,"byte_end":8364663,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364668,"byte_end":8364734,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364739,"byte_end":8364759,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364764,"byte_end":8364838,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364843,"byte_end":8364872,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364877,"byte_end":8364908,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364913,"byte_end":8364916,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364921,"byte_end":8364935,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364940,"byte_end":8364943,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364948,"byte_end":8364961,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8364966,"byte_end":8364996,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365001,"byte_end":8365017,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365022,"byte_end":8365025,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365030,"byte_end":8365048,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365053,"byte_end":8365092,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365097,"byte_end":8365122,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365127,"byte_end":8365155,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365160,"byte_end":8365199,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365204,"byte_end":8365224,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365229,"byte_end":8365232,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365237,"byte_end":8365251,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365256,"byte_end":8365261,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8365266,"byte_end":8365273,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368303,"byte_end":8368307,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366170,"byte_end":8366220,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366221,"byte_end":8366224,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366225,"byte_end":8366303,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366304,"byte_end":8366322,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366323,"byte_end":8366326,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366327,"byte_end":8366407,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366408,"byte_end":8366487,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366488,"byte_end":8366533,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366534,"byte_end":8366537,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366538,"byte_end":8366614,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366615,"byte_end":8366694,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366695,"byte_end":8366770,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366771,"byte_end":8366847,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366848,"byte_end":8366925,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8366926,"byte_end":8367003,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367004,"byte_end":8367025,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367026,"byte_end":8367029,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367030,"byte_end":8367103,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367104,"byte_end":8367184,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367185,"byte_end":8367231,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367232,"byte_end":8367235,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367236,"byte_end":8367267,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367268,"byte_end":8367313,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367314,"byte_end":8367363,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367364,"byte_end":8367410,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367411,"byte_end":8367462,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367463,"byte_end":8367516,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367517,"byte_end":8367550,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367551,"byte_end":8367554,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367555,"byte_end":8367569,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367570,"byte_end":8367573,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367574,"byte_end":8367633,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367634,"byte_end":8367637,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367638,"byte_end":8367651,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367652,"byte_end":8367676,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367677,"byte_end":8367722,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367723,"byte_end":8367726,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367727,"byte_end":8367772,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367773,"byte_end":8367823,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367824,"byte_end":8367868,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367869,"byte_end":8367881,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367882,"byte_end":8367889,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367890,"byte_end":8367897,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367898,"byte_end":8367901,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367902,"byte_end":8367947,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367948,"byte_end":8367951,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367952,"byte_end":8367965,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367966,"byte_end":8367990,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8367991,"byte_end":8368038,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368039,"byte_end":8368042,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368043,"byte_end":8368088,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368089,"byte_end":8368137,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368138,"byte_end":8368141,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368142,"byte_end":8368172,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368173,"byte_end":8368216,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368217,"byte_end":8368220,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368221,"byte_end":8368262,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368263,"byte_end":8368275,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368276,"byte_end":8368283,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368284,"byte_end":8368291,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369853,"byte_end":8369857,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"fn (path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368822,"byte_end":8368868,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368873,"byte_end":8368876,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368881,"byte_end":8368922,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368927,"byte_end":8368930,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368935,"byte_end":8368974,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368979,"byte_end":8368982,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368987,"byte_end":8368999,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369004,"byte_end":8369007,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369012,"byte_end":8369086,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369091,"byte_end":8369162,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369167,"byte_end":8369211,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369216,"byte_end":8369219,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369224,"byte_end":8369238,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369243,"byte_end":8369246,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369251,"byte_end":8369264,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369269,"byte_end":8369293,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369298,"byte_end":8369324,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369329,"byte_end":8369332,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369337,"byte_end":8369382,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369387,"byte_end":8369435,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369440,"byte_end":8369443,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369448,"byte_end":8369478,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369483,"byte_end":8369526,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369531,"byte_end":8369534,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369539,"byte_end":8369580,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369585,"byte_end":8369597,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369602,"byte_end":8369609,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369614,"byte_end":8369621,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369626,"byte_end":8369629,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369634,"byte_end":8369706,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369711,"byte_end":8369714,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369719,"byte_end":8369779,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8369784,"byte_end":8369835,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371075,"byte_end":8371081,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"fn (path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370054,"byte_end":8370090,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370095,"byte_end":8370098,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370103,"byte_end":8370179,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370184,"byte_end":8370202,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370207,"byte_end":8370210,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370215,"byte_end":8370256,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370261,"byte_end":8370264,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370269,"byte_end":8370308,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370313,"byte_end":8370316,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370321,"byte_end":8370333,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370338,"byte_end":8370341,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370346,"byte_end":8370419,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370424,"byte_end":8370479,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370484,"byte_end":8370487,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370492,"byte_end":8370529,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370534,"byte_end":8370537,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370542,"byte_end":8370556,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370561,"byte_end":8370564,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370569,"byte_end":8370582,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370587,"byte_end":8370611,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370616,"byte_end":8370642,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370647,"byte_end":8370650,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370655,"byte_end":8370700,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370705,"byte_end":8370755,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370760,"byte_end":8370804,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370809,"byte_end":8370821,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370826,"byte_end":8370833,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370838,"byte_end":8370845,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370850,"byte_end":8370853,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370858,"byte_end":8370929,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370934,"byte_end":8370937,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8370942,"byte_end":8370999,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371004,"byte_end":8371057,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371718,"byte_end":8371726,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"fn (std: sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371294,"byte_end":8371363,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371368,"byte_end":8371371,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371376,"byte_end":8371400,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371405,"byte_end":8371421,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371426,"byte_end":8371429,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371434,"byte_end":8371448,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371453,"byte_end":8371456,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371461,"byte_end":8371474,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371479,"byte_end":8371554,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371559,"byte_end":8371574,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371579,"byte_end":8371638,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371643,"byte_end":8371694,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371699,"byte_end":8371706,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372638,"byte_end":8372642,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"fn (&mut self, mut pos: SeekFrom) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371916,"byte_end":8371962,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371967,"byte_end":8371970,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371975,"byte_end":8371989,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8371994,"byte_end":8371997,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372002,"byte_end":8372015,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372020,"byte_end":8372044,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372049,"byte_end":8372075,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372080,"byte_end":8372083,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372088,"byte_end":8372114,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372119,"byte_end":8372122,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372127,"byte_end":8372172,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372177,"byte_end":8372225,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372230,"byte_end":8372271,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372276,"byte_end":8372279,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372284,"byte_end":8372321,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372326,"byte_end":8372368,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372373,"byte_end":8372385,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372390,"byte_end":8372397,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372402,"byte_end":8372409,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372414,"byte_end":8372417,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372422,"byte_end":8372493,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372498,"byte_end":8372501,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372506,"byte_end":8372564,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8372569,"byte_end":8372620,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374383,"byte_end":8374391,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373627,"byte_end":8373681,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373686,"byte_end":8373689,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373694,"byte_end":8373768,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373773,"byte_end":8373805,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373810,"byte_end":8373813,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373818,"byte_end":8373832,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373837,"byte_end":8373840,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373845,"byte_end":8373858,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373863,"byte_end":8373887,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373892,"byte_end":8373918,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373923,"byte_end":8373926,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373931,"byte_end":8373976,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8373981,"byte_end":8374031,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374036,"byte_end":8374080,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374085,"byte_end":8374112,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374117,"byte_end":8374129,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374134,"byte_end":8374141,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374146,"byte_end":8374153,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374158,"byte_end":8374161,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374166,"byte_end":8374237,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374242,"byte_end":8374245,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374250,"byte_end":8374307,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374312,"byte_end":8374365,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375532,"byte_end":8375541,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374558,"byte_end":8374624,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374629,"byte_end":8374677,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374682,"byte_end":8374685,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374690,"byte_end":8374765,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374770,"byte_end":8374842,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374847,"byte_end":8374862,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374867,"byte_end":8374870,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374875,"byte_end":8374953,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374958,"byte_end":8374961,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374966,"byte_end":8374980,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374985,"byte_end":8374988,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8374993,"byte_end":8375006,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375011,"byte_end":8375035,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375040,"byte_end":8375066,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375071,"byte_end":8375074,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375079,"byte_end":8375124,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375129,"byte_end":8375179,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375184,"byte_end":8375228,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375233,"byte_end":8375261,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375266,"byte_end":8375278,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375283,"byte_end":8375290,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375295,"byte_end":8375302,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375307,"byte_end":8375310,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375315,"byte_end":8375386,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375391,"byte_end":8375394,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375399,"byte_end":8375456,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375461,"byte_end":8375514,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376766,"byte_end":8376773,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"fn (&mut self, size: u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375709,"byte_end":8375801,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375806,"byte_end":8375809,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375814,"byte_end":8375889,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375894,"byte_end":8375966,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8375971,"byte_end":8376047,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376052,"byte_end":8376064,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376069,"byte_end":8376072,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376077,"byte_end":8376089,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376094,"byte_end":8376097,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376102,"byte_end":8376170,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376175,"byte_end":8376187,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376192,"byte_end":8376195,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376200,"byte_end":8376214,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376219,"byte_end":8376222,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376227,"byte_end":8376240,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376245,"byte_end":8376269,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376274,"byte_end":8376300,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376305,"byte_end":8376308,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376313,"byte_end":8376358,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376363,"byte_end":8376413,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376418,"byte_end":8376462,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376467,"byte_end":8376495,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376500,"byte_end":8376512,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376517,"byte_end":8376524,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376529,"byte_end":8376536,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376541,"byte_end":8376544,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376549,"byte_end":8376620,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376625,"byte_end":8376628,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376633,"byte_end":8376690,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8376695,"byte_end":8376748,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378259,"byte_end":8378267,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8377873,"byte_end":8377920,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8377925,"byte_end":8377928,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8377933,"byte_end":8377947,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8377952,"byte_end":8377955,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8377960,"byte_end":8377973,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8377978,"byte_end":8378002,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378007,"byte_end":8378010,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378015,"byte_end":8378060,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378065,"byte_end":8378109,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378114,"byte_end":8378156,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378161,"byte_end":8378164,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378169,"byte_end":8378200,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378205,"byte_end":8378217,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378222,"byte_end":8378229,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378234,"byte_end":8378241,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378891,"byte_end":8378900,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"fn (&self) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378395,"byte_end":8378471,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378476,"byte_end":8378554,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378559,"byte_end":8378593,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378598,"byte_end":8378601,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378606,"byte_end":8378620,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378625,"byte_end":8378628,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378633,"byte_end":8378646,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378651,"byte_end":8378675,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378680,"byte_end":8378683,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378688,"byte_end":8378733,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378738,"byte_end":8378782,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378787,"byte_end":8378832,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378837,"byte_end":8378849,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378854,"byte_end":8378861,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8378866,"byte_end":8378873,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379630,"byte_end":8379638,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"fn (mut self) -> sys::File","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379079,"byte_end":8379150,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379155,"byte_end":8379211,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379216,"byte_end":8379219,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379224,"byte_end":8379287,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379292,"byte_end":8379295,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379300,"byte_end":8379324,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379329,"byte_end":8379332,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379337,"byte_end":8379351,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379356,"byte_end":8379359,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379364,"byte_end":8379377,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379382,"byte_end":8379406,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379411,"byte_end":8379414,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379419,"byte_end":8379464,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379469,"byte_end":8379519,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379524,"byte_end":8379571,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379576,"byte_end":8379588,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379593,"byte_end":8379600,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379605,"byte_end":8379612,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380336,"byte_end":8380348,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"fn (mut self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379782,"byte_end":8379856,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379861,"byte_end":8379864,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379869,"byte_end":8379893,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379898,"byte_end":8379901,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379906,"byte_end":8379918,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379923,"byte_end":8379926,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8379931,"byte_end":8379997,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380002,"byte_end":8380029,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380034,"byte_end":8380037,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380042,"byte_end":8380056,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380061,"byte_end":8380064,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380069,"byte_end":8380082,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380087,"byte_end":8380111,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380116,"byte_end":8380119,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380124,"byte_end":8380169,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380174,"byte_end":8380224,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380229,"byte_end":8380283,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380288,"byte_end":8380300,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380305,"byte_end":8380312,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380317,"byte_end":8380324,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381626,"byte_end":8381641,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"fn (&self, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380601,"byte_end":8380652,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380657,"byte_end":8380660,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380665,"byte_end":8380697,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380702,"byte_end":8380705,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380710,"byte_end":8380786,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380791,"byte_end":8380864,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380869,"byte_end":8380909,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380914,"byte_end":8380917,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8380922,"byte_end":8381007,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381012,"byte_end":8381015,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381020,"byte_end":8381032,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381037,"byte_end":8381040,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381045,"byte_end":8381119,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381124,"byte_end":8381199,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381204,"byte_end":8381238,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381243,"byte_end":8381246,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381251,"byte_end":8381265,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381270,"byte_end":8381273,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381278,"byte_end":8381291,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381296,"byte_end":8381320,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381325,"byte_end":8381328,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381333,"byte_end":8381378,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381383,"byte_end":8381427,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381432,"byte_end":8381489,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381494,"byte_end":8381523,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381528,"byte_end":8381567,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381572,"byte_end":8381584,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381589,"byte_end":8381596,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8381601,"byte_end":8381608,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391647,"byte_end":8391656,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"fn (src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390600,"byte_end":8390646,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390647,"byte_end":8390650,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390651,"byte_end":8390710,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390711,"byte_end":8390714,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390715,"byte_end":8390744,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390745,"byte_end":8390748,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390749,"byte_end":8390828,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390829,"byte_end":8390905,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390906,"byte_end":8390909,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390910,"byte_end":8390942,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390943,"byte_end":8390946,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8390947,"byte_end":8391017,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391018,"byte_end":8391067,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391068,"byte_end":8391124,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391125,"byte_end":8391128,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391129,"byte_end":8391214,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391215,"byte_end":8391218,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391219,"byte_end":8391231,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391232,"byte_end":8391235,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391236,"byte_end":8391314,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391315,"byte_end":8391347,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391348,"byte_end":8391351,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391352,"byte_end":8391404,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391405,"byte_end":8391408,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391409,"byte_end":8391423,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391424,"byte_end":8391427,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391428,"byte_end":8391441,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391442,"byte_end":8391460,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391461,"byte_end":8391464,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391465,"byte_end":8391483,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391484,"byte_end":8391528,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391529,"byte_end":8391604,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391605,"byte_end":8391619,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391620,"byte_end":8391625,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8391626,"byte_end":8391633,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1060},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8393051,"byte_end":8393059,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"fn (path: impl AsRef<Path>) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8391946,"byte_end":8392020,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392021,"byte_end":8392040,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392041,"byte_end":8392044,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392045,"byte_end":8392103,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392104,"byte_end":8392107,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392108,"byte_end":8392185,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392186,"byte_end":8392207,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392208,"byte_end":8392211,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392212,"byte_end":8392244,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392245,"byte_end":8392248,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392249,"byte_end":8392327,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392328,"byte_end":8392406,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392407,"byte_end":8392432,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392433,"byte_end":8392436,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392437,"byte_end":8392465,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392466,"byte_end":8392551,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392552,"byte_end":8392555,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392556,"byte_end":8392568,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392569,"byte_end":8392572,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392573,"byte_end":8392651,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392652,"byte_end":8392684,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392685,"byte_end":8392688,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392689,"byte_end":8392759,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392760,"byte_end":8392788,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392789,"byte_end":8392792,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392793,"byte_end":8392807,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392808,"byte_end":8392811,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392812,"byte_end":8392830,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392831,"byte_end":8392849,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392850,"byte_end":8392853,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392854,"byte_end":8392872,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392873,"byte_end":8392917,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392918,"byte_end":8392980,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8392981,"byte_end":8393008,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8393009,"byte_end":8393023,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8393024,"byte_end":8393029,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8393030,"byte_end":8393037,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1329},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395155,"byte_end":8395166,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393270,"byte_end":8393344,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393345,"byte_end":8393348,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393349,"byte_end":8393427,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393428,"byte_end":8393502,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393503,"byte_end":8393580,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393581,"byte_end":8393593,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393594,"byte_end":8393597,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393598,"byte_end":8393674,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393675,"byte_end":8393754,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393755,"byte_end":8393823,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393824,"byte_end":8393902,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393903,"byte_end":8393910,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393911,"byte_end":8393914,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393915,"byte_end":8393991,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8393992,"byte_end":8394014,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394015,"byte_end":8394018,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394019,"byte_end":8394098,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394099,"byte_end":8394134,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394135,"byte_end":8394138,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394139,"byte_end":8394168,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394169,"byte_end":8394200,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394201,"byte_end":8394230,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394231,"byte_end":8394249,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394250,"byte_end":8394280,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394281,"byte_end":8394315,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394316,"byte_end":8394366,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394367,"byte_end":8394370,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394371,"byte_end":8394385,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394386,"byte_end":8394389,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394390,"byte_end":8394417,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394418,"byte_end":8394421,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394422,"byte_end":8394435,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394436,"byte_end":8394467,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394468,"byte_end":8394484,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394485,"byte_end":8394488,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394489,"byte_end":8394507,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394508,"byte_end":8394547,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394548,"byte_end":8394585,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394586,"byte_end":8394609,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394610,"byte_end":8394638,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394639,"byte_end":8394659,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394660,"byte_end":8394663,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394664,"byte_end":8394678,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394679,"byte_end":8394684,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394685,"byte_end":8394692,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394693,"byte_end":8394696,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394697,"byte_end":8394774,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394775,"byte_end":8394793,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394794,"byte_end":8394797,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394798,"byte_end":8394811,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394812,"byte_end":8394843,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394844,"byte_end":8394860,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394861,"byte_end":8394864,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394865,"byte_end":8394883,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394884,"byte_end":8394923,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394924,"byte_end":8394961,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394962,"byte_end":8394985,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8394986,"byte_end":8395010,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395011,"byte_end":8395036,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395037,"byte_end":8395065,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395066,"byte_end":8395086,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395087,"byte_end":8395090,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395091,"byte_end":8395105,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395106,"byte_end":8395111,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395112,"byte_end":8395119,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395687,"byte_end":8395690,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395214,"byte_end":8395277,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395282,"byte_end":8395285,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395290,"byte_end":8395335,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395340,"byte_end":8395343,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395348,"byte_end":8395414,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395419,"byte_end":8395422,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395427,"byte_end":8395463,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395468,"byte_end":8395471,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395476,"byte_end":8395490,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395495,"byte_end":8395498,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395503,"byte_end":8395516,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395521,"byte_end":8395552,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395557,"byte_end":8395560,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395565,"byte_end":8395606,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395611,"byte_end":8395663,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395668,"byte_end":8395675,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396419,"byte_end":8396423,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395770,"byte_end":8395806,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395811,"byte_end":8395814,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395819,"byte_end":8395884,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395889,"byte_end":8395915,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395920,"byte_end":8395923,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395928,"byte_end":8395995,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396000,"byte_end":8396003,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396008,"byte_end":8396045,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396050,"byte_end":8396053,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396058,"byte_end":8396072,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396077,"byte_end":8396080,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396085,"byte_end":8396098,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396103,"byte_end":8396134,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396139,"byte_end":8396155,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396160,"byte_end":8396163,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396168,"byte_end":8396186,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396191,"byte_end":8396230,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396235,"byte_end":8396272,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396277,"byte_end":8396300,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396305,"byte_end":8396333,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396338,"byte_end":8396358,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396363,"byte_end":8396366,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396371,"byte_end":8396385,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396390,"byte_end":8396395,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396400,"byte_end":8396407,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397174,"byte_end":8397179,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396520,"byte_end":8396557,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396562,"byte_end":8396565,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396570,"byte_end":8396635,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396640,"byte_end":8396667,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396672,"byte_end":8396675,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396680,"byte_end":8396748,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396753,"byte_end":8396756,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396761,"byte_end":8396799,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396804,"byte_end":8396807,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396812,"byte_end":8396826,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396831,"byte_end":8396834,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396839,"byte_end":8396852,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396857,"byte_end":8396888,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396893,"byte_end":8396909,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396914,"byte_end":8396917,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396922,"byte_end":8396940,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396945,"byte_end":8396984,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8396989,"byte_end":8397026,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397031,"byte_end":8397055,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397060,"byte_end":8397088,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397093,"byte_end":8397113,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397118,"byte_end":8397121,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397126,"byte_end":8397140,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397145,"byte_end":8397150,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397155,"byte_end":8397162,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399409,"byte_end":8399415,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397279,"byte_end":8397319,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397324,"byte_end":8397327,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397332,"byte_end":8397407,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397412,"byte_end":8397468,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397473,"byte_end":8397540,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397545,"byte_end":8397565,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397570,"byte_end":8397573,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397578,"byte_end":8397655,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397660,"byte_end":8397736,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397741,"byte_end":8397750,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397755,"byte_end":8397758,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397763,"byte_end":8397837,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397842,"byte_end":8397913,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397918,"byte_end":8397994,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8397999,"byte_end":8398063,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398068,"byte_end":8398125,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398130,"byte_end":8398133,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398138,"byte_end":8398213,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398218,"byte_end":8398296,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398301,"byte_end":8398374,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398379,"byte_end":8398466,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398471,"byte_end":8398474,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398479,"byte_end":8398548,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398553,"byte_end":8398556,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398561,"byte_end":8398600,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398605,"byte_end":8398608,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398613,"byte_end":8398624,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398629,"byte_end":8398632,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398637,"byte_end":8398718,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398723,"byte_end":8398743,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398748,"byte_end":8398751,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398756,"byte_end":8398804,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398809,"byte_end":8398857,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398862,"byte_end":8398905,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398910,"byte_end":8398945,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398950,"byte_end":8398993,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8398998,"byte_end":8399033,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399038,"byte_end":8399041,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399046,"byte_end":8399060,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399065,"byte_end":8399068,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399073,"byte_end":8399086,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399091,"byte_end":8399122,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399127,"byte_end":8399143,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399148,"byte_end":8399151,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399156,"byte_end":8399174,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399179,"byte_end":8399218,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399223,"byte_end":8399260,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399265,"byte_end":8399290,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399295,"byte_end":8399323,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399328,"byte_end":8399348,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399353,"byte_end":8399356,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399361,"byte_end":8399375,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399380,"byte_end":8399385,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399390,"byte_end":8399397,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400332,"byte_end":8400340,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399518,"byte_end":8399569,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399574,"byte_end":8399577,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399582,"byte_end":8399656,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399661,"byte_end":8399707,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399712,"byte_end":8399715,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399720,"byte_end":8399787,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399792,"byte_end":8399795,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399800,"byte_end":8399871,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399876,"byte_end":8399879,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399884,"byte_end":8399925,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399930,"byte_end":8399933,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399938,"byte_end":8399952,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399957,"byte_end":8399960,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399965,"byte_end":8399978,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8399983,"byte_end":8400014,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400019,"byte_end":8400035,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400040,"byte_end":8400043,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400048,"byte_end":8400066,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400071,"byte_end":8400110,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400115,"byte_end":8400152,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400157,"byte_end":8400181,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400186,"byte_end":8400213,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400218,"byte_end":8400246,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400251,"byte_end":8400271,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400276,"byte_end":8400279,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400284,"byte_end":8400298,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400303,"byte_end":8400308,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400313,"byte_end":8400320,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401337,"byte_end":8401343,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400449,"byte_end":8400493,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400498,"byte_end":8400501,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400506,"byte_end":8400578,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400583,"byte_end":8400614,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400619,"byte_end":8400622,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400627,"byte_end":8400703,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400708,"byte_end":8400720,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400725,"byte_end":8400728,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400733,"byte_end":8400802,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400807,"byte_end":8400810,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400815,"byte_end":8400854,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400859,"byte_end":8400892,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400897,"byte_end":8400932,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400937,"byte_end":8400940,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400945,"byte_end":8400959,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400964,"byte_end":8400967,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400972,"byte_end":8400985,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8400990,"byte_end":8401021,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401026,"byte_end":8401042,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401047,"byte_end":8401050,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401055,"byte_end":8401073,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401078,"byte_end":8401117,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401122,"byte_end":8401159,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401164,"byte_end":8401188,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401193,"byte_end":8401218,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401223,"byte_end":8401251,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401256,"byte_end":8401276,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401281,"byte_end":8401284,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401289,"byte_end":8401303,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401308,"byte_end":8401313,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401318,"byte_end":8401325,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402742,"byte_end":8402752,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn (&mut self, create_new: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401446,"byte_end":8401494,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401499,"byte_end":8401502,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401507,"byte_end":8401580,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401585,"byte_end":8401657,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401662,"byte_end":8401665,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401670,"byte_end":8401744,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401749,"byte_end":8401821,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401826,"byte_end":8401892,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401897,"byte_end":8401900,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401905,"byte_end":8401977,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401982,"byte_end":8401994,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8401999,"byte_end":8402002,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402007,"byte_end":8402083,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402088,"byte_end":8402101,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402106,"byte_end":8402109,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402114,"byte_end":8402187,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402192,"byte_end":8402195,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402200,"byte_end":8402243,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402248,"byte_end":8402286,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402291,"byte_end":8402333,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402338,"byte_end":8402341,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402346,"byte_end":8402360,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402365,"byte_end":8402368,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402373,"byte_end":8402386,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402391,"byte_end":8402422,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402427,"byte_end":8402443,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402448,"byte_end":8402451,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402456,"byte_end":8402474,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402479,"byte_end":8402518,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402523,"byte_end":8402560,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402565,"byte_end":8402589,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402594,"byte_end":8402623,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402628,"byte_end":8402656,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402661,"byte_end":8402681,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402686,"byte_end":8402689,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402694,"byte_end":8402708,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402713,"byte_end":8402718,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402723,"byte_end":8402730,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405204,"byte_end":8405208,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"fn (&self, path: impl AsRef<Path>) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402867,"byte_end":8402931,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402936,"byte_end":8402939,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8402944,"byte_end":8403011,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403016,"byte_end":8403019,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403024,"byte_end":8403061,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403066,"byte_end":8403069,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403074,"byte_end":8403086,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403091,"byte_end":8403094,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403099,"byte_end":8403165,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403170,"byte_end":8403245,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403250,"byte_end":8403324,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403329,"byte_end":8403404,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403409,"byte_end":8403463,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403468,"byte_end":8403471,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403476,"byte_end":8403550,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403555,"byte_end":8403584,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403589,"byte_end":8403662,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403667,"byte_end":8403683,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403688,"byte_end":8403762,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403767,"byte_end":8403800,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403805,"byte_end":8403877,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403882,"byte_end":8403931,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8403936,"byte_end":8404008,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404013,"byte_end":8404026,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404031,"byte_end":8404101,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404106,"byte_end":8404160,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404165,"byte_end":8404240,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404245,"byte_end":8404281,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404286,"byte_end":8404355,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404360,"byte_end":8404433,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404438,"byte_end":8404505,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404510,"byte_end":8404561,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404566,"byte_end":8404569,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404574,"byte_end":8404588,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404593,"byte_end":8404596,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404601,"byte_end":8404614,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404619,"byte_end":8404650,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404655,"byte_end":8404671,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404676,"byte_end":8404679,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404684,"byte_end":8404702,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404707,"byte_end":8404746,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404751,"byte_end":8404812,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404817,"byte_end":8404831,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404836,"byte_end":8404841,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404846,"byte_end":8404853,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404858,"byte_end":8404861,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404866,"byte_end":8404903,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404908,"byte_end":8404964,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8404969,"byte_end":8405023,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405028,"byte_end":8405074,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405079,"byte_end":8405119,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405124,"byte_end":8405186,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":1092}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"! OS-specific functionality.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8405875,"byte_end":8405905,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1092},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1120}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8405907,"byte_end":8405919,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"! Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8405969,"byte_end":8406037,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406538,"byte_end":8406545,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"fn (src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406285,"byte_end":8406335,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406336,"byte_end":8406339,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406340,"byte_end":8406410,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406411,"byte_end":8406414,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406415,"byte_end":8406482,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406483,"byte_end":8406486,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8406487,"byte_end":8406524,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1107},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407136,"byte_end":8407150,"line_start":11,"line_end":11,"column_start":11,"column_end":25},"name":"OpenOptionsExt","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt","value":"OpenOptionsExt","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::OpenOptions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::OpenOptions`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8406862,"byte_end":8406914,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8406915,"byte_end":8406918,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This mirrors the definition of [`std::os::unix::fs::OpenOptionsExt`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8406919,"byte_end":8406992,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8406993,"byte_end":8406996,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8406997,"byte_end":8407000,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`fs::OpenOptions`]: crate::fs::OpenOptions","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407001,"byte_end":8407048,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ [`std::os::unix::fs::OpenOptionsExt`]: std::os::unix::fs::OpenOptionsExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407049,"byte_end":8407125,"line_start":10,"line_end":10,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408044,"byte_end":8408048,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::mode","value":"fn (&mut self, mode: u32) -> &mut Self","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[{"value":"/ Sets the mode bits that a new file will be created with.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407157,"byte_end":8407217,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407222,"byte_end":8407225,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If a new file is created as part of an `OpenOptions::open` call then this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407230,"byte_end":8407307,"line_start":14,"line_end":14,"column_start":5,"column_end":82}},{"value":"/ specified `mode` will be used as the permission bits for the new file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407312,"byte_end":8407386,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ If no `mode` is set, the default of `0o666` will be used.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407391,"byte_end":8407452,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ The operating system masks out bits with the system's `umask`, to produce","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407457,"byte_end":8407534,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ the final permissions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407539,"byte_end":8407565,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407570,"byte_end":8407573,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407578,"byte_end":8407592,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407597,"byte_end":8407600,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407605,"byte_end":8407618,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407623,"byte_end":8407654,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407659,"byte_end":8407703,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407708,"byte_end":8407724,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407729,"byte_end":8407732,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407737,"byte_end":8407755,"line_start":27,"line_end":27,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407760,"byte_end":8407799,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407804,"byte_end":8407849,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/     options.mode(0o644); // Give read/write for owner and read for others.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407854,"byte_end":8407932,"line_start":30,"line_end":30,"column_start":5,"column_end":83}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407937,"byte_end":8407987,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8407992,"byte_end":8407995,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408000,"byte_end":8408014,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408019,"byte_end":8408024,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408029,"byte_end":8408036,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8409013,"byte_end":8409025,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"custom_flags","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::custom_flags","value":"fn (&mut self, flags: i32) -> &mut Self","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[{"value":"/ Pass custom flags to the `flags` argument of `open`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408090,"byte_end":8408146,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408151,"byte_end":8408154,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The bits that define the access mode are masked out with `O_ACCMODE`, to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408159,"byte_end":8408235,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ ensure they do not interfere with the access mode set by Rusts options.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408240,"byte_end":8408315,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408320,"byte_end":8408323,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Custom flags can only set flags, not remove flags set by Rusts options.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408328,"byte_end":8408403,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ This options overwrites any previously set custom flags.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408408,"byte_end":8408468,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408473,"byte_end":8408476,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408481,"byte_end":8408495,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408500,"byte_end":8408503,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408508,"byte_end":8408521,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ use libc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408526,"byte_end":8408539,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408544,"byte_end":8408575,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408580,"byte_end":8408624,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408629,"byte_end":8408645,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408650,"byte_end":8408653,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408658,"byte_end":8408676,"line_start":54,"line_end":54,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408681,"byte_end":8408720,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408725,"byte_end":8408770,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/     options.write(true);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408775,"byte_end":8408803,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/     if cfg!(unix) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408808,"byte_end":8408831,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/         options.custom_flags(libc::O_NOFOLLOW);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408836,"byte_end":8408887,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408892,"byte_end":8408901,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408906,"byte_end":8408956,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408961,"byte_end":8408964,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408969,"byte_end":8408983,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408988,"byte_end":8408993,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8408998,"byte_end":8409005,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1116},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409501,"byte_end":8409514,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"DirBuilderExt","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt","value":"DirBuilderExt","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":" Unix-specific extensions to [`DirBuilder`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`DirBuilder`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409397,"byte_end":8409444,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409445,"byte_end":8409448,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DirBuilder`]: crate::fs::DirBuilder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409449,"byte_end":8409490,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409863,"byte_end":8409867,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt::mode","value":"fn (&mut self, mode: u32) -> &mut Self","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":" Sets the mode to create new directories with.","sig":null,"attributes":[{"value":"/ Sets the mode to create new directories with.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409521,"byte_end":8409570,"line_start":7,"line_end":7,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409575,"byte_end":8409578,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This option defaults to 0o777.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409583,"byte_end":8409617,"line_start":9,"line_end":9,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409622,"byte_end":8409625,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409630,"byte_end":8409644,"line_start":11,"line_end":11,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409649,"byte_end":8409652,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409657,"byte_end":8409660,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409665,"byte_end":8409678,"line_start":14,"line_end":14,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409683,"byte_end":8409713,"line_start":15,"line_end":15,"column_start":5,"column_end":35}},{"value":"/ use tokio::fs::os::unix::DirBuilderExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409718,"byte_end":8409761,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409766,"byte_end":8409769,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409774,"byte_end":8409814,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/ builder.mode(0o775);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409819,"byte_end":8409843,"line_start":19,"line_end":19,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409848,"byte_end":8409855,"line_start":20,"line_end":20,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411424,"byte_end":8411428,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"fn (path: impl AsRef<Path>) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410100,"byte_end":8410160,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410161,"byte_end":8410164,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410165,"byte_end":8410219,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410220,"byte_end":8410223,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410224,"byte_end":8410248,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410249,"byte_end":8410252,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410253,"byte_end":8410332,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410333,"byte_end":8410412,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410413,"byte_end":8410493,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410494,"byte_end":8410546,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410547,"byte_end":8410550,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410551,"byte_end":8410588,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410589,"byte_end":8410646,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410647,"byte_end":8410650,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410651,"byte_end":8410663,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410664,"byte_end":8410667,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410668,"byte_end":8410740,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410741,"byte_end":8410814,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410815,"byte_end":8410818,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410819,"byte_end":8410870,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410871,"byte_end":8410874,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410875,"byte_end":8410947,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8410948,"byte_end":8411000,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411001,"byte_end":8411004,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411005,"byte_end":8411068,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411069,"byte_end":8411072,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411073,"byte_end":8411087,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411088,"byte_end":8411091,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411092,"byte_end":8411105,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411106,"byte_end":8411124,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411125,"byte_end":8411154,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411155,"byte_end":8411158,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411159,"byte_end":8411177,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411178,"byte_end":8411251,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411252,"byte_end":8411306,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411307,"byte_end":8411381,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411382,"byte_end":8411396,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411397,"byte_end":8411402,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8411403,"byte_end":8411410,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412014,"byte_end":8412022,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8411866,"byte_end":8411923,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8411924,"byte_end":8411927,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8411928,"byte_end":8412000,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412834,"byte_end":8412841,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412216,"byte_end":8412257,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412258,"byte_end":8412261,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412262,"byte_end":8412339,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412340,"byte_end":8412404,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412405,"byte_end":8412477,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412478,"byte_end":8412490,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412491,"byte_end":8412494,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412495,"byte_end":8412507,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412508,"byte_end":8412511,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412512,"byte_end":8412591,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412592,"byte_end":8412622,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412623,"byte_end":8412626,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412627,"byte_end":8412653,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412654,"byte_end":8412680,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412681,"byte_end":8412718,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412719,"byte_end":8412756,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8412774,"byte_end":8412822,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8413095,"byte_end":8413105,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"fn (&mut self) -> io::Result<Option<DirEntry>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8413026,"byte_end":8413077,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8413277,"byte_end":8413292,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415048,"byte_end":8415056,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414597,"byte_end":8414644,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414645,"byte_end":8414648,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414649,"byte_end":8414680,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414681,"byte_end":8414684,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414685,"byte_end":8414762,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414763,"byte_end":8414781,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414782,"byte_end":8414785,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414786,"byte_end":8414864,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414865,"byte_end":8414944,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414945,"byte_end":8415019,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415888,"byte_end":8415892,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415103,"byte_end":8415168,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415173,"byte_end":8415176,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415181,"byte_end":8415252,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415257,"byte_end":8415293,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415298,"byte_end":8415301,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415306,"byte_end":8415320,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415325,"byte_end":8415328,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415333,"byte_end":8415346,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415351,"byte_end":8415369,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415374,"byte_end":8415377,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415382,"byte_end":8415427,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415432,"byte_end":8415479,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415484,"byte_end":8415487,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415492,"byte_end":8415549,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415554,"byte_end":8415593,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415598,"byte_end":8415603,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415608,"byte_end":8415620,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415625,"byte_end":8415632,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415637,"byte_end":8415644,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415649,"byte_end":8415652,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415657,"byte_end":8415685,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415690,"byte_end":8415693,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415698,"byte_end":8415709,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415714,"byte_end":8415734,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415739,"byte_end":8415755,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415760,"byte_end":8415782,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415787,"byte_end":8415794,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415799,"byte_end":8415802,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415807,"byte_end":8415876,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416412,"byte_end":8416421,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415946,"byte_end":8416018,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416023,"byte_end":8416050,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416055,"byte_end":8416058,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416063,"byte_end":8416077,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416082,"byte_end":8416085,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416090,"byte_end":8416097,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416102,"byte_end":8416120,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416125,"byte_end":8416128,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416133,"byte_end":8416178,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416183,"byte_end":8416230,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416235,"byte_end":8416238,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416243,"byte_end":8416300,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416305,"byte_end":8416349,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416354,"byte_end":8416359,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416364,"byte_end":8416376,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416381,"byte_end":8416388,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416393,"byte_end":8416400,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417518,"byte_end":8417526,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416481,"byte_end":8416545,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416550,"byte_end":8416553,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416558,"byte_end":8416628,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416633,"byte_end":8416645,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416650,"byte_end":8416653,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416658,"byte_end":8416690,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416695,"byte_end":8416698,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416703,"byte_end":8416771,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416776,"byte_end":8416845,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416850,"byte_end":8416893,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416898,"byte_end":8416901,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416906,"byte_end":8416920,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416925,"byte_end":8416928,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416933,"byte_end":8416940,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416945,"byte_end":8416963,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416968,"byte_end":8416971,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8416976,"byte_end":8417021,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417026,"byte_end":8417073,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417078,"byte_end":8417081,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417086,"byte_end":8417143,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417148,"byte_end":8417202,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417207,"byte_end":8417261,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417266,"byte_end":8417339,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417344,"byte_end":8417360,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417365,"byte_end":8417435,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417440,"byte_end":8417449,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417454,"byte_end":8417459,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417464,"byte_end":8417476,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417481,"byte_end":8417488,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417493,"byte_end":8417500,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418710,"byte_end":8418719,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417652,"byte_end":8417717,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417722,"byte_end":8417725,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417730,"byte_end":8417800,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417805,"byte_end":8417817,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417822,"byte_end":8417825,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417830,"byte_end":8417862,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417867,"byte_end":8417870,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417875,"byte_end":8417945,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8417950,"byte_end":8418026,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418031,"byte_end":8418098,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418103,"byte_end":8418106,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418111,"byte_end":8418125,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418130,"byte_end":8418133,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418138,"byte_end":8418145,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418150,"byte_end":8418168,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418173,"byte_end":8418176,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418181,"byte_end":8418226,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418231,"byte_end":8418278,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418283,"byte_end":8418286,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418291,"byte_end":8418348,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418353,"byte_end":8418409,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418414,"byte_end":8418466,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418471,"byte_end":8418531,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418536,"byte_end":8418552,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418557,"byte_end":8418627,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418632,"byte_end":8418641,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418646,"byte_end":8418651,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418656,"byte_end":8418668,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418673,"byte_end":8418680,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418685,"byte_end":8418692,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8419200,"byte_end":8419209,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"fn (path: impl AsRef<Path>) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8419018,"byte_end":8419088,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8419089,"byte_end":8419092,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8419093,"byte_end":8419152,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8419153,"byte_end":8419156,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8419157,"byte_end":8419186,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419868,"byte_end":8419882,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"fn (path: impl AsRef<Path>) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419410,"byte_end":8419485,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419486,"byte_end":8419536,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419537,"byte_end":8419540,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419541,"byte_end":8419603,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419604,"byte_end":8419607,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419608,"byte_end":8419622,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419623,"byte_end":8419626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419627,"byte_end":8419640,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419641,"byte_end":8419659,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419660,"byte_end":8419663,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419664,"byte_end":8419709,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419710,"byte_end":8419766,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419767,"byte_end":8419825,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419826,"byte_end":8419838,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419839,"byte_end":8419846,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8419847,"byte_end":8419854,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8420230,"byte_end":8420240,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8420094,"byte_end":8420135,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8420136,"byte_end":8420139,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8420140,"byte_end":8420216,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8420654,"byte_end":8420668,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8420444,"byte_end":8420529,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8420530,"byte_end":8420533,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8420534,"byte_end":8420598,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8420599,"byte_end":8420602,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8420603,"byte_end":8420640,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8421205,"byte_end":8421216,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"fn (path: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8420876,"byte_end":8420915,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8420916,"byte_end":8420919,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8420920,"byte_end":8420998,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8420999,"byte_end":8421075,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8421076,"byte_end":8421089,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8421090,"byte_end":8421093,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8421094,"byte_end":8421155,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8421156,"byte_end":8421159,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8421160,"byte_end":8421191,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421684,"byte_end":8421690,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"fn (from: impl AsRef<Path>, to: impl AsRef<Path>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421421,"byte_end":8421498,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421499,"byte_end":8421523,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421524,"byte_end":8421527,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421528,"byte_end":8421597,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421598,"byte_end":8421601,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8421602,"byte_end":8421670,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8422166,"byte_end":8422181,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"fn (path: impl AsRef<Path>, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8421980,"byte_end":8422039,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8422040,"byte_end":8422043,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8422044,"byte_end":8422109,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8422110,"byte_end":8422113,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8422114,"byte_end":8422152,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1263},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8422610,"byte_end":8422626,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"fn (path: impl AsRef<Path>) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8422433,"byte_end":8422481,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8422482,"byte_end":8422485,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8422486,"byte_end":8422552,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8422553,"byte_end":8422556,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8422557,"byte_end":8422596,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423196,"byte_end":8423201,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"fn <C> (path: impl AsRef<Path>, contents: C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8422830,"byte_end":8422905,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8422906,"byte_end":8422939,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8422940,"byte_end":8422943,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8422944,"byte_end":8422997,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8422998,"byte_end":8423001,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423002,"byte_end":8423016,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423017,"byte_end":8423020,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423021,"byte_end":8423034,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423035,"byte_end":8423053,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423054,"byte_end":8423057,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423058,"byte_end":8423103,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423104,"byte_end":8423153,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423154,"byte_end":8423166,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423167,"byte_end":8423174,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8423175,"byte_end":8423182,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423928,"byte_end":8423932,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"fn <P, Q> (from: P, to: Q) -> Result<u64, std::io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423483,"byte_end":8423625,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423626,"byte_end":8423678,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423679,"byte_end":8423682,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423683,"byte_end":8423735,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423736,"byte_end":8423739,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423740,"byte_end":8423754,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423755,"byte_end":8423758,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423759,"byte_end":8423772,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423773,"byte_end":8423791,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423792,"byte_end":8423795,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423796,"byte_end":8423841,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423842,"byte_end":8423884,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423885,"byte_end":8423897,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423898,"byte_end":8423905,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8423906,"byte_end":8423913,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"! Asynchronous values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1355},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":1521},{"krate":0,"index":1617},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1704},{"krate":0,"index":1740},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1784},{"krate":0,"index":1802},{"krate":0,"index":1871},{"krate":0,"index":1875},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":3194},{"krate":0,"index":1912},{"krate":0,"index":3197}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"! respectively.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"! `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"! extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: std::io#read-and-write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"! [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!         // Write a byte to the buffer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"!         writer.flush().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"!     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! ## Conversion to and from Sink/Stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"! bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"! type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"! provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"! abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"! you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"! buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"! that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"! your structured data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! [input]: fn@stdin","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"! [output]: fn@stdout","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"! [error]: fn@stderr","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"! [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"! [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"! [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"! [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"! [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"! [`Error`]: struct@Error","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"! [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"! [`Result`]: type@Result","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"! [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"! [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"fn (&self, buf: &mut [MaybeUninit<u8>]) -> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, position: SeekFrom) -> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8451980,"byte_end":8451991,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454237,"byte_end":8454240,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453815,"byte_end":8453883,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453888,"byte_end":8453891,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453896,"byte_end":8453908,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453913,"byte_end":8453916,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453921,"byte_end":8453981,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453986,"byte_end":8453989,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453994,"byte_end":8454064,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454069,"byte_end":8454142,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454147,"byte_end":8454225,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455444,"byte_end":8455458,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"fn (io: E, ready: mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454340,"byte_end":8454434,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454439,"byte_end":8454533,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454538,"byte_end":8454633,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454638,"byte_end":8454732,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454737,"byte_end":8454765,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454770,"byte_end":8454773,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454778,"byte_end":8454815,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454820,"byte_end":8454823,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454828,"byte_end":8454839,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454844,"byte_end":8454861,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454866,"byte_end":8454897,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454902,"byte_end":8454947,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8454952,"byte_end":8455006,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455011,"byte_end":8455063,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455068,"byte_end":8455078,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455083,"byte_end":8455090,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455095,"byte_end":8455098,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455103,"byte_end":8455115,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455120,"byte_end":8455123,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455128,"byte_end":8455188,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455193,"byte_end":8455196,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455201,"byte_end":8455271,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455276,"byte_end":8455349,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455354,"byte_end":8455432,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455936,"byte_end":8455943,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455822,"byte_end":8455896,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8455901,"byte_end":8455924,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456119,"byte_end":8456126,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456004,"byte_end":8456079,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456084,"byte_end":8456107,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456662,"byte_end":8456672,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"fn (mut self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456195,"byte_end":8456244,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456249,"byte_end":8456252,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456257,"byte_end":8456331,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456336,"byte_end":8456411,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456416,"byte_end":8456419,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456424,"byte_end":8456499,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456504,"byte_end":8456580,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456585,"byte_end":8456650,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457829,"byte_end":8457844,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>, mask: mio::Ready) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456820,"byte_end":8456871,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456876,"byte_end":8456879,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456884,"byte_end":8456957,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8456962,"byte_end":8457033,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457038,"byte_end":8457113,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457118,"byte_end":8457125,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457130,"byte_end":8457133,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457138,"byte_end":8457214,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457219,"byte_end":8457285,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457290,"byte_end":8457293,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457298,"byte_end":8457371,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457376,"byte_end":8457420,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457425,"byte_end":8457428,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457433,"byte_end":8457488,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457493,"byte_end":8457496,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457501,"byte_end":8457513,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457518,"byte_end":8457521,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457526,"byte_end":8457554,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457559,"byte_end":8457562,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457567,"byte_end":8457599,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457604,"byte_end":8457648,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457653,"byte_end":8457656,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457661,"byte_end":8457674,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457679,"byte_end":8457682,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457687,"byte_end":8457760,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8457765,"byte_end":8457817,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458820,"byte_end":8458836,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"fn (&self, cx: &mut Context<'_>, ready: mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458221,"byte_end":8458297,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458302,"byte_end":8458366,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458371,"byte_end":8458374,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458379,"byte_end":8458441,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458446,"byte_end":8458517,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458522,"byte_end":8458525,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458530,"byte_end":8458605,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458610,"byte_end":8458642,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458647,"byte_end":8458650,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458655,"byte_end":8458667,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458672,"byte_end":8458675,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458680,"byte_end":8458708,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458713,"byte_end":8458716,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458721,"byte_end":8458759,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8458764,"byte_end":8458808,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460276,"byte_end":8460292,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459361,"byte_end":8459413,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459418,"byte_end":8459421,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459426,"byte_end":8459495,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459500,"byte_end":8459543,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459548,"byte_end":8459551,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459556,"byte_end":8459624,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459629,"byte_end":8459704,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459709,"byte_end":8459712,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459717,"byte_end":8459791,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459796,"byte_end":8459841,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459846,"byte_end":8459849,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459854,"byte_end":8459911,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459916,"byte_end":8459919,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459924,"byte_end":8459936,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459941,"byte_end":8459944,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459949,"byte_end":8459977,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459982,"byte_end":8459985,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8459990,"byte_end":8460047,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460052,"byte_end":8460096,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460101,"byte_end":8460104,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460109,"byte_end":8460122,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460127,"byte_end":8460130,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460135,"byte_end":8460208,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460213,"byte_end":8460264,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461141,"byte_end":8461158,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460568,"byte_end":8460645,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460650,"byte_end":8460715,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460720,"byte_end":8460723,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460728,"byte_end":8460804,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460809,"byte_end":8460854,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460859,"byte_end":8460862,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460867,"byte_end":8460942,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8460947,"byte_end":8461021,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461026,"byte_end":8461029,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461034,"byte_end":8461046,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461051,"byte_end":8461054,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461059,"byte_end":8461129,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465400,"byte_end":8465412,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466104,"byte_end":8466107,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"fn <T> (io: &T) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465532,"byte_end":8465588,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465593,"byte_end":8465596,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465601,"byte_end":8465613,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465618,"byte_end":8465621,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465626,"byte_end":8465678,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465683,"byte_end":8465742,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465747,"byte_end":8465750,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465755,"byte_end":8465758,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465763,"byte_end":8465775,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465780,"byte_end":8465783,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465788,"byte_end":8465848,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465853,"byte_end":8465856,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465861,"byte_end":8465931,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465936,"byte_end":8466009,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466014,"byte_end":8466092,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467510,"byte_end":8467524,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"fn <T> (io: &T, ready: mio::Ready) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466254,"byte_end":8466345,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466350,"byte_end":8466444,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466449,"byte_end":8466543,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466548,"byte_end":8466643,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466648,"byte_end":8466669,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466674,"byte_end":8466677,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466682,"byte_end":8466719,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466724,"byte_end":8466727,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466732,"byte_end":8466743,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466748,"byte_end":8466765,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466770,"byte_end":8466801,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466806,"byte_end":8466851,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466856,"byte_end":8466910,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466915,"byte_end":8466967,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466972,"byte_end":8466982,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466987,"byte_end":8466994,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8466999,"byte_end":8467002,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467007,"byte_end":8467019,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467024,"byte_end":8467027,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467032,"byte_end":8467084,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467089,"byte_end":8467148,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467153,"byte_end":8467156,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467161,"byte_end":8467164,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467169,"byte_end":8467181,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467186,"byte_end":8467189,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467194,"byte_end":8467254,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467259,"byte_end":8467262,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467267,"byte_end":8467337,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467342,"byte_end":8467415,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467420,"byte_end":8467498,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468759,"byte_end":8468769,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"fn <T> (&mut self, io: &T) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8467983,"byte_end":8468055,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468060,"byte_end":8468063,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468068,"byte_end":8468144,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468149,"byte_end":8468177,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468182,"byte_end":8468185,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468190,"byte_end":8468265,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468270,"byte_end":8468346,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468351,"byte_end":8468416,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468421,"byte_end":8468424,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468429,"byte_end":8468441,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468446,"byte_end":8468449,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468454,"byte_end":8468526,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468531,"byte_end":8468607,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468612,"byte_end":8468685,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468690,"byte_end":8468693,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8468698,"byte_end":8468747,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470320,"byte_end":8470335,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469072,"byte_end":8469137,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469142,"byte_end":8469145,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469150,"byte_end":8469224,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469229,"byte_end":8469302,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469307,"byte_end":8469357,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469362,"byte_end":8469365,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469370,"byte_end":8469443,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469448,"byte_end":8469523,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469528,"byte_end":8469564,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469569,"byte_end":8469572,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469577,"byte_end":8469595,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469600,"byte_end":8469603,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469608,"byte_end":8469653,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469658,"byte_end":8469661,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469666,"byte_end":8469741,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469746,"byte_end":8469807,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469812,"byte_end":8469815,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469820,"byte_end":8469895,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469900,"byte_end":8469947,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469952,"byte_end":8469955,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8469960,"byte_end":8470036,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470041,"byte_end":8470114,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470119,"byte_end":8470122,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470127,"byte_end":8470200,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470205,"byte_end":8470208,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470213,"byte_end":8470225,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470230,"byte_end":8470233,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470238,"byte_end":8470308,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471176,"byte_end":8471191,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470815,"byte_end":8470860,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470865,"byte_end":8470868,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470873,"byte_end":8470945,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8470950,"byte_end":8471025,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471030,"byte_end":8471098,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471103,"byte_end":8471106,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471111,"byte_end":8471164,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472545,"byte_end":8472561,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471293,"byte_end":8471359,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471364,"byte_end":8471367,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471372,"byte_end":8471447,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471452,"byte_end":8471526,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471531,"byte_end":8471581,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471586,"byte_end":8471589,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471594,"byte_end":8471667,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471672,"byte_end":8471747,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471752,"byte_end":8471788,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471793,"byte_end":8471796,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471801,"byte_end":8471819,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471824,"byte_end":8471827,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471832,"byte_end":8471877,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471882,"byte_end":8471885,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471890,"byte_end":8471965,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8471970,"byte_end":8472031,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472036,"byte_end":8472039,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472044,"byte_end":8472119,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472124,"byte_end":8472172,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472177,"byte_end":8472180,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472185,"byte_end":8472261,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472266,"byte_end":8472339,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472344,"byte_end":8472347,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472352,"byte_end":8472425,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472430,"byte_end":8472433,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472438,"byte_end":8472450,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472455,"byte_end":8472458,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8472463,"byte_end":8472533,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473408,"byte_end":8473424,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473042,"byte_end":8473089,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473094,"byte_end":8473097,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473102,"byte_end":8473175,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473180,"byte_end":8473255,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473260,"byte_end":8473328,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473333,"byte_end":8473336,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8473341,"byte_end":8473396,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1788},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8477804,"byte_end":8477810,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1789}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1787},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8478859,"byte_end":8478865,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn () -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1793},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8480929,"byte_end":8480934,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1794}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1792},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8481591,"byte_end":8481596,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn () -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1798},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8483640,"byte_end":8483646,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1799}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1797},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8484684,"byte_end":8484690,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn () -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8486329,"byte_end":8486337,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1918}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8486466,"byte_end":8486475,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1921}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1922},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8486789,"byte_end":8486794,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"fn <T> (stream: T) -> (ReadHalf<T>, WriteHalf<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487420,"byte_end":8487430,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"fn (&self, other: &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487317,"byte_end":8487392,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487397,"byte_end":8487408,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487837,"byte_end":8487844,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"fn (self, wr: WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487513,"byte_end":8487562,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487567,"byte_end":8487570,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487575,"byte_end":8487587,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487592,"byte_end":8487595,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487600,"byte_end":8487674,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487679,"byte_end":8487729,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487734,"byte_end":8487798,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487803,"byte_end":8487825,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488345,"byte_end":8488355,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"fn (&self, other: &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488243,"byte_end":8488317,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488322,"byte_end":8488333,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8491592,"byte_end":8491596,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8491429,"byte_end":8491495,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8491513,"byte_end":8491580,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2614},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8494755,"byte_end":8494770,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2620}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8497470,"byte_end":8497480,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8500371,"byte_end":8500380,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8501780,"byte_end":8501785,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8503635,"byte_end":8503640,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2622},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8505819,"byte_end":8505831,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8506951,"byte_end":8506956,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8509785,"byte_end":8509789,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8512091,"byte_end":8512099,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"fn <'a, B> (&'a mut self, buf: &'a mut B) -> ReadBuf<'a, Self, B>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8513996,"byte_end":8514006,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8515443,"byte_end":8515450,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"fn <'a> (&'a mut self) -> ReadU8<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8516739,"byte_end":8516746,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"fn <'a> (&'a mut self) -> ReadI8<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8518077,"byte_end":8518085,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"fn <'a> (&'a mut self) -> ReadU16<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8519425,"byte_end":8519433,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"fn <'a> (&'a mut self) -> ReadI16<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8520714,"byte_end":8520722,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"fn <'a> (&'a mut self) -> ReadU32<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8522017,"byte_end":8522025,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"fn <'a> (&'a mut self) -> ReadI32<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8523388,"byte_end":8523396,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"fn <'a> (&'a mut self) -> ReadU64<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8524689,"byte_end":8524697,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"fn <'a> (&'a mut self) -> ReadI64<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8526157,"byte_end":8526166,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"fn <'a> (&'a mut self) -> ReadU128<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8527560,"byte_end":8527569,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"fn <'a> (&'a mut self) -> ReadI128<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8528916,"byte_end":8528927,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"fn <'a> (&'a mut self) -> ReadU16Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8530288,"byte_end":8530299,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"fn <'a> (&'a mut self) -> ReadI16Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8531600,"byte_end":8531611,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"fn <'a> (&'a mut self) -> ReadU32Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8532923,"byte_end":8532934,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"fn <'a> (&'a mut self) -> ReadI32Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8534315,"byte_end":8534326,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"fn <'a> (&'a mut self) -> ReadU64Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8535620,"byte_end":8535631,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"fn <'a> (&'a mut self) -> ReadI64Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8537109,"byte_end":8537121,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"fn <'a> (&'a mut self) -> ReadU128Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8538515,"byte_end":8538527,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"fn <'a> (&'a mut self) -> ReadI128Le<&'a mut Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8540140,"byte_end":8540151,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8541719,"byte_end":8541733,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, dst: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8542911,"byte_end":8542915,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2003},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543957,"byte_end":8543969,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2004}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543182,"byte_end":8543255,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543256,"byte_end":8543259,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543260,"byte_end":8543331,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543332,"byte_end":8543335,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543336,"byte_end":8543350,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543351,"byte_end":8543354,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543355,"byte_end":8543362,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543363,"byte_end":8543399,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543400,"byte_end":8543426,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543427,"byte_end":8543430,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543431,"byte_end":8543449,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543450,"byte_end":8543489,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543490,"byte_end":8543539,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543540,"byte_end":8543543,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543544,"byte_end":8543597,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543598,"byte_end":8543645,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543646,"byte_end":8543649,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543650,"byte_end":8543679,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543680,"byte_end":8543725,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543726,"byte_end":8543751,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543752,"byte_end":8543784,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543785,"byte_end":8543788,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543789,"byte_end":8543803,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543804,"byte_end":8543809,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543810,"byte_end":8543817,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543818,"byte_end":8543821,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543822,"byte_end":8543881,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543882,"byte_end":8543885,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543886,"byte_end":8543914,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543915,"byte_end":8543946,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544686,"byte_end":8544690,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543987,"byte_end":8544056,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544061,"byte_end":8544114,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544119,"byte_end":8544122,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544127,"byte_end":8544204,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544209,"byte_end":8544231,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544236,"byte_end":8544239,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544244,"byte_end":8544258,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544263,"byte_end":8544266,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544271,"byte_end":8544284,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544289,"byte_end":8544313,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544318,"byte_end":8544344,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544349,"byte_end":8544352,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544357,"byte_end":8544383,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544388,"byte_end":8544391,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544396,"byte_end":8544441,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544446,"byte_end":8544494,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544499,"byte_end":8544540,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544545,"byte_end":8544548,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544553,"byte_end":8544590,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544595,"byte_end":8544637,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544642,"byte_end":8544654,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544659,"byte_end":8544666,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544671,"byte_end":8544678,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2674},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8546893,"byte_end":8546906,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2682},{"krate":0,"index":2683}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8548748,"byte_end":8548753,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8551555,"byte_end":8551564,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"fn <'a, B> (&'a mut self, src: &'a mut B) -> WriteBuf<'a, Self, B>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8552906,"byte_end":8552915,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8554315,"byte_end":8554323,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"fn <'a> (&'a mut self, n: u8) -> WriteU8<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8555584,"byte_end":8555592,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"fn <'a> (&'a mut self, n: i8) -> WriteI8<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8556907,"byte_end":8556916,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8558229,"byte_end":8558238,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8559578,"byte_end":8559587,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8560922,"byte_end":8560931,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8562308,"byte_end":8562317,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8563704,"byte_end":8563713,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8565168,"byte_end":8565178,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8566568,"byte_end":8566578,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8567910,"byte_end":8567922,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8569249,"byte_end":8569261,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8570615,"byte_end":8570627,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8571976,"byte_end":8571988,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8573379,"byte_end":8573391,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8574792,"byte_end":8574804,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8576271,"byte_end":8576284,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8577686,"byte_end":8577699,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128Le<&'a mut Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8578719,"byte_end":8578724,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8579944,"byte_end":8579952,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"fn (&mut self) -> Shutdown<'_, Self>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12234},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581361,"byte_end":8581370,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12239}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581706,"byte_end":8581709,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581564,"byte_end":8581656,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581661,"byte_end":8581694,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581871,"byte_end":8581884,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581794,"byte_end":8581859,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582560,"byte_end":8582567,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582423,"byte_end":8582469,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582474,"byte_end":8582477,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582482,"byte_end":8582548,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582759,"byte_end":8582766,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582614,"byte_end":8582668,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582673,"byte_end":8582676,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582681,"byte_end":8582747,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582977,"byte_end":8582988,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582825,"byte_end":8582886,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582891,"byte_end":8582894,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8582899,"byte_end":8582965,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583219,"byte_end":8583229,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583068,"byte_end":8583131,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583136,"byte_end":8583139,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583144,"byte_end":8583207,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583433,"byte_end":8583439,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583273,"byte_end":8583329,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583334,"byte_end":8583337,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583342,"byte_end":8583421,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12220},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587685,"byte_end":8587694,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":12222}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587973,"byte_end":8587976,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"fn (stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587819,"byte_end":8587876,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587881,"byte_end":8587884,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587889,"byte_end":8587961,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588308,"byte_end":8588321,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"fn (reader_capacity: usize, writer_capacity: usize, stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588108,"byte_end":8588193,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588198,"byte_end":8588211,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588216,"byte_end":8588219,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588224,"byte_end":8588296,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588778,"byte_end":8588785,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"fn (&self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588633,"byte_end":8588683,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588688,"byte_end":8588691,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588696,"byte_end":8588766,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589005,"byte_end":8589012,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"fn (&mut self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588852,"byte_end":8588910,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588915,"byte_end":8588918,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8588923,"byte_end":8588993,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589247,"byte_end":8589258,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589087,"byte_end":8589152,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589157,"byte_end":8589160,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589165,"byte_end":8589235,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589522,"byte_end":8589532,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"fn (self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589367,"byte_end":8589434,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589439,"byte_end":8589442,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589447,"byte_end":8589510,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12157},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593351,"byte_end":8593360,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12159},{"krate":0,"index":12160},{"krate":0,"index":12161}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593668,"byte_end":8593671,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593526,"byte_end":8593618,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593623,"byte_end":8593656,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593833,"byte_end":8593846,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593756,"byte_end":8593821,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8594928,"byte_end":8594935,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8594870,"byte_end":8594916,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595126,"byte_end":8595133,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8594982,"byte_end":8595036,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595041,"byte_end":8595044,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595049,"byte_end":8595114,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595343,"byte_end":8595354,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595192,"byte_end":8595253,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595258,"byte_end":8595261,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595266,"byte_end":8595331,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595585,"byte_end":8595595,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595434,"byte_end":8595497,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595502,"byte_end":8595505,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595510,"byte_end":8595573,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595707,"byte_end":8595713,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595639,"byte_end":8595695,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12108},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598346,"byte_end":8598351,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":12113}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598792,"byte_end":8598799,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598718,"byte_end":8598780,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599131,"byte_end":8599138,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598868,"byte_end":8598938,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598943,"byte_end":8598946,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598951,"byte_end":8599024,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599029,"byte_end":8599102,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599107,"byte_end":8599119,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599497,"byte_end":8599508,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599227,"byte_end":8599304,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599309,"byte_end":8599312,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599317,"byte_end":8599390,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599395,"byte_end":8599468,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599473,"byte_end":8599485,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599705,"byte_end":8599715,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599637,"byte_end":8599693,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8602291,"byte_end":8602295,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8602208,"byte_end":8602275,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2720},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8603560,"byte_end":8603564,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> Copy<'a, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8606321,"byte_end":8606326,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2741}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2742},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607005,"byte_end":8607010,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2743},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8608227,"byte_end":8608232,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2746}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609348,"byte_end":8609353,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12087},{"krate":0,"index":12088},{"krate":0,"index":12089},{"krate":0,"index":12090}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610200,"byte_end":8610209,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"fn (&mut self) -> io::Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609710,"byte_end":8609750,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609755,"byte_end":8609758,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609763,"byte_end":8609777,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609782,"byte_end":8609785,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609790,"byte_end":8609797,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609802,"byte_end":8609836,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609841,"byte_end":8609876,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609881,"byte_end":8609884,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609889,"byte_end":8609972,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609977,"byte_end":8610017,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610022,"byte_end":8610025,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610030,"byte_end":8610083,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610088,"byte_end":8610131,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610136,"byte_end":8610141,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610146,"byte_end":8610158,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610163,"byte_end":8610170,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610175,"byte_end":8610182,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610436,"byte_end":8610443,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610369,"byte_end":8610424,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610562,"byte_end":8610569,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"fn (&mut self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610503,"byte_end":8610550,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610856,"byte_end":8610866,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610621,"byte_end":8610682,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610687,"byte_end":8610690,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610695,"byte_end":8610758,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610763,"byte_end":8610844,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610985,"byte_end":8610999,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2751},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8612968,"byte_end":8612972,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8612885,"byte_end":8612952,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2760},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8614035,"byte_end":8614042,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8613952,"byte_end":8614019,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8615291,"byte_end":8615300,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8615208,"byte_end":8615275,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12027},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619624,"byte_end":8619630,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":12029}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11994},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619646,"byte_end":8619652,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":11996}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11949},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619668,"byte_end":8619675,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":11951},{"krate":0,"index":11952},{"krate":0,"index":11954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11904},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619700,"byte_end":8619707,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":11906},{"krate":0,"index":11907},{"krate":0,"index":11909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11859},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619732,"byte_end":8619739,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":11861},{"krate":0,"index":11862},{"krate":0,"index":11864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11814},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619764,"byte_end":8619772,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11769},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619800,"byte_end":8619807,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":11774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11724},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619832,"byte_end":8619839,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":11726},{"krate":0,"index":11727},{"krate":0,"index":11729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11679},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619864,"byte_end":8619871,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":11681},{"krate":0,"index":11682},{"krate":0,"index":11684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11634},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619896,"byte_end":8619904,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":11636},{"krate":0,"index":11637},{"krate":0,"index":11639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11589},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619932,"byte_end":8619941,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":11591},{"krate":0,"index":11592},{"krate":0,"index":11594}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11544},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8619969,"byte_end":8619978,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":11546},{"krate":0,"index":11547},{"krate":0,"index":11549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11499},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8620006,"byte_end":8620015,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":11501},{"krate":0,"index":11502},{"krate":0,"index":11504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11454},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8620043,"byte_end":8620053,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":11456},{"krate":0,"index":11457},{"krate":0,"index":11459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11409},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8620084,"byte_end":8620093,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":11411},{"krate":0,"index":11412},{"krate":0,"index":11414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8620121,"byte_end":8620130,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11319},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8620158,"byte_end":8620167,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":11321},{"krate":0,"index":11322},{"krate":0,"index":11324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11274},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8620195,"byte_end":8620205,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":11276},{"krate":0,"index":11277},{"krate":0,"index":11279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8620623,"byte_end":8620631,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8620540,"byte_end":8620607,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2936},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8623867,"byte_end":8623876,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8623737,"byte_end":8623804,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2947},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8626855,"byte_end":8626867,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8626772,"byte_end":8626839,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8629320,"byte_end":8629329,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8629237,"byte_end":8629304,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8631775,"byte_end":8631781,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2971}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2969},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8632467,"byte_end":8632473,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2974},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8633422,"byte_end":8633430,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2977}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2982},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8634602,"byte_end":8634606,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2983}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2984},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8635447,"byte_end":8635451,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11251},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8636696,"byte_end":8636701,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":11253},{"krate":0,"index":11254},{"krate":0,"index":11255},{"krate":0,"index":11256}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637562,"byte_end":8637574,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"fn (&mut self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637050,"byte_end":8637093,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637098,"byte_end":8637101,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637106,"byte_end":8637120,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637125,"byte_end":8637128,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637133,"byte_end":8637140,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637145,"byte_end":8637179,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637184,"byte_end":8637219,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637224,"byte_end":8637227,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637232,"byte_end":8637315,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637320,"byte_end":8637367,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637372,"byte_end":8637375,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637380,"byte_end":8637442,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637447,"byte_end":8637493,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637498,"byte_end":8637503,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637508,"byte_end":8637520,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637525,"byte_end":8637532,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637537,"byte_end":8637544,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637812,"byte_end":8637829,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11205},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650623,"byte_end":8650635,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":11208},{"krate":0,"index":11209}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3000},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651911,"byte_end":8651924,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"fn <S, B> (stream: S) -> StreamReader<S, B>","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650712,"byte_end":8650792,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650793,"byte_end":8650796,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650797,"byte_end":8650810,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650811,"byte_end":8650814,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650815,"byte_end":8650822,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650823,"byte_end":8650844,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650845,"byte_end":8650894,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650895,"byte_end":8650915,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650916,"byte_end":8650962,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650963,"byte_end":8650966,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8650967,"byte_end":8651007,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651008,"byte_end":8651050,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651051,"byte_end":8651097,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651098,"byte_end":8651144,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651145,"byte_end":8651193,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651194,"byte_end":8651201,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651202,"byte_end":8651205,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651206,"byte_end":8651240,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651241,"byte_end":8651282,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651283,"byte_end":8651286,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651287,"byte_end":8651326,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651327,"byte_end":8651352,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651353,"byte_end":8651390,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651391,"byte_end":8651428,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651429,"byte_end":8651432,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651433,"byte_end":8651475,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651476,"byte_end":8651522,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651523,"byte_end":8651560,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651561,"byte_end":8651564,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651565,"byte_end":8651592,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651593,"byte_end":8651639,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651640,"byte_end":8651682,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651683,"byte_end":8651686,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651687,"byte_end":8651722,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651723,"byte_end":8651769,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651770,"byte_end":8651773,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651774,"byte_end":8651786,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651787,"byte_end":8651794,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8651795,"byte_end":8651802,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639424,"byte_end":8639428,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11162},{"krate":0,"index":11163}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640018,"byte_end":8640023,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639715,"byte_end":8639768,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639773,"byte_end":8639819,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639824,"byte_end":8639827,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639832,"byte_end":8639842,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639847,"byte_end":8639850,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639855,"byte_end":8639932,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639937,"byte_end":8640006,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640342,"byte_end":8640351,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640071,"byte_end":8640142,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640147,"byte_end":8640221,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640226,"byte_end":8640301,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640306,"byte_end":8640330,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640474,"byte_end":8640481,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640416,"byte_end":8640462,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640773,"byte_end":8640780,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640528,"byte_end":8640582,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640587,"byte_end":8640590,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640595,"byte_end":8640668,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640673,"byte_end":8640745,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640750,"byte_end":8640761,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641091,"byte_end":8641102,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640839,"byte_end":8640900,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640905,"byte_end":8640908,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640913,"byte_end":8640986,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8640991,"byte_end":8641063,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641068,"byte_end":8641079,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641248,"byte_end":8641258,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641182,"byte_end":8641236,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3023},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8643188,"byte_end":8643193,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8643105,"byte_end":8643172,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3032},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8644089,"byte_end":8644097,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8644006,"byte_end":8644073,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3041},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8645480,"byte_end":8645488,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8645397,"byte_end":8645464,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11100},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649369,"byte_end":8649376,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":11102},{"krate":0,"index":11103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11063},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649392,"byte_end":8649399,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":11065},{"krate":0,"index":11066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11018},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649415,"byte_end":8649423,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":11020},{"krate":0,"index":11021},{"krate":0,"index":11023}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10973},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649448,"byte_end":8649456,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":10975},{"krate":0,"index":10976},{"krate":0,"index":10978}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10928},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649481,"byte_end":8649489,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":10930},{"krate":0,"index":10931},{"krate":0,"index":10933}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10883},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649514,"byte_end":8649523,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":10885},{"krate":0,"index":10886},{"krate":0,"index":10888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10838},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649551,"byte_end":8649559,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":10840},{"krate":0,"index":10841},{"krate":0,"index":10843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10793},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649584,"byte_end":8649592,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":10795},{"krate":0,"index":10796},{"krate":0,"index":10798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10748},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649617,"byte_end":8649625,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10703},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649650,"byte_end":8649659,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":10705},{"krate":0,"index":10706},{"krate":0,"index":10708}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10658},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649687,"byte_end":8649697,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":10660},{"krate":0,"index":10661},{"krate":0,"index":10663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10613},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649725,"byte_end":8649735,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":10615},{"krate":0,"index":10616},{"krate":0,"index":10618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10568},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649763,"byte_end":8649773,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":10570},{"krate":0,"index":10571},{"krate":0,"index":10573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10523},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649801,"byte_end":8649812,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":10525},{"krate":0,"index":10526},{"krate":0,"index":10528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10478},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649843,"byte_end":8649853,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":10480},{"krate":0,"index":10481},{"krate":0,"index":10483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10433},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649881,"byte_end":8649891,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":10435},{"krate":0,"index":10436},{"krate":0,"index":10438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10388},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649919,"byte_end":8649929,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":10390},{"krate":0,"index":10391},{"krate":0,"index":10393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10343},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8649957,"byte_end":8649968,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":10345},{"krate":0,"index":10346},{"krate":0,"index":10348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3263},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3566},{"krate":0,"index":3692},{"krate":0,"index":3711},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79900,"byte_end":79905,"line_start":248,"line_end":248,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79939,"byte_end":79947,"line_start":249,"line_end":249,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3235},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79875,"byte_end":79885,"line_start":247,"line_end":247,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"MaybeReady::{Ready, Blocking}","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3239}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80100,"byte_end":80103,"line_start":255,"line_end":255,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80147,"byte_end":80151,"line_start":256,"line_end":256,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3244},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80076,"byte_end":80085,"line_start":254,"line_end":254,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"OneOrMore::{One, More}","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3258},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/lookup_host.rs","byte_start":8656218,"byte_end":8656229,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"fn <T> (host: T) -> io::Result<impl Iterator<Item = SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3263},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3366},{"krate":0,"index":3369},{"krate":0,"index":3417},{"krate":0,"index":3421},{"krate":0,"index":3524}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8656377,"byte_end":8656398,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3527},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8658998,"byte_end":8659009,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3528}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660978,"byte_end":8660982,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addr: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659092,"byte_end":8659168,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659173,"byte_end":8659176,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659181,"byte_end":8659242,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659247,"byte_end":8659250,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659255,"byte_end":8659330,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659335,"byte_end":8659411,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659416,"byte_end":8659427,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659432,"byte_end":8659435,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659440,"byte_end":8659515,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659520,"byte_end":8659594,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659599,"byte_end":8659676,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659681,"byte_end":8659684,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659689,"byte_end":8659765,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659770,"byte_end":8659843,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659848,"byte_end":8659921,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659926,"byte_end":8659978,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659983,"byte_end":8659986,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659991,"byte_end":8660054,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660059,"byte_end":8660062,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660067,"byte_end":8660121,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660126,"byte_end":8660129,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660134,"byte_end":8660148,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660153,"byte_end":8660156,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660161,"byte_end":8660174,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660179,"byte_end":8660211,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660216,"byte_end":8660219,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660224,"byte_end":8660240,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660245,"byte_end":8660248,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660253,"byte_end":8660271,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660276,"byte_end":8660315,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660320,"byte_end":8660386,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660391,"byte_end":8660394,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660399,"byte_end":8660426,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660431,"byte_end":8660434,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660439,"byte_end":8660466,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660471,"byte_end":8660485,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660490,"byte_end":8660495,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660500,"byte_end":8660507,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660512,"byte_end":8660515,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660520,"byte_end":8660550,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660555,"byte_end":8660558,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660563,"byte_end":8660576,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660581,"byte_end":8660613,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660618,"byte_end":8660645,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660650,"byte_end":8660653,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660658,"byte_end":8660674,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660679,"byte_end":8660682,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660687,"byte_end":8660705,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660710,"byte_end":8660749,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660754,"byte_end":8660839,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660844,"byte_end":8660847,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660852,"byte_end":8660879,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660884,"byte_end":8660887,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660892,"byte_end":8660919,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660924,"byte_end":8660938,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660943,"byte_end":8660948,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8660953,"byte_end":8660960,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662554,"byte_end":8662560,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661695,"byte_end":8661752,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661757,"byte_end":8661760,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661765,"byte_end":8661840,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661845,"byte_end":8661915,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661920,"byte_end":8661949,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661954,"byte_end":8661957,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8661962,"byte_end":8662009,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662014,"byte_end":8662017,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662022,"byte_end":8662036,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662041,"byte_end":8662044,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662049,"byte_end":8662062,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662067,"byte_end":8662099,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662104,"byte_end":8662107,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662112,"byte_end":8662128,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662133,"byte_end":8662136,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662141,"byte_end":8662159,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662164,"byte_end":8662203,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662208,"byte_end":8662278,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662283,"byte_end":8662286,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662291,"byte_end":8662330,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662335,"byte_end":8662405,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662410,"byte_end":8662473,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662478,"byte_end":8662487,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662492,"byte_end":8662495,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662500,"byte_end":8662514,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662519,"byte_end":8662524,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662529,"byte_end":8662536,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662896,"byte_end":8662907,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662673,"byte_end":8662745,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662750,"byte_end":8662753,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662758,"byte_end":8662834,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8662839,"byte_end":8662884,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665769,"byte_end":8665777,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn (listener: net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8663754,"byte_end":8663826,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8663831,"byte_end":8663834,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8663839,"byte_end":8663909,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8663914,"byte_end":8663990,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8663995,"byte_end":8664039,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664044,"byte_end":8664047,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664052,"byte_end":8664127,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664132,"byte_end":8664208,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664213,"byte_end":8664278,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664283,"byte_end":8664338,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664343,"byte_end":8664346,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664351,"byte_end":8664422,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664427,"byte_end":8664502,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664507,"byte_end":8664546,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664551,"byte_end":8664554,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664559,"byte_end":8664622,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664627,"byte_end":8664630,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664635,"byte_end":8664708,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664713,"byte_end":8664744,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664749,"byte_end":8664752,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664757,"byte_end":8664830,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664835,"byte_end":8664910,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664915,"byte_end":8664988,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8664993,"byte_end":8665020,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665025,"byte_end":8665028,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665033,"byte_end":8665047,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665052,"byte_end":8665055,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665060,"byte_end":8665078,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665083,"byte_end":8665109,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665114,"byte_end":8665146,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665151,"byte_end":8665154,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665159,"byte_end":8665177,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665182,"byte_end":8665233,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665238,"byte_end":8665309,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665314,"byte_end":8665374,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665379,"byte_end":8665393,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665398,"byte_end":8665403,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665408,"byte_end":8665415,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665420,"byte_end":8665423,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665428,"byte_end":8665440,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665445,"byte_end":8665448,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665453,"byte_end":8665513,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665518,"byte_end":8665521,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665526,"byte_end":8665596,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665601,"byte_end":8665674,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8665679,"byte_end":8665757,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666861,"byte_end":8666871,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666135,"byte_end":8666196,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666201,"byte_end":8666204,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666209,"byte_end":8666282,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666287,"byte_end":8666321,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666326,"byte_end":8666329,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666334,"byte_end":8666348,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666353,"byte_end":8666356,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666361,"byte_end":8666379,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666384,"byte_end":8666416,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666421,"byte_end":8666424,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666429,"byte_end":8666445,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666450,"byte_end":8666505,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666510,"byte_end":8666513,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666518,"byte_end":8666536,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666541,"byte_end":8666580,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666585,"byte_end":8666651,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666656,"byte_end":8666659,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666664,"byte_end":8666706,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666711,"byte_end":8666800,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666805,"byte_end":8666808,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666813,"byte_end":8666827,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666832,"byte_end":8666837,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666842,"byte_end":8666849,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668302,"byte_end":8668310,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8666957,"byte_end":8667031,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667036,"byte_end":8667039,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667044,"byte_end":8667106,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667111,"byte_end":8667114,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667119,"byte_end":8667195,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667200,"byte_end":8667269,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667274,"byte_end":8667303,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667308,"byte_end":8667311,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667316,"byte_end":8667328,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667333,"byte_end":8667336,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667341,"byte_end":8667416,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667421,"byte_end":8667496,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667501,"byte_end":8667575,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667580,"byte_end":8667655,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667660,"byte_end":8667668,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667673,"byte_end":8667676,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667681,"byte_end":8667695,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667700,"byte_end":8667703,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667708,"byte_end":8667721,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667726,"byte_end":8667779,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667784,"byte_end":8667787,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667792,"byte_end":8667810,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667815,"byte_end":8667836,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667841,"byte_end":8667919,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667924,"byte_end":8667971,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667976,"byte_end":8667979,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8667984,"byte_end":8668040,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668045,"byte_end":8668071,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668076,"byte_end":8668107,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668112,"byte_end":8668156,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668161,"byte_end":8668178,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668183,"byte_end":8668236,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668241,"byte_end":8668254,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668259,"byte_end":8668268,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668273,"byte_end":8668278,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668283,"byte_end":8668290,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668996,"byte_end":8668999,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668379,"byte_end":8668437,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668442,"byte_end":8668445,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668450,"byte_end":8668510,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668515,"byte_end":8668518,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668523,"byte_end":8668560,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668565,"byte_end":8668568,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668573,"byte_end":8668587,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668592,"byte_end":8668595,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668600,"byte_end":8668613,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668618,"byte_end":8668650,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668655,"byte_end":8668658,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668663,"byte_end":8668679,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668684,"byte_end":8668687,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668692,"byte_end":8668710,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668715,"byte_end":8668754,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668759,"byte_end":8668821,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668826,"byte_end":8668829,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668834,"byte_end":8668891,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668896,"byte_end":8668936,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668941,"byte_end":8668944,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668949,"byte_end":8668962,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668967,"byte_end":8668972,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8668977,"byte_end":8668984,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669638,"byte_end":8669645,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669071,"byte_end":8669129,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669134,"byte_end":8669137,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669142,"byte_end":8669218,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669223,"byte_end":8669244,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669249,"byte_end":8669252,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669257,"byte_end":8669271,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669276,"byte_end":8669279,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669284,"byte_end":8669297,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669302,"byte_end":8669334,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669339,"byte_end":8669342,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669347,"byte_end":8669363,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669368,"byte_end":8669371,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669376,"byte_end":8669394,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669399,"byte_end":8669438,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669443,"byte_end":8669506,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669511,"byte_end":8669514,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669519,"byte_end":8669577,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669582,"byte_end":8669585,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669590,"byte_end":8669604,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669609,"byte_end":8669614,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669619,"byte_end":8669626,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8671918,"byte_end":8671926,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3531}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8671716,"byte_end":8671792,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8671793,"byte_end":8671840,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8671841,"byte_end":8671889,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672341,"byte_end":8672352,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672104,"byte_end":8672177,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672182,"byte_end":8672197,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672202,"byte_end":8672205,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672210,"byte_end":8672279,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672284,"byte_end":8672329,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673911,"byte_end":8673919,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673503,"byte_end":8673558,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673559,"byte_end":8673562,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673563,"byte_end":8673651,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673652,"byte_end":8673729,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673730,"byte_end":8673733,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673734,"byte_end":8673762,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673763,"byte_end":8673796,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673797,"byte_end":8673848,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673849,"byte_end":8673882,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674613,"byte_end":8674622,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673941,"byte_end":8673997,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8673998,"byte_end":8674001,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674002,"byte_end":8674088,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674089,"byte_end":8674141,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674142,"byte_end":8674145,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674146,"byte_end":8674232,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674233,"byte_end":8674318,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674319,"byte_end":8674322,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674323,"byte_end":8674351,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674352,"byte_end":8674385,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674386,"byte_end":8674433,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674434,"byte_end":8674496,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674497,"byte_end":8674550,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674551,"byte_end":8674584,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675679,"byte_end":8675688,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674796,"byte_end":8674870,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674875,"byte_end":8674948,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674953,"byte_end":8674967,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674972,"byte_end":8674975,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674980,"byte_end":8675053,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675058,"byte_end":8675061,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675066,"byte_end":8675080,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675085,"byte_end":8675088,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675093,"byte_end":8675106,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675111,"byte_end":8675129,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675134,"byte_end":8675164,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675169,"byte_end":8675172,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675177,"byte_end":8675210,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675215,"byte_end":8675218,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675223,"byte_end":8675241,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675246,"byte_end":8675285,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675290,"byte_end":8675359,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675364,"byte_end":8675412,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675417,"byte_end":8675447,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675452,"byte_end":8675455,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675460,"byte_end":8675482,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675487,"byte_end":8675532,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675537,"byte_end":8675555,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675560,"byte_end":8675563,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675568,"byte_end":8675582,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675587,"byte_end":8675592,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675597,"byte_end":8675604,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675609,"byte_end":8675612,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675617,"byte_end":8675667,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8677105,"byte_end":8677109,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675813,"byte_end":8675883,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675888,"byte_end":8675957,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8675962,"byte_end":8676001,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676006,"byte_end":8676009,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676014,"byte_end":8676082,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676087,"byte_end":8676090,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676095,"byte_end":8676135,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676140,"byte_end":8676143,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676148,"byte_end":8676162,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676167,"byte_end":8676170,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676175,"byte_end":8676188,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676193,"byte_end":8676223,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676228,"byte_end":8676254,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676259,"byte_end":8676285,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676290,"byte_end":8676293,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676298,"byte_end":8676316,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676321,"byte_end":8676372,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676377,"byte_end":8676405,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676410,"byte_end":8676479,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676484,"byte_end":8676532,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676537,"byte_end":8676540,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676545,"byte_end":8676574,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676579,"byte_end":8676608,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676613,"byte_end":8676616,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676621,"byte_end":8676648,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676653,"byte_end":8676700,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676705,"byte_end":8676708,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676713,"byte_end":8676737,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676742,"byte_end":8676801,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676806,"byte_end":8676845,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676850,"byte_end":8676853,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676858,"byte_end":8676872,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676877,"byte_end":8676882,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676887,"byte_end":8676894,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676899,"byte_end":8676902,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676907,"byte_end":8676972,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676977,"byte_end":8676980,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8676985,"byte_end":8677031,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8677036,"byte_end":8677087,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3549},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679711,"byte_end":8679724,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3550}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679276,"byte_end":8679342,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679343,"byte_end":8679346,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679347,"byte_end":8679434,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679435,"byte_end":8679519,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679520,"byte_end":8679523,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679524,"byte_end":8679552,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679553,"byte_end":8679596,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679597,"byte_end":8679648,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679649,"byte_end":8679682,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3553},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680530,"byte_end":8680544,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3554},{"krate":0,"index":3555}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679757,"byte_end":8679824,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679825,"byte_end":8679828,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679829,"byte_end":8679915,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679916,"byte_end":8679968,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679969,"byte_end":8679972,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8679973,"byte_end":8680048,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680049,"byte_end":8680052,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680053,"byte_end":8680139,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680140,"byte_end":8680225,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680226,"byte_end":8680229,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680230,"byte_end":8680258,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680259,"byte_end":8680302,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680303,"byte_end":8680350,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680351,"byte_end":8680413,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680414,"byte_end":8680467,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8680468,"byte_end":8680501,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3558},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681488,"byte_end":8681500,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681361,"byte_end":8681438,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681439,"byte_end":8681459,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682084,"byte_end":8682091,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"fn (self, other: OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681821,"byte_end":8681890,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681895,"byte_end":8681959,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681964,"byte_end":8682016,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682021,"byte_end":8682024,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682029,"byte_end":8682072,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683082,"byte_end":8683091,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682198,"byte_end":8682272,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682277,"byte_end":8682350,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682355,"byte_end":8682369,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682374,"byte_end":8682377,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682382,"byte_end":8682455,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682460,"byte_end":8682463,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682468,"byte_end":8682482,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682487,"byte_end":8682490,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682495,"byte_end":8682508,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682513,"byte_end":8682531,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682536,"byte_end":8682566,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682571,"byte_end":8682574,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682579,"byte_end":8682612,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682617,"byte_end":8682620,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682625,"byte_end":8682643,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682648,"byte_end":8682687,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682692,"byte_end":8682757,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682762,"byte_end":8682815,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682820,"byte_end":8682850,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682855,"byte_end":8682858,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682863,"byte_end":8682885,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682890,"byte_end":8682935,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682940,"byte_end":8682958,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682963,"byte_end":8682966,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682971,"byte_end":8682985,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8682990,"byte_end":8682995,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683000,"byte_end":8683007,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683012,"byte_end":8683015,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683020,"byte_end":8683070,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684513,"byte_end":8684517,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683220,"byte_end":8683290,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683295,"byte_end":8683364,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683369,"byte_end":8683408,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683413,"byte_end":8683416,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683421,"byte_end":8683489,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683494,"byte_end":8683497,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683502,"byte_end":8683542,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683547,"byte_end":8683550,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683555,"byte_end":8683569,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683574,"byte_end":8683577,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683582,"byte_end":8683595,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683600,"byte_end":8683630,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683635,"byte_end":8683661,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683666,"byte_end":8683692,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683697,"byte_end":8683700,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683705,"byte_end":8683723,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683728,"byte_end":8683779,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683784,"byte_end":8683812,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683817,"byte_end":8683882,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683887,"byte_end":8683940,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683945,"byte_end":8683948,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683953,"byte_end":8683982,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8683987,"byte_end":8684016,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684021,"byte_end":8684024,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684029,"byte_end":8684056,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684061,"byte_end":8684108,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684113,"byte_end":8684116,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684121,"byte_end":8684145,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684150,"byte_end":8684209,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684214,"byte_end":8684253,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684258,"byte_end":8684261,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684266,"byte_end":8684280,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684285,"byte_end":8684290,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684295,"byte_end":8684302,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684307,"byte_end":8684310,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684315,"byte_end":8684380,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684385,"byte_end":8684388,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684393,"byte_end":8684439,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684444,"byte_end":8684495,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685250,"byte_end":8685257,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"fn (self, other: OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684987,"byte_end":8685056,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685061,"byte_end":8685125,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685130,"byte_end":8685182,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685187,"byte_end":8685190,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685195,"byte_end":8685238,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685431,"byte_end":8685437,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685363,"byte_end":8685419,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3564},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688727,"byte_end":8688736,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3565}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690817,"byte_end":8690824,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addr: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688815,"byte_end":8688859,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688864,"byte_end":8688867,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688872,"byte_end":8688946,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688951,"byte_end":8689020,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689025,"byte_end":8689101,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689106,"byte_end":8689171,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689176,"byte_end":8689179,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689184,"byte_end":8689260,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689265,"byte_end":8689334,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689339,"byte_end":8689415,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689420,"byte_end":8689479,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689484,"byte_end":8689487,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689492,"byte_end":8689546,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689551,"byte_end":8689554,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689559,"byte_end":8689573,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689578,"byte_end":8689581,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689586,"byte_end":8689599,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689604,"byte_end":8689634,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689639,"byte_end":8689665,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689670,"byte_end":8689696,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689701,"byte_end":8689704,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689709,"byte_end":8689727,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689732,"byte_end":8689783,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689788,"byte_end":8689816,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689821,"byte_end":8689890,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689895,"byte_end":8689898,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689903,"byte_end":8689930,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689935,"byte_end":8689984,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689989,"byte_end":8689992,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8689997,"byte_end":8690011,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690016,"byte_end":8690021,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690026,"byte_end":8690033,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690038,"byte_end":8690041,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690046,"byte_end":8690076,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690081,"byte_end":8690084,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690089,"byte_end":8690102,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690107,"byte_end":8690137,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690142,"byte_end":8690168,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690173,"byte_end":8690199,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690204,"byte_end":8690231,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690236,"byte_end":8690239,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690244,"byte_end":8690262,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690267,"byte_end":8690318,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690323,"byte_end":8690351,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690356,"byte_end":8690444,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690449,"byte_end":8690452,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690457,"byte_end":8690484,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690489,"byte_end":8690538,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690543,"byte_end":8690546,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690551,"byte_end":8690565,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690570,"byte_end":8690575,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690580,"byte_end":8690587,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690592,"byte_end":8690595,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690600,"byte_end":8690671,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690676,"byte_end":8690679,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690684,"byte_end":8690741,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8690746,"byte_end":8690799,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8693257,"byte_end":8693265,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn (stream: net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692290,"byte_end":8692347,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692352,"byte_end":8692355,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692360,"byte_end":8692435,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692440,"byte_end":8692513,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692518,"byte_end":8692521,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692526,"byte_end":8692540,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692545,"byte_end":8692548,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692553,"byte_end":8692571,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692576,"byte_end":8692602,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692607,"byte_end":8692637,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692642,"byte_end":8692645,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692650,"byte_end":8692668,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692673,"byte_end":8692724,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692729,"byte_end":8692803,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692808,"byte_end":8692862,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692867,"byte_end":8692881,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692886,"byte_end":8692891,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692896,"byte_end":8692903,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692908,"byte_end":8692911,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692916,"byte_end":8692928,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692933,"byte_end":8692936,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8692941,"byte_end":8693001,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8693006,"byte_end":8693009,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8693014,"byte_end":8693084,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8693089,"byte_end":8693162,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8693167,"byte_end":8693245,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8693662,"byte_end":8693673,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"fn (stream: net::TcpStream, addr: &SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694821,"byte_end":8694831,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694422,"byte_end":8694481,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694486,"byte_end":8694489,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694494,"byte_end":8694508,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694513,"byte_end":8694516,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694521,"byte_end":8694534,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694539,"byte_end":8694569,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694574,"byte_end":8694577,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694582,"byte_end":8694646,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694651,"byte_end":8694712,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694717,"byte_end":8694720,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694725,"byte_end":8694768,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694773,"byte_end":8694785,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694790,"byte_end":8694797,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694802,"byte_end":8694809,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695320,"byte_end":8695329,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694917,"byte_end":8694981,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694986,"byte_end":8694989,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8694994,"byte_end":8695008,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695013,"byte_end":8695016,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695021,"byte_end":8695034,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695039,"byte_end":8695069,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695074,"byte_end":8695077,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695082,"byte_end":8695146,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695151,"byte_end":8695212,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695217,"byte_end":8695220,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695225,"byte_end":8695267,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695272,"byte_end":8695284,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695289,"byte_end":8695296,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695301,"byte_end":8695308,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696487,"byte_end":8696496,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695414,"byte_end":8695489,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695494,"byte_end":8695567,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695572,"byte_end":8695586,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695591,"byte_end":8695594,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695599,"byte_end":8695617,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695622,"byte_end":8695625,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695630,"byte_end":8695655,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695660,"byte_end":8695663,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695668,"byte_end":8695719,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695724,"byte_end":8695807,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695812,"byte_end":8695867,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695872,"byte_end":8695875,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695880,"byte_end":8695892,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695897,"byte_end":8695900,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695905,"byte_end":8695980,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695985,"byte_end":8695988,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8695993,"byte_end":8696007,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696012,"byte_end":8696015,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696020,"byte_end":8696033,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696038,"byte_end":8696056,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696061,"byte_end":8696091,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696096,"byte_end":8696099,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696104,"byte_end":8696137,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696142,"byte_end":8696145,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696150,"byte_end":8696168,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696173,"byte_end":8696212,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696217,"byte_end":8696286,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696291,"byte_end":8696321,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696326,"byte_end":8696329,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696334,"byte_end":8696356,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696361,"byte_end":8696403,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696408,"byte_end":8696426,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696431,"byte_end":8696434,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696439,"byte_end":8696453,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696458,"byte_end":8696463,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8696468,"byte_end":8696475,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698408,"byte_end":8698412,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697157,"byte_end":8697227,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697232,"byte_end":8697301,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697306,"byte_end":8697345,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697350,"byte_end":8697353,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697358,"byte_end":8697432,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697437,"byte_end":8697497,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697502,"byte_end":8697505,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697510,"byte_end":8697524,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697529,"byte_end":8697532,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697537,"byte_end":8697550,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697555,"byte_end":8697585,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697590,"byte_end":8697616,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697621,"byte_end":8697647,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697652,"byte_end":8697655,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697660,"byte_end":8697678,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697683,"byte_end":8697734,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697739,"byte_end":8697767,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697772,"byte_end":8697841,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697846,"byte_end":8697849,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697854,"byte_end":8697883,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697888,"byte_end":8697917,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697922,"byte_end":8697925,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697930,"byte_end":8697957,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8697962,"byte_end":8698006,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698011,"byte_end":8698014,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698019,"byte_end":8698043,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698048,"byte_end":8698104,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698109,"byte_end":8698148,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698153,"byte_end":8698156,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698161,"byte_end":8698175,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698180,"byte_end":8698185,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698190,"byte_end":8698197,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698202,"byte_end":8698205,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698210,"byte_end":8698275,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698280,"byte_end":8698283,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698288,"byte_end":8698334,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698339,"byte_end":8698390,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699281,"byte_end":8699289,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698526,"byte_end":8698592,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698597,"byte_end":8698600,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698605,"byte_end":8698677,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698682,"byte_end":8698751,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698756,"byte_end":8698789,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698794,"byte_end":8698797,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698802,"byte_end":8698816,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698821,"byte_end":8698824,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698829,"byte_end":8698842,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698847,"byte_end":8698877,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698882,"byte_end":8698908,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698913,"byte_end":8698940,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698945,"byte_end":8698948,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698953,"byte_end":8698971,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8698976,"byte_end":8699027,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699032,"byte_end":8699060,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699065,"byte_end":8699130,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699135,"byte_end":8699138,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699143,"byte_end":8699173,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699178,"byte_end":8699220,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699225,"byte_end":8699228,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699233,"byte_end":8699247,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699252,"byte_end":8699257,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699262,"byte_end":8699269,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699915,"byte_end":8699922,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699383,"byte_end":8699445,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699450,"byte_end":8699453,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699458,"byte_end":8699522,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699527,"byte_end":8699530,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699535,"byte_end":8699578,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699583,"byte_end":8699586,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699591,"byte_end":8699605,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699610,"byte_end":8699613,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699618,"byte_end":8699631,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699636,"byte_end":8699666,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699671,"byte_end":8699674,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699679,"byte_end":8699743,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699748,"byte_end":8699809,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699814,"byte_end":8699817,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699822,"byte_end":8699862,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699867,"byte_end":8699879,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699884,"byte_end":8699891,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699896,"byte_end":8699903,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700729,"byte_end":8700740,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8699999,"byte_end":8700061,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700066,"byte_end":8700069,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700074,"byte_end":8700143,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700148,"byte_end":8700221,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700226,"byte_end":8700299,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700304,"byte_end":8700379,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700384,"byte_end":8700402,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700407,"byte_end":8700410,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700415,"byte_end":8700429,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700434,"byte_end":8700437,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700442,"byte_end":8700455,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700460,"byte_end":8700490,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700495,"byte_end":8700498,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700503,"byte_end":8700567,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700572,"byte_end":8700633,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700638,"byte_end":8700641,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700646,"byte_end":8700676,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700681,"byte_end":8700693,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700698,"byte_end":8700705,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700710,"byte_end":8700717,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701407,"byte_end":8701423,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700841,"byte_end":8700901,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700906,"byte_end":8700909,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700914,"byte_end":8700987,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8700992,"byte_end":8700995,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701000,"byte_end":8701061,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701066,"byte_end":8701069,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701074,"byte_end":8701088,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701093,"byte_end":8701096,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701101,"byte_end":8701114,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701119,"byte_end":8701149,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701154,"byte_end":8701157,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701162,"byte_end":8701226,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701231,"byte_end":8701292,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701297,"byte_end":8701300,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701305,"byte_end":8701354,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701359,"byte_end":8701371,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701376,"byte_end":8701383,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701388,"byte_end":8701395,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702015,"byte_end":8702035,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701510,"byte_end":8701570,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701575,"byte_end":8701578,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701583,"byte_end":8701655,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701660,"byte_end":8701680,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701685,"byte_end":8701688,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701693,"byte_end":8701707,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701712,"byte_end":8701715,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701720,"byte_end":8701733,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701738,"byte_end":8701768,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701773,"byte_end":8701776,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701781,"byte_end":8701845,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701850,"byte_end":8701911,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701916,"byte_end":8701919,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701924,"byte_end":8701962,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701967,"byte_end":8701979,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701984,"byte_end":8701991,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8701996,"byte_end":8702003,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702706,"byte_end":8702722,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702140,"byte_end":8702200,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702205,"byte_end":8702208,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702213,"byte_end":8702286,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702291,"byte_end":8702294,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702299,"byte_end":8702360,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702365,"byte_end":8702368,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702373,"byte_end":8702387,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702392,"byte_end":8702395,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702400,"byte_end":8702413,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702418,"byte_end":8702448,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702453,"byte_end":8702456,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702461,"byte_end":8702525,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702530,"byte_end":8702591,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702596,"byte_end":8702599,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702604,"byte_end":8702653,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702658,"byte_end":8702670,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702675,"byte_end":8702682,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702687,"byte_end":8702694,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703311,"byte_end":8703331,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702809,"byte_end":8702869,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702874,"byte_end":8702877,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702882,"byte_end":8702956,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702961,"byte_end":8702976,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702981,"byte_end":8702984,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8702989,"byte_end":8703003,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703008,"byte_end":8703011,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703016,"byte_end":8703029,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703034,"byte_end":8703064,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703069,"byte_end":8703072,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703077,"byte_end":8703141,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703146,"byte_end":8703207,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703212,"byte_end":8703215,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703220,"byte_end":8703258,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703263,"byte_end":8703275,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703280,"byte_end":8703287,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703292,"byte_end":8703299,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704033,"byte_end":8704042,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703436,"byte_end":8703512,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703517,"byte_end":8703555,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703560,"byte_end":8703563,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703568,"byte_end":8703634,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703639,"byte_end":8703642,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703647,"byte_end":8703694,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703699,"byte_end":8703702,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703707,"byte_end":8703721,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703726,"byte_end":8703729,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703734,"byte_end":8703747,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703752,"byte_end":8703782,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703787,"byte_end":8703790,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703795,"byte_end":8703859,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703864,"byte_end":8703925,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703930,"byte_end":8703933,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703938,"byte_end":8703980,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8703985,"byte_end":8703997,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704002,"byte_end":8704009,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704014,"byte_end":8704021,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705073,"byte_end":8705086,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704133,"byte_end":8704207,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704212,"byte_end":8704215,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704220,"byte_end":8704287,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704292,"byte_end":8704366,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704371,"byte_end":8704433,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704438,"byte_end":8704441,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704446,"byte_end":8704520,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704525,"byte_end":8704600,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704605,"byte_end":8704629,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704634,"byte_end":8704637,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704642,"byte_end":8704705,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704710,"byte_end":8704744,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704749,"byte_end":8704752,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704757,"byte_end":8704771,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704776,"byte_end":8704779,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704784,"byte_end":8704797,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704802,"byte_end":8704832,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704837,"byte_end":8704840,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704845,"byte_end":8704909,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704914,"byte_end":8704975,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704980,"byte_end":8704983,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8704988,"byte_end":8705020,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705025,"byte_end":8705037,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705042,"byte_end":8705049,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705054,"byte_end":8705061,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705717,"byte_end":8705720,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705205,"byte_end":8705263,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705268,"byte_end":8705271,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705276,"byte_end":8705336,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705341,"byte_end":8705344,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705349,"byte_end":8705384,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705389,"byte_end":8705392,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705397,"byte_end":8705411,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705416,"byte_end":8705419,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705424,"byte_end":8705437,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705442,"byte_end":8705472,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705477,"byte_end":8705480,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705485,"byte_end":8705549,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705554,"byte_end":8705615,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705620,"byte_end":8705623,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705628,"byte_end":8705664,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705669,"byte_end":8705681,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705686,"byte_end":8705693,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705698,"byte_end":8705705,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706287,"byte_end":8706294,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705792,"byte_end":8705850,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705855,"byte_end":8705858,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705863,"byte_end":8705939,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705944,"byte_end":8705965,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705970,"byte_end":8705973,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705978,"byte_end":8705992,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8705997,"byte_end":8706000,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706005,"byte_end":8706018,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706023,"byte_end":8706053,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706058,"byte_end":8706061,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706066,"byte_end":8706130,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706135,"byte_end":8706196,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706201,"byte_end":8706204,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706209,"byte_end":8706234,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706239,"byte_end":8706251,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706256,"byte_end":8706263,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706268,"byte_end":8706275,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706936,"byte_end":8706942,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706382,"byte_end":8706454,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706459,"byte_end":8706470,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706475,"byte_end":8706478,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706483,"byte_end":8706546,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706551,"byte_end":8706554,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706559,"byte_end":8706600,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706605,"byte_end":8706608,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706613,"byte_end":8706627,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706632,"byte_end":8706635,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706640,"byte_end":8706653,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706658,"byte_end":8706688,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706693,"byte_end":8706696,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706701,"byte_end":8706765,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706770,"byte_end":8706831,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706836,"byte_end":8706839,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706844,"byte_end":8706883,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706888,"byte_end":8706900,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706905,"byte_end":8706912,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8706917,"byte_end":8706924,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707884,"byte_end":8707894,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707030,"byte_end":8707100,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707105,"byte_end":8707116,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707121,"byte_end":8707124,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707129,"byte_end":8707204,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707209,"byte_end":8707272,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707277,"byte_end":8707348,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707353,"byte_end":8707370,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707375,"byte_end":8707378,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707383,"byte_end":8707456,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707461,"byte_end":8707537,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707542,"byte_end":8707558,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707563,"byte_end":8707566,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707571,"byte_end":8707585,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707590,"byte_end":8707593,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707598,"byte_end":8707611,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707616,"byte_end":8707646,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707651,"byte_end":8707654,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707659,"byte_end":8707723,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707728,"byte_end":8707789,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707794,"byte_end":8707797,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707802,"byte_end":8707831,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707836,"byte_end":8707848,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707853,"byte_end":8707860,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707865,"byte_end":8707872,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708334,"byte_end":8708339,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8707998,"byte_end":8708075,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708080,"byte_end":8708126,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708131,"byte_end":8708134,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708139,"byte_end":8708218,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708223,"byte_end":8708266,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708271,"byte_end":8708274,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708279,"byte_end":8708322,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708922,"byte_end":8708932,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"fn (self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708417,"byte_end":8708494,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708499,"byte_end":8708545,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708550,"byte_end":8708553,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708558,"byte_end":8708636,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708641,"byte_end":8708689,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708694,"byte_end":8708697,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708702,"byte_end":8708780,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708785,"byte_end":8708864,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708869,"byte_end":8708872,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8708877,"byte_end":8708910,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3566},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3688}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":8716185,"byte_end":8716207,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8716663,"byte_end":8716672,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8716870,"byte_end":8716874,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addr: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8716751,"byte_end":8716823,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8716828,"byte_end":8716852,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718577,"byte_end":8718585,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn (socket: net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8717709,"byte_end":8717781,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8717786,"byte_end":8717789,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8717794,"byte_end":8717867,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8717872,"byte_end":8717947,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8717952,"byte_end":8717999,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718004,"byte_end":8718007,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718012,"byte_end":8718085,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718090,"byte_end":8718165,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718170,"byte_end":8718223,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718228,"byte_end":8718231,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718236,"byte_end":8718248,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718253,"byte_end":8718256,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718261,"byte_end":8718321,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718326,"byte_end":8718329,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718334,"byte_end":8718404,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718409,"byte_end":8718482,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718487,"byte_end":8718565,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718969,"byte_end":8718974,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"fn (self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718777,"byte_end":8718854,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718859,"byte_end":8718932,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8718937,"byte_end":8718957,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719109,"byte_end":8719119,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719038,"byte_end":8719097,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719391,"byte_end":8719398,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addr: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719205,"byte_end":8719279,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719284,"byte_end":8719357,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719362,"byte_end":8719373,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720335,"byte_end":8720339,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8719932,"byte_end":8720030,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720035,"byte_end":8720106,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720111,"byte_end":8720114,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720119,"byte_end":8720202,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720207,"byte_end":8720267,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720272,"byte_end":8720275,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8720280,"byte_end":8720317,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721066,"byte_end":8721075,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722093,"byte_end":8722097,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721453,"byte_end":8721532,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721537,"byte_end":8721621,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721626,"byte_end":8721658,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721663,"byte_end":8721666,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721671,"byte_end":8721752,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721757,"byte_end":8721840,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721845,"byte_end":8721879,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721884,"byte_end":8721887,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721892,"byte_end":8721975,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8721980,"byte_end":8722025,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722030,"byte_end":8722033,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722038,"byte_end":8722075,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722237,"byte_end":8722246,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722965,"byte_end":8722972,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&mut self, buf: &[u8], target: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722674,"byte_end":8722746,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722751,"byte_end":8722822,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722827,"byte_end":8722830,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722835,"byte_end":8722911,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8722916,"byte_end":8722947,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8723444,"byte_end":8723456,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8], target: &SocketAddr) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724295,"byte_end":8724304,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8723905,"byte_end":8723984,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8723989,"byte_end":8724056,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724061,"byte_end":8724064,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724069,"byte_end":8724147,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724152,"byte_end":8724230,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724235,"byte_end":8724277,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724463,"byte_end":8724477,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725179,"byte_end":8725188,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8724962,"byte_end":8725026,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725031,"byte_end":8725034,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725039,"byte_end":8725105,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725110,"byte_end":8725113,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725118,"byte_end":8725167,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725444,"byte_end":8725457,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725267,"byte_end":8725331,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725336,"byte_end":8725339,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725344,"byte_end":8725415,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725420,"byte_end":8725432,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725796,"byte_end":8725813,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725550,"byte_end":8725619,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725624,"byte_end":8725627,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725632,"byte_end":8725706,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725711,"byte_end":8725714,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725719,"byte_end":8725784,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726153,"byte_end":8726174,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725900,"byte_end":8725969,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725974,"byte_end":8725977,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8725982,"byte_end":8726056,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726061,"byte_end":8726064,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726069,"byte_end":8726079,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726084,"byte_end":8726087,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726092,"byte_end":8726141,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726517,"byte_end":8726533,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726275,"byte_end":8726343,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726348,"byte_end":8726351,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726356,"byte_end":8726429,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726434,"byte_end":8726437,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726442,"byte_end":8726505,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727012,"byte_end":8727032,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726618,"byte_end":8726686,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726691,"byte_end":8726694,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726699,"byte_end":8726769,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726774,"byte_end":8726848,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726853,"byte_end":8726915,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726920,"byte_end":8726923,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726928,"byte_end":8726938,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726943,"byte_end":8726946,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8726951,"byte_end":8727000,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727381,"byte_end":8727398,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727133,"byte_end":8727204,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727209,"byte_end":8727212,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727217,"byte_end":8727291,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727296,"byte_end":8727299,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727304,"byte_end":8727369,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727742,"byte_end":8727763,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727485,"byte_end":8727556,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727561,"byte_end":8727564,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727569,"byte_end":8727645,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727650,"byte_end":8727653,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727658,"byte_end":8727668,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727673,"byte_end":8727676,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727681,"byte_end":8727730,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728057,"byte_end":8728060,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727864,"byte_end":8727922,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727927,"byte_end":8727930,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8727935,"byte_end":8727995,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728000,"byte_end":8728003,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728008,"byte_end":8728045,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728317,"byte_end":8728324,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728132,"byte_end":8728190,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728195,"byte_end":8728198,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728203,"byte_end":8728279,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728284,"byte_end":8728305,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728842,"byte_end":8728859,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728412,"byte_end":8728470,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728475,"byte_end":8728478,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728483,"byte_end":8728557,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728562,"byte_end":8728635,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728640,"byte_end":8728712,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728717,"byte_end":8728787,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8728792,"byte_end":8728830,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729324,"byte_end":8729341,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729008,"byte_end":8729068,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729073,"byte_end":8729076,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729081,"byte_end":8729155,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729160,"byte_end":8729233,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729238,"byte_end":8729312,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729708,"byte_end":8729726,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729484,"byte_end":8729543,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729548,"byte_end":8729551,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729556,"byte_end":8729626,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729631,"byte_end":8729634,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729639,"byte_end":8729696,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730102,"byte_end":8730120,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729876,"byte_end":8729937,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729942,"byte_end":8729945,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8729950,"byte_end":8730020,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730025,"byte_end":8730028,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730033,"byte_end":8730090,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3695},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732755,"byte_end":8732763,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732567,"byte_end":8732626,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732627,"byte_end":8732630,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732631,"byte_end":8732711,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732712,"byte_end":8732726,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3700},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732977,"byte_end":8732985,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732782,"byte_end":8732841,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732842,"byte_end":8732845,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732846,"byte_end":8732933,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8732934,"byte_end":8732948,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733327,"byte_end":8733339,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733198,"byte_end":8733275,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733276,"byte_end":8733298,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734376,"byte_end":8734383,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"fn (self, other: SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734161,"byte_end":8734232,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734237,"byte_end":8734303,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734308,"byte_end":8734364,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734874,"byte_end":8734883,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734484,"byte_end":8734563,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734568,"byte_end":8734635,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734640,"byte_end":8734643,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734648,"byte_end":8734726,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734731,"byte_end":8734809,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734814,"byte_end":8734856,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735663,"byte_end":8735667,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735018,"byte_end":8735097,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735102,"byte_end":8735186,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735191,"byte_end":8735223,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735228,"byte_end":8735231,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735236,"byte_end":8735317,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735322,"byte_end":8735405,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735410,"byte_end":8735444,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735449,"byte_end":8735452,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735457,"byte_end":8735540,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735545,"byte_end":8735590,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735595,"byte_end":8735598,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735603,"byte_end":8735645,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736016,"byte_end":8736023,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"fn (self, other: RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735801,"byte_end":8735872,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735877,"byte_end":8735943,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735948,"byte_end":8736004,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736415,"byte_end":8736422,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"fn (&mut self, buf: &[u8], target: &SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736124,"byte_end":8736196,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736201,"byte_end":8736272,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736277,"byte_end":8736280,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736285,"byte_end":8736361,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736366,"byte_end":8736397,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736974,"byte_end":8736978,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736566,"byte_end":8736664,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736669,"byte_end":8736740,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736745,"byte_end":8736748,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736753,"byte_end":8736836,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736841,"byte_end":8736901,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736906,"byte_end":8736909,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8736914,"byte_end":8736956,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3711},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3773},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3950}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"! Unix domain socket utility types","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":8737286,"byte_end":8737322,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3954},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8737960,"byte_end":8737972,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3955}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738129,"byte_end":8738133,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738056,"byte_end":8738117,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738596,"byte_end":8738600,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738316,"byte_end":8738365,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738370,"byte_end":8738373,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738378,"byte_end":8738449,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738454,"byte_end":8738524,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738529,"byte_end":8738584,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739426,"byte_end":8739434,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn (datagram: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738811,"byte_end":8738878,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738883,"byte_end":8738930,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738935,"byte_end":8738938,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738943,"byte_end":8739013,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739018,"byte_end":8739072,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739077,"byte_end":8739080,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739085,"byte_end":8739097,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739102,"byte_end":8739105,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739110,"byte_end":8739170,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739175,"byte_end":8739178,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739183,"byte_end":8739253,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739258,"byte_end":8739331,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739336,"byte_end":8739414,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739885,"byte_end":8739892,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8739806,"byte_end":8739873,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740245,"byte_end":8740252,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740026,"byte_end":8740075,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740080,"byte_end":8740083,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740088,"byte_end":8740160,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740165,"byte_end":8740233,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740424,"byte_end":8740428,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8740356,"byte_end":8740406,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8741623,"byte_end":8741627,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8741571,"byte_end":8741605,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8742305,"byte_end":8742312,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&mut self, buf: &[u8], target: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8742233,"byte_end":8742287,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743033,"byte_end":8743042,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8742981,"byte_end":8743015,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743769,"byte_end":8743779,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743698,"byte_end":8743757,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743995,"byte_end":8744004,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743865,"byte_end":8743911,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743916,"byte_end":8743919,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8743924,"byte_end":8743983,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744148,"byte_end":8744158,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744089,"byte_end":8744136,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744532,"byte_end":8744540,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744251,"byte_end":8744317,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744322,"byte_end":8744325,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744330,"byte_end":8744398,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744403,"byte_end":8744473,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744478,"byte_end":8744520,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8745918,"byte_end":8745926,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3958}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8745817,"byte_end":8745840,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8745858,"byte_end":8745906,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746435,"byte_end":8746446,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746106,"byte_end":8746181,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746186,"byte_end":8746201,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746206,"byte_end":8746209,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746214,"byte_end":8746284,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746289,"byte_end":8746364,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746369,"byte_end":8746423,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3962},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748772,"byte_end":8748784,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3963}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749283,"byte_end":8749287,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748868,"byte_end":8748929,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748934,"byte_end":8748937,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748942,"byte_end":8748954,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748959,"byte_end":8748962,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748967,"byte_end":8749027,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749032,"byte_end":8749035,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749040,"byte_end":8749110,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749115,"byte_end":8749188,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749193,"byte_end":8749271,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750131,"byte_end":8750139,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn (listener: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749516,"byte_end":8749583,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749588,"byte_end":8749635,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749640,"byte_end":8749643,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749648,"byte_end":8749718,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749723,"byte_end":8749777,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749782,"byte_end":8749785,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749790,"byte_end":8749802,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749807,"byte_end":8749810,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749815,"byte_end":8749875,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749880,"byte_end":8749883,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749888,"byte_end":8749958,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8749963,"byte_end":8750036,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750041,"byte_end":8750119,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750426,"byte_end":8750436,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750360,"byte_end":8750414,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750581,"byte_end":8750591,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750522,"byte_end":8750569,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750757,"byte_end":8750763,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&mut self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8750684,"byte_end":8750739,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753232,"byte_end":8753240,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8751868,"byte_end":8751942,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8751947,"byte_end":8751950,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8751955,"byte_end":8752018,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752023,"byte_end":8752026,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752031,"byte_end":8752107,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752112,"byte_end":8752181,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752186,"byte_end":8752215,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752220,"byte_end":8752223,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752228,"byte_end":8752240,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752245,"byte_end":8752248,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752253,"byte_end":8752328,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752333,"byte_end":8752408,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752413,"byte_end":8752487,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752492,"byte_end":8752567,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752572,"byte_end":8752580,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752585,"byte_end":8752588,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752593,"byte_end":8752607,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752612,"byte_end":8752615,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752620,"byte_end":8752633,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752638,"byte_end":8752671,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752676,"byte_end":8752709,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752714,"byte_end":8752717,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752722,"byte_end":8752740,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752745,"byte_end":8752766,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752771,"byte_end":8752849,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752854,"byte_end":8752901,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752906,"byte_end":8752909,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752914,"byte_end":8752970,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8752975,"byte_end":8753001,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753006,"byte_end":8753037,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753042,"byte_end":8753086,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753091,"byte_end":8753108,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753113,"byte_end":8753166,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753171,"byte_end":8753184,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753189,"byte_end":8753198,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753203,"byte_end":8753208,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753213,"byte_end":8753220,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755351,"byte_end":8755359,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755290,"byte_end":8755322,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755444,"byte_end":8755453,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755382,"byte_end":8755415,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3978},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757419,"byte_end":8757429,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3979}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757751,"byte_end":8757758,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757509,"byte_end":8757552,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757557,"byte_end":8757560,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757565,"byte_end":8757636,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757641,"byte_end":8757717,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757722,"byte_end":8757733,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758643,"byte_end":8758651,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758034,"byte_end":8758099,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758104,"byte_end":8758149,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758154,"byte_end":8758157,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758162,"byte_end":8758230,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758235,"byte_end":8758289,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758294,"byte_end":8758297,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758302,"byte_end":8758314,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758319,"byte_end":8758322,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758327,"byte_end":8758387,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758392,"byte_end":8758395,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758400,"byte_end":8758470,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758475,"byte_end":8758548,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758553,"byte_end":8758631,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759135,"byte_end":8759139,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758855,"byte_end":8758904,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758909,"byte_end":8758912,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758917,"byte_end":8758988,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8758993,"byte_end":8759063,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759068,"byte_end":8759123,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759580,"byte_end":8759590,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759500,"byte_end":8759568,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759757,"byte_end":8759766,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759676,"byte_end":8759745,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759945,"byte_end":8759954,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"fn (&self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8759851,"byte_end":8759933,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760090,"byte_end":8760100,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760031,"byte_end":8760078,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760474,"byte_end":8760482,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760193,"byte_end":8760259,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760264,"byte_end":8760267,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760272,"byte_end":8760340,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760345,"byte_end":8760415,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760420,"byte_end":8760462,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760716,"byte_end":8760721,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760576,"byte_end":8760653,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760658,"byte_end":8760704,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3980},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8764302,"byte_end":8764307,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8764211,"byte_end":8764239,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3981},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8764355,"byte_end":8764358,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3980},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8764314,"byte_end":8764346,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3982},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8764413,"byte_end":8764416,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3980},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":8764371,"byte_end":8764404,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":4098}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":4103},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4253},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4414},{"krate":0,"index":4417},{"krate":0,"index":4277},{"krate":0,"index":4282},{"krate":0,"index":4324},{"krate":0,"index":4419},{"krate":0,"index":4423},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4426},{"krate":0,"index":4431},{"krate":0,"index":4338},{"krate":0,"index":4352},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4355},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4365}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20581,"byte_end":20608,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20684,"byte_end":20701,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"! An implementation of asynchronous process management for Tokio.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8769732,"byte_end":8769799,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8769800,"byte_end":8769803,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8769804,"byte_end":8769884,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8769885,"byte_end":8769982,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8769983,"byte_end":8770074,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"! variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770075,"byte_end":8770171,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"! support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770172,"byte_end":8770255,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770256,"byte_end":8770259,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770260,"byte_end":8770312,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770313,"byte_end":8770316,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770317,"byte_end":8770331,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770332,"byte_end":8770335,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770336,"byte_end":8770415,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"! for it complete.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770416,"byte_end":8770436,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770437,"byte_end":8770440,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770441,"byte_end":8770454,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770455,"byte_end":8770487,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770488,"byte_end":8770491,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770492,"byte_end":8770510,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770511,"byte_end":8770574,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"!     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770575,"byte_end":8770672,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"!     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770673,"byte_end":8770742,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"!     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770743,"byte_end":8770809,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"!                         .spawn();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770810,"byte_end":8770847,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770848,"byte_end":8770851,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"!     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770852,"byte_end":8770927,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"!     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770928,"byte_end":8770981,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770982,"byte_end":8770985,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"!     // Await until the future (and the command) completes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8770986,"byte_end":8771047,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"!     let status = future.await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771048,"byte_end":8771083,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"!     println!(\"the command exited with: {}\", status);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771084,"byte_end":8771140,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771141,"byte_end":8771155,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771156,"byte_end":8771161,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771162,"byte_end":8771169,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771170,"byte_end":8771173,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771174,"byte_end":8771251,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! world` but we also capture its output.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771252,"byte_end":8771294,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771295,"byte_end":8771298,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771299,"byte_end":8771312,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771313,"byte_end":8771345,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771346,"byte_end":8771349,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771350,"byte_end":8771368,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771369,"byte_end":8771432,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"!     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771433,"byte_end":8771506,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"!     // immediately returning the `Child`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771507,"byte_end":8771552,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"!     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771553,"byte_end":8771620,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"!                         .output();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771621,"byte_end":8771659,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771660,"byte_end":8771663,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     let output = output.await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771664,"byte_end":8771699,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771700,"byte_end":8771703,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"!     assert!(output.status.success());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771704,"byte_end":8771745,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"!     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771746,"byte_end":8771798,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771799,"byte_end":8771813,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771814,"byte_end":8771819,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771820,"byte_end":8771827,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771828,"byte_end":8771831,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! We can also read input line by line.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771832,"byte_end":8771872,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771873,"byte_end":8771876,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771877,"byte_end":8771890,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771891,"byte_end":8771939,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"! use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771940,"byte_end":8771972,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771973,"byte_end":8771976,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! use std::process::Stdio;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8771977,"byte_end":8772005,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772006,"byte_end":8772009,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772010,"byte_end":8772028,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772029,"byte_end":8772092,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"!     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772093,"byte_end":8772135,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772136,"byte_end":8772139,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"!     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772140,"byte_end":8772219,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"!     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772220,"byte_end":8772297,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"!     // current process (for example, this means that standard input will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772298,"byte_end":8772374,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"!     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772375,"byte_end":8772454,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"!     // the terminal if this process is invoked from the command line).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772455,"byte_end":8772529,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"!     cmd.stdout(Stdio::piped());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772530,"byte_end":8772565,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772566,"byte_end":8772569,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"!     let mut child = cmd.spawn()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772570,"byte_end":8772605,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"!         .expect(\"failed to spawn command\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772606,"byte_end":8772653,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772654,"byte_end":8772657,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     let stdout = child.stdout.take()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772658,"byte_end":8772698,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"!         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772699,"byte_end":8772760,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772761,"byte_end":8772764,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"!     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772765,"byte_end":8772821,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772822,"byte_end":8772825,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772826,"byte_end":8772897,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"!     // make progress on its own while we await for any output.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772898,"byte_end":8772964,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"!     tokio::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772965,"byte_end":8772993,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"!         let status = child.await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8772994,"byte_end":8773030,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"!             .expect(\"child process encountered an error\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773031,"byte_end":8773093,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773094,"byte_end":8773097,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!         println!(\"child status was: {}\", status);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773098,"byte_end":8773151,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773152,"byte_end":8773163,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773164,"byte_end":8773167,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"!     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773168,"byte_end":8773226,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"!         println!(\"Line: {}\", line);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773227,"byte_end":8773266,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773267,"byte_end":8773276,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773277,"byte_end":8773280,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773281,"byte_end":8773295,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773296,"byte_end":8773301,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773302,"byte_end":8773309,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773310,"byte_end":8773313,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! # Caveats","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773314,"byte_end":8773327,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773328,"byte_end":8773331,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773332,"byte_end":8773407,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"! paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773408,"byte_end":8773481,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"! default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773482,"byte_end":8773562,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773563,"byte_end":8773566,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773567,"byte_end":8773641,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"! and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773642,"byte_end":8773716,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"! has exited.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773717,"byte_end":8773732,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773733,"byte_end":8773736,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! [`Command`]: crate::process::Command","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8773737,"byte_end":8773777,"line_start":111,"line_end":111,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4414},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774798,"byte_end":8774805,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":4415},{"krate":0,"index":4416}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774286,"byte_end":8774383,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774384,"byte_end":8774476,"line_start":140,"line_end":140,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774477,"byte_end":8774563,"line_start":141,"line_end":141,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774564,"byte_end":8774594,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774595,"byte_end":8774598,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774599,"byte_end":8774684,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774685,"byte_end":8774688,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774689,"byte_end":8774741,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8774742,"byte_end":8774769,"line_start":147,"line_end":147,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776155,"byte_end":8776158,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"fn <S> (program: S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775046,"byte_end":8775105,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775110,"byte_end":8775171,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775176,"byte_end":8775179,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775184,"byte_end":8775217,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775222,"byte_end":8775269,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775274,"byte_end":8775327,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775332,"byte_end":8775420,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775425,"byte_end":8775428,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775433,"byte_end":8775494,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775499,"byte_end":8775535,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775540,"byte_end":8775543,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775548,"byte_end":8775620,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775625,"byte_end":8775647,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775652,"byte_end":8775655,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775660,"byte_end":8775723,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775728,"byte_end":8775775,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775780,"byte_end":8775839,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775844,"byte_end":8775883,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775888,"byte_end":8775891,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775896,"byte_end":8775910,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775915,"byte_end":8775918,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775923,"byte_end":8775939,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775944,"byte_end":8775947,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775952,"byte_end":8775965,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775970,"byte_end":8776002,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776007,"byte_end":8776044,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776049,"byte_end":8776056,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776061,"byte_end":8776064,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776069,"byte_end":8776143,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777005,"byte_end":8777008,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"fn <S> (&mut self, arg: S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776257,"byte_end":8776301,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776306,"byte_end":8776309,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776314,"byte_end":8776373,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776378,"byte_end":8776381,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776386,"byte_end":8776399,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776404,"byte_end":8776442,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776447,"byte_end":8776478,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776483,"byte_end":8776490,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776495,"byte_end":8776498,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776503,"byte_end":8776522,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776527,"byte_end":8776530,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776535,"byte_end":8776548,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776553,"byte_end":8776591,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776596,"byte_end":8776612,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776617,"byte_end":8776645,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776650,"byte_end":8776657,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776662,"byte_end":8776665,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776670,"byte_end":8776714,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776719,"byte_end":8776722,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776727,"byte_end":8776758,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776763,"byte_end":8776766,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776771,"byte_end":8776785,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776790,"byte_end":8776793,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776798,"byte_end":8776814,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776819,"byte_end":8776822,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776827,"byte_end":8776840,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776845,"byte_end":8776877,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776882,"byte_end":8776885,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776890,"byte_end":8776926,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776931,"byte_end":8776953,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776958,"byte_end":8776981,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8776986,"byte_end":8776993,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777492,"byte_end":8777496,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"fn <I, S> (&mut self, args: I) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777114,"byte_end":8777165,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777170,"byte_end":8777173,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777178,"byte_end":8777220,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777225,"byte_end":8777228,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777233,"byte_end":8777262,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777267,"byte_end":8777270,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777275,"byte_end":8777289,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777294,"byte_end":8777297,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777302,"byte_end":8777318,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777323,"byte_end":8777326,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777331,"byte_end":8777344,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777349,"byte_end":8777381,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777386,"byte_end":8777389,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777394,"byte_end":8777430,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777435,"byte_end":8777468,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777473,"byte_end":8777480,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778112,"byte_end":8778115,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"fn <K, V> (&mut self, key: K, val: V) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777668,"byte_end":8777723,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777728,"byte_end":8777731,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777736,"byte_end":8777831,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777836,"byte_end":8777882,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777887,"byte_end":8777890,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777895,"byte_end":8777909,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777914,"byte_end":8777917,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777922,"byte_end":8777938,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777943,"byte_end":8777946,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777951,"byte_end":8777964,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8777969,"byte_end":8778001,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778006,"byte_end":8778009,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778014,"byte_end":8778050,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778055,"byte_end":8778088,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778093,"byte_end":8778100,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778989,"byte_end":8778993,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"fn <I, K, V> (&mut self, vars: I) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778287,"byte_end":8778346,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778351,"byte_end":8778354,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778359,"byte_end":8778373,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778378,"byte_end":8778381,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778386,"byte_end":8778402,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778407,"byte_end":8778410,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778415,"byte_end":8778428,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778433,"byte_end":8778465,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778470,"byte_end":8778500,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778505,"byte_end":8778522,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778527,"byte_end":8778561,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778566,"byte_end":8778569,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778574,"byte_end":8778622,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778627,"byte_end":8778667,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778672,"byte_end":8778738,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778743,"byte_end":8778763,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778768,"byte_end":8778771,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778776,"byte_end":8778818,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778823,"byte_end":8778856,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778861,"byte_end":8778898,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778903,"byte_end":8778927,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778932,"byte_end":8778965,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8778970,"byte_end":8778977,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779471,"byte_end":8779481,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"fn <K> (&mut self, key: K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779198,"byte_end":8779242,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779247,"byte_end":8779250,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779255,"byte_end":8779269,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779274,"byte_end":8779277,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779282,"byte_end":8779298,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779303,"byte_end":8779306,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779311,"byte_end":8779324,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779329,"byte_end":8779361,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779366,"byte_end":8779369,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779374,"byte_end":8779410,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779415,"byte_end":8779447,"line_start":324,"line_end":324,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779452,"byte_end":8779459,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779876,"byte_end":8779885,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"fn (&mut self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779594,"byte_end":8779654,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779659,"byte_end":8779662,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779667,"byte_end":8779681,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779686,"byte_end":8779689,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779694,"byte_end":8779710,"line_start":335,"line_end":335,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779715,"byte_end":8779718,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779723,"byte_end":8779736,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779741,"byte_end":8779773,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779778,"byte_end":8779781,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779786,"byte_end":8779822,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779827,"byte_end":8779852,"line_start":341,"line_end":341,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779857,"byte_end":8779864,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780730,"byte_end":8780741,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"fn <P> (&mut self, dir: P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8779969,"byte_end":8780022,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780027,"byte_end":8780030,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780035,"byte_end":8780067,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780072,"byte_end":8780075,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780080,"byte_end":8780155,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780160,"byte_end":8780229,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780234,"byte_end":8780306,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780311,"byte_end":8780374,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780379,"byte_end":8780440,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780445,"byte_end":8780448,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780453,"byte_end":8780500,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780505,"byte_end":8780508,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780513,"byte_end":8780527,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780532,"byte_end":8780535,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780540,"byte_end":8780556,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780561,"byte_end":8780564,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780569,"byte_end":8780582,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780587,"byte_end":8780619,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780624,"byte_end":8780627,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780632,"byte_end":8780668,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780673,"byte_end":8780706,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780711,"byte_end":8780718,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781436,"byte_end":8781441,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780854,"byte_end":8780931,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780936,"byte_end":8780939,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8780944,"byte_end":8781011,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781016,"byte_end":8781066,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781071,"byte_end":8781074,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781079,"byte_end":8781124,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781129,"byte_end":8781170,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781175,"byte_end":8781178,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781183,"byte_end":8781197,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781202,"byte_end":8781205,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781210,"byte_end":8781226,"line_start":385,"line_end":385,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781231,"byte_end":8781234,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781239,"byte_end":8781252,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781257,"byte_end":8781287,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781292,"byte_end":8781324,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781329,"byte_end":8781332,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781337,"byte_end":8781373,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781378,"byte_end":8781412,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781417,"byte_end":8781424,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4304},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782132,"byte_end":8782138,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781548,"byte_end":8781627,"line_start":399,"line_end":399,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781632,"byte_end":8781635,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781640,"byte_end":8781707,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781712,"byte_end":8781762,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781767,"byte_end":8781770,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781775,"byte_end":8781820,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781825,"byte_end":8781866,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781871,"byte_end":8781874,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781879,"byte_end":8781893,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781898,"byte_end":8781901,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781906,"byte_end":8781922,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781927,"byte_end":8781930,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781935,"byte_end":8781948,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781953,"byte_end":8781986,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8781991,"byte_end":8782019,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782024,"byte_end":8782027,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782032,"byte_end":8782068,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782073,"byte_end":8782108,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782113,"byte_end":8782120,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782831,"byte_end":8782837,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"fn <T> (&mut self, cfg: T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782246,"byte_end":8782324,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782329,"byte_end":8782332,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782337,"byte_end":8782404,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782409,"byte_end":8782459,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782464,"byte_end":8782467,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782472,"byte_end":8782517,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782522,"byte_end":8782563,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782568,"byte_end":8782571,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782576,"byte_end":8782590,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782595,"byte_end":8782598,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782603,"byte_end":8782619,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782624,"byte_end":8782627,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782632,"byte_end":8782645,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782650,"byte_end":8782683,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782688,"byte_end":8782718,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782723,"byte_end":8782726,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782731,"byte_end":8782767,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782772,"byte_end":8782807,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782812,"byte_end":8782819,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783290,"byte_end":8783302,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"fn (&mut self, kill_on_drop: bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8782945,"byte_end":8783021,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783026,"byte_end":8783087,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783092,"byte_end":8783095,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783100,"byte_end":8783177,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783182,"byte_end":8783261,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783266,"byte_end":8783278,"line_start":452,"line_end":452,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784019,"byte_end":8784022,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"fn (&mut self, id: u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783821,"byte_end":8783879,"line_start":469,"line_end":469,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783884,"byte_end":8783947,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783952,"byte_end":8783990,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8783995,"byte_end":8784007,"line_start":472,"line_end":472,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784260,"byte_end":8784263,"line_start":481,"line_end":481,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"fn (&mut self, id: u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid` but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid` but sets the group ID of the child process. This has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784111,"byte_end":8784184,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784189,"byte_end":8784231,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784236,"byte_end":8784248,"line_start":480,"line_end":480,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785917,"byte_end":8785925,"line_start":516,"line_end":516,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"fn <F> (&mut self, f: F) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784352,"byte_end":8784420,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784425,"byte_end":8784437,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784442,"byte_end":8784445,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784450,"byte_end":8784524,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784529,"byte_end":8784602,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784607,"byte_end":8784635,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784640,"byte_end":8784643,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784648,"byte_end":8784723,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784728,"byte_end":8784803,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784808,"byte_end":8784881,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784886,"byte_end":8784898,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784903,"byte_end":8784906,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784911,"byte_end":8784923,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784928,"byte_end":8784931,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8784936,"byte_end":8785008,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785013,"byte_end":8785086,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785091,"byte_end":8785164,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785169,"byte_end":8785241,"line_start":503,"line_end":503,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785246,"byte_end":8785319,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785324,"byte_end":8785389,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785394,"byte_end":8785397,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785402,"byte_end":8785469,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785474,"byte_end":8785549,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785554,"byte_end":8785625,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785630,"byte_end":8785666,"line_start":510,"line_end":510,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785671,"byte_end":8785674,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785679,"byte_end":8785755,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785760,"byte_end":8785832,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785837,"byte_end":8785881,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8785886,"byte_end":8785898,"line_start":515,"line_end":515,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787564,"byte_end":8787569,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"fn (&mut self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786094,"byte_end":8786164,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786169,"byte_end":8786172,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786177,"byte_end":8786248,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786253,"byte_end":8786256,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786261,"byte_end":8786332,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786337,"byte_end":8786412,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786417,"byte_end":8786492,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786497,"byte_end":8786569,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786574,"byte_end":8786593,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786598,"byte_end":8786601,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786606,"byte_end":8786677,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786682,"byte_end":8786697,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786702,"byte_end":8786705,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786710,"byte_end":8786723,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786728,"byte_end":8786731,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786736,"byte_end":8786811,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786816,"byte_end":8786891,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786896,"byte_end":8786976,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786981,"byte_end":8786984,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8786989,"byte_end":8787063,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787068,"byte_end":8787142,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787147,"byte_end":8787162,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787167,"byte_end":8787170,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787175,"byte_end":8787189,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787194,"byte_end":8787197,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787202,"byte_end":8787218,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787223,"byte_end":8787226,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787231,"byte_end":8787244,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787249,"byte_end":8787281,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787286,"byte_end":8787289,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787294,"byte_end":8787345,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787350,"byte_end":8787376,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787381,"byte_end":8787401,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787406,"byte_end":8787455,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787460,"byte_end":8787478,"line_start":558,"line_end":558,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787483,"byte_end":8787530,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787535,"byte_end":8787540,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8787545,"byte_end":8787552,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789127,"byte_end":8789133,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"fn (&mut self) -> impl Future<Output = io::Result<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788066,"byte_end":8788139,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788144,"byte_end":8788175,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788180,"byte_end":8788183,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788188,"byte_end":8788259,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788264,"byte_end":8788343,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788348,"byte_end":8788386,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788391,"byte_end":8788394,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788399,"byte_end":8788470,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788475,"byte_end":8788490,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788495,"byte_end":8788498,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788503,"byte_end":8788565,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788570,"byte_end":8788618,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788623,"byte_end":8788626,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788631,"byte_end":8788643,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788648,"byte_end":8788651,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788656,"byte_end":8788731,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788736,"byte_end":8788790,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788795,"byte_end":8788798,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788803,"byte_end":8788817,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788822,"byte_end":8788825,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788830,"byte_end":8788846,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788851,"byte_end":8788854,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788859,"byte_end":8788872,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788877,"byte_end":8788909,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788914,"byte_end":8788917,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788922,"byte_end":8788973,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8788978,"byte_end":8789004,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789009,"byte_end":8789030,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789035,"byte_end":8789053,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789058,"byte_end":8789105,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789110,"byte_end":8789115,"line_start":604,"line_end":604,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791022,"byte_end":8791028,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"fn (&mut self) -> impl Future<Output = io::Result<Output>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789608,"byte_end":8789681,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789686,"byte_end":8789719,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789724,"byte_end":8789727,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789732,"byte_end":8789794,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789799,"byte_end":8789874,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789879,"byte_end":8789953,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8789958,"byte_end":8790021,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790026,"byte_end":8790067,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790072,"byte_end":8790075,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790080,"byte_end":8790151,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790156,"byte_end":8790209,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790214,"byte_end":8790284,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790289,"byte_end":8790362,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790367,"byte_end":8790386,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790391,"byte_end":8790394,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790399,"byte_end":8790470,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790475,"byte_end":8790490,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790495,"byte_end":8790498,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790503,"byte_end":8790565,"line_start":640,"line_end":640,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790570,"byte_end":8790618,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790623,"byte_end":8790626,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790631,"byte_end":8790645,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790650,"byte_end":8790653,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790658,"byte_end":8790674,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790679,"byte_end":8790682,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790687,"byte_end":8790700,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790705,"byte_end":8790737,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790742,"byte_end":8790745,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790750,"byte_end":8790773,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790778,"byte_end":8790839,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790844,"byte_end":8790865,"line_start":652,"line_end":652,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790870,"byte_end":8790888,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790893,"byte_end":8790941,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8790946,"byte_end":8791000,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791005,"byte_end":8791010,"line_start":656,"line_end":656,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4426},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793377,"byte_end":8793382,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792599,"byte_end":8792664,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792665,"byte_end":8792668,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792669,"byte_end":8792740,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792741,"byte_end":8792821,"line_start":731,"line_end":731,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792822,"byte_end":8792880,"line_start":732,"line_end":732,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792881,"byte_end":8792884,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792885,"byte_end":8792898,"line_start":734,"line_end":734,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792899,"byte_end":8792974,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8792975,"byte_end":8793048,"line_start":736,"line_end":736,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793049,"byte_end":8793129,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793130,"byte_end":8793133,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793134,"byte_end":8793208,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793209,"byte_end":8793283,"line_start":740,"line_end":740,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793284,"byte_end":8793299,"line_start":741,"line_end":741,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793300,"byte_end":8793348,"line_start":742,"line_end":742,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4428},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793536,"byte_end":8793541,"line_start":749,"line_end":749,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793429,"byte_end":8793504,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793509,"byte_end":8793527,"line_start":748,"line_end":748,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4429},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793679,"byte_end":8793685,"line_start":753,"line_end":753,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793568,"byte_end":8793643,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793648,"byte_end":8793670,"line_start":752,"line_end":752,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4430},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793823,"byte_end":8793829,"line_start":757,"line_end":757,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793713,"byte_end":8793787,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793792,"byte_end":8793814,"line_start":756,"line_end":756,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793958,"byte_end":8793960,"line_start":762,"line_end":762,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793872,"byte_end":8793946,"line_start":761,"line_end":761,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794134,"byte_end":8794138,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794018,"byte_end":8794047,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794052,"byte_end":8794055,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794060,"byte_end":8794122,"line_start":768,"line_end":768,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794294,"byte_end":8794299,"line_start":775,"line_end":775,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"fn (&mut self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794226,"byte_end":8794282,"line_start":774,"line_end":774,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794463,"byte_end":8794469,"line_start":781,"line_end":781,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"fn (&mut self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794394,"byte_end":8794451,"line_start":780,"line_end":780,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794635,"byte_end":8794641,"line_start":787,"line_end":787,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"fn (&mut self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794566,"byte_end":8794623,"line_start":786,"line_end":786,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795649,"byte_end":8795665,"line_start":807,"line_end":807,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"fn (mut self) -> io::Result<Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794719,"byte_end":8794793,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794798,"byte_end":8794850,"line_start":792,"line_end":792,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794855,"byte_end":8794858,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794863,"byte_end":8794938,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8794943,"byte_end":8795018,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795023,"byte_end":8795045,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795050,"byte_end":8795053,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795058,"byte_end":8795130,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795135,"byte_end":8795209,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795214,"byte_end":8795289,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795294,"byte_end":8795312,"line_start":801,"line_end":801,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795317,"byte_end":8795320,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795325,"byte_end":8795399,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795404,"byte_end":8795480,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795485,"byte_end":8795556,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8795561,"byte_end":8795631,"line_start":806,"line_end":806,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4433},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796779,"byte_end":8796789,"line_start":845,"line_end":845,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":4434}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796565,"byte_end":8796616,"line_start":840,"line_end":840,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796617,"byte_end":8796620,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796621,"byte_end":8796704,"line_start":842,"line_end":842,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796705,"byte_end":8796750,"line_start":843,"line_end":843,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4437},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797030,"byte_end":8797041,"line_start":854,"line_end":854,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4438}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796823,"byte_end":8796875,"line_start":849,"line_end":849,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796876,"byte_end":8796879,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796880,"byte_end":8796955,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796956,"byte_end":8797001,"line_start":852,"line_end":852,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4441},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797282,"byte_end":8797293,"line_start":863,"line_end":863,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4442}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797076,"byte_end":8797127,"line_start":858,"line_end":858,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797128,"byte_end":8797131,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797132,"byte_end":8797207,"line_start":860,"line_end":860,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797208,"byte_end":8797253,"line_start":861,"line_end":861,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":4455},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":5180},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":5285},{"krate":0,"index":5335},{"krate":0,"index":693},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":5366},{"krate":0,"index":5467},{"krate":0,"index":5665},{"krate":0,"index":5694},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":5695},{"krate":0,"index":5699},{"krate":0,"index":5701},{"krate":0,"index":5711},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! threaded scheduler runtime by default.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [`Runtime`]: Runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"! [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4996},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8856649,"byte_end":8856658,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4997}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8856834,"byte_end":8856843,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"fn () -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8856809,"byte_end":8856822,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857061,"byte_end":8857066,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"fn (err: Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857036,"byte_end":8857049,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857396,"byte_end":8857408,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857316,"byte_end":8857384,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857914,"byte_end":8857922,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857535,"byte_end":8857597,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857602,"byte_end":8857605,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857610,"byte_end":8857624,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857629,"byte_end":8857632,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857637,"byte_end":8857644,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857649,"byte_end":8857668,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857673,"byte_end":8857676,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857681,"byte_end":8857699,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857704,"byte_end":8857725,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857730,"byte_end":8857768,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857773,"byte_end":8857800,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857805,"byte_end":8857835,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857840,"byte_end":8857843,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857848,"byte_end":8857880,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857885,"byte_end":8857890,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8857895,"byte_end":8857902,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858829,"byte_end":8858839,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"fn (self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858048,"byte_end":8858127,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858132,"byte_end":8858135,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858140,"byte_end":8858152,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858157,"byte_end":8858160,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858165,"byte_end":8858239,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858244,"byte_end":8858319,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858324,"byte_end":8858382,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858387,"byte_end":8858390,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858395,"byte_end":8858409,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858414,"byte_end":8858417,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858422,"byte_end":8858441,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858446,"byte_end":8858465,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858470,"byte_end":8858473,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858478,"byte_end":8858496,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858501,"byte_end":8858522,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858527,"byte_end":8858565,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858570,"byte_end":8858597,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858602,"byte_end":8858632,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858637,"byte_end":8858640,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858645,"byte_end":8858672,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858677,"byte_end":8858725,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858730,"byte_end":8858781,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858786,"byte_end":8858795,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858800,"byte_end":8858805,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858810,"byte_end":8858817,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859604,"byte_end":8859618,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"fn (self) -> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8858980,"byte_end":8859049,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859054,"byte_end":8859126,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859131,"byte_end":8859144,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859149,"byte_end":8859152,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859157,"byte_end":8859171,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859176,"byte_end":8859179,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859184,"byte_end":8859203,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859208,"byte_end":8859227,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859232,"byte_end":8859235,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859240,"byte_end":8859258,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859263,"byte_end":8859284,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859289,"byte_end":8859327,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859332,"byte_end":8859359,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859364,"byte_end":8859394,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859399,"byte_end":8859402,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859407,"byte_end":8859457,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859462,"byte_end":8859510,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859515,"byte_end":8859556,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859561,"byte_end":8859570,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859575,"byte_end":8859580,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859585,"byte_end":8859592,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4998},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8875984,"byte_end":8875994,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"fn (&mut self, val: impl Into<String>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5196},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":141215,"byte_end":141233,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"fn () -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":162841,"byte_end":162855,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"fn <F, R> (&self, f: F) -> JoinHandle<R>","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5695},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"fn (&self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"fn (self, duration: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5750},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5807},{"krate":0,"index":5811}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976521,"byte_end":8976563,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976564,"byte_end":8976567,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976568,"byte_end":8976645,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976646,"byte_end":8976724,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976725,"byte_end":8976805,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976806,"byte_end":8976834,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976835,"byte_end":8976838,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976839,"byte_end":8976914,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976915,"byte_end":8976948,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976949,"byte_end":8976952,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976953,"byte_end":8976967,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976968,"byte_end":8976971,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8976972,"byte_end":8977007,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977008,"byte_end":8977011,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977012,"byte_end":8977030,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977031,"byte_end":8977053,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977054,"byte_end":8977057,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977058,"byte_end":8977076,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977077,"byte_end":8977140,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977141,"byte_end":8977173,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977174,"byte_end":8977211,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977212,"byte_end":8977226,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977227,"byte_end":8977232,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977233,"byte_end":8977240,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977241,"byte_end":8977244,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977245,"byte_end":8977272,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977273,"byte_end":8977276,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977277,"byte_end":8977295,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977296,"byte_end":8977316,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977317,"byte_end":8977367,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977368,"byte_end":8977371,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977372,"byte_end":8977390,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977391,"byte_end":8977454,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977455,"byte_end":8977503,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977504,"byte_end":8977559,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977560,"byte_end":8977563,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977564,"byte_end":8977614,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977615,"byte_end":8977629,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977630,"byte_end":8977662,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977663,"byte_end":8977702,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977703,"byte_end":8977712,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977713,"byte_end":8977718,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977719,"byte_end":8977726,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977727,"byte_end":8977734,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5755},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979810,"byte_end":8979816,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"fn () -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978108,"byte_end":8978174,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978175,"byte_end":8978178,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978179,"byte_end":8978256,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978257,"byte_end":8978335,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978336,"byte_end":8978385,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978386,"byte_end":8978389,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978390,"byte_end":8978466,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978467,"byte_end":8978545,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978546,"byte_end":8978584,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978585,"byte_end":8978588,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978589,"byte_end":8978602,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978603,"byte_end":8978606,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978607,"byte_end":8978689,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978690,"byte_end":8978770,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978771,"byte_end":8978852,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978853,"byte_end":8978878,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978879,"byte_end":8978882,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978883,"byte_end":8978956,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8978957,"byte_end":8979029,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979030,"byte_end":8979108,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979109,"byte_end":8979186,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979187,"byte_end":8979263,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979264,"byte_end":8979343,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979344,"byte_end":8979368,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979369,"byte_end":8979372,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979373,"byte_end":8979451,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979452,"byte_end":8979512,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979513,"byte_end":8979516,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979517,"byte_end":8979531,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979532,"byte_end":8979535,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979536,"byte_end":8979554,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979555,"byte_end":8979577,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979578,"byte_end":8979581,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979582,"byte_end":8979600,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979601,"byte_end":8979622,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979623,"byte_end":8979662,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979663,"byte_end":8979666,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979667,"byte_end":8979735,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979736,"byte_end":8979739,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979740,"byte_end":8979782,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979783,"byte_end":8979788,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":8979789,"byte_end":8979796,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5811},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":5812},{"krate":0,"index":5815},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5906},{"krate":0,"index":5909},{"krate":0,"index":5852},{"krate":0,"index":5911},{"krate":0,"index":5917},{"krate":0,"index":5915},{"krate":0,"index":5914},{"krate":0,"index":5854},{"krate":0,"index":5867},{"krate":0,"index":5871},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5919},{"krate":0,"index":5921},{"krate":0,"index":5878},{"krate":0,"index":5880},{"krate":0,"index":5923},{"krate":0,"index":5926},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5928},{"krate":0,"index":5892}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"! Unix-specific types for signal handling.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989254,"byte_end":8989298,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989299,"byte_end":8989302,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989303,"byte_end":8989377,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989378,"byte_end":8989435,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989437,"byte_end":8989450,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5911},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990765,"byte_end":8990775,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990666,"byte_end":8990723,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5855},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991174,"byte_end":8991182,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"fn (signum: c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990807,"byte_end":8990855,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990860,"byte_end":8990863,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990868,"byte_end":8990937,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990942,"byte_end":8990954,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990959,"byte_end":8990977,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990982,"byte_end":8991024,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991029,"byte_end":8991051,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991056,"byte_end":8991101,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991106,"byte_end":8991150,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991155,"byte_end":8991162,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5856},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991436,"byte_end":8991441,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991240,"byte_end":8991274,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991279,"byte_end":8991282,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991287,"byte_end":8991362,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991367,"byte_end":8991424,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5857},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991683,"byte_end":8991688,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991493,"byte_end":8991527,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991532,"byte_end":8991535,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991540,"byte_end":8991614,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991619,"byte_end":8991671,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5858},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991934,"byte_end":8991940,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991740,"byte_end":8991773,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991778,"byte_end":8991781,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991786,"byte_end":8991860,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8991865,"byte_end":8991922,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5859},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992593,"byte_end":8992602,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992410,"byte_end":8992443,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992448,"byte_end":8992451,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992456,"byte_end":8992519,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992524,"byte_end":8992581,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5860},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992851,"byte_end":8992853,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992653,"byte_end":8992685,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992690,"byte_end":8992693,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992698,"byte_end":8992770,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992775,"byte_end":8992839,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5861},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993137,"byte_end":8993141,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992903,"byte_end":8992937,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992942,"byte_end":8992945,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8992950,"byte_end":8993024,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993029,"byte_end":8993104,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993109,"byte_end":8993125,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5862},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993444,"byte_end":8993448,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993193,"byte_end":8993227,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993232,"byte_end":8993235,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993240,"byte_end":8993306,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993311,"byte_end":8993370,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993375,"byte_end":8993432,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5863},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993696,"byte_end":8993705,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993500,"byte_end":8993534,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993539,"byte_end":8993542,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993547,"byte_end":8993613,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993618,"byte_end":8993684,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993928,"byte_end":8993941,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993757,"byte_end":8993791,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993796,"byte_end":8993799,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993804,"byte_end":8993854,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993859,"byte_end":8993916,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5865},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994164,"byte_end":8994177,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8993993,"byte_end":8994027,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994032,"byte_end":8994035,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994040,"byte_end":8994090,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994095,"byte_end":8994152,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5866},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994409,"byte_end":8994422,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994229,"byte_end":8994264,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994269,"byte_end":8994272,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994277,"byte_end":8994353,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994358,"byte_end":8994397,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001845,"byte_end":9001851,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":5924},{"krate":0,"index":5925}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999080,"byte_end":8999148,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999149,"byte_end":8999152,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999153,"byte_end":8999226,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999227,"byte_end":8999305,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999306,"byte_end":8999343,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999344,"byte_end":8999347,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999348,"byte_end":8999418,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999419,"byte_end":8999494,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999495,"byte_end":8999572,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999573,"byte_end":8999652,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999653,"byte_end":8999726,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999727,"byte_end":8999803,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999804,"byte_end":8999881,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999882,"byte_end":8999910,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999911,"byte_end":8999914,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999915,"byte_end":8999995,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8999996,"byte_end":9000043,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000044,"byte_end":9000047,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000048,"byte_end":9000121,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000122,"byte_end":9000200,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000201,"byte_end":9000247,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000248,"byte_end":9000251,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000252,"byte_end":9000328,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000329,"byte_end":9000403,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000404,"byte_end":9000420,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000421,"byte_end":9000424,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000425,"byte_end":9000438,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000439,"byte_end":9000442,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000443,"byte_end":9000517,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000518,"byte_end":9000595,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000596,"byte_end":9000673,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000674,"byte_end":9000695,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000696,"byte_end":9000699,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000700,"byte_end":9000773,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000774,"byte_end":9000849,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000850,"byte_end":9000926,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9000927,"byte_end":9001003,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001004,"byte_end":9001081,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001082,"byte_end":9001147,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001148,"byte_end":9001151,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001152,"byte_end":9001230,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001231,"byte_end":9001291,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001292,"byte_end":9001295,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001296,"byte_end":9001310,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001311,"byte_end":9001314,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001315,"byte_end":9001334,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001335,"byte_end":9001338,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001339,"byte_end":9001357,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001358,"byte_end":9001408,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001409,"byte_end":9001412,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001413,"byte_end":9001431,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001432,"byte_end":9001495,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001496,"byte_end":9001544,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001545,"byte_end":9001600,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001601,"byte_end":9001604,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001605,"byte_end":9001655,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001656,"byte_end":9001670,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001671,"byte_end":9001703,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001704,"byte_end":9001743,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001744,"byte_end":9001753,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001754,"byte_end":9001759,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001760,"byte_end":9001767,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001768,"byte_end":9001816,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5884},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002944,"byte_end":9002950,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"fn (kind: SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001899,"byte_end":9001973,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9001974,"byte_end":9002023,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002024,"byte_end":9002027,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002028,"byte_end":9002106,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002107,"byte_end":9002171,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002172,"byte_end":9002246,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002247,"byte_end":9002294,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002295,"byte_end":9002298,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002299,"byte_end":9002366,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002367,"byte_end":9002440,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002441,"byte_end":9002489,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002490,"byte_end":9002493,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002494,"byte_end":9002561,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002562,"byte_end":9002631,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002632,"byte_end":9002682,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002683,"byte_end":9002686,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002687,"byte_end":9002699,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002700,"byte_end":9002703,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002704,"byte_end":9002762,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002763,"byte_end":9002831,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002832,"byte_end":9002861,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9002862,"byte_end":9002936,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5886},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004161,"byte_end":9004165,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"fn (&mut self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003454,"byte_end":9003502,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003507,"byte_end":9003510,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003515,"byte_end":9003587,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003592,"byte_end":9003595,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003600,"byte_end":9003614,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003619,"byte_end":9003622,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003627,"byte_end":9003646,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003651,"byte_end":9003654,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003659,"byte_end":9003677,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003682,"byte_end":9003732,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003737,"byte_end":9003740,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003745,"byte_end":9003763,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003768,"byte_end":9003831,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003836,"byte_end":9003884,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003889,"byte_end":9003944,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003949,"byte_end":9003952,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003957,"byte_end":9004007,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004012,"byte_end":9004026,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004031,"byte_end":9004063,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004068,"byte_end":9004107,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004112,"byte_end":9004121,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004126,"byte_end":9004131,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004136,"byte_end":9004143,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5891},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005114,"byte_end":9005123,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004287,"byte_end":9004357,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004362,"byte_end":9004382,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004387,"byte_end":9004390,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004395,"byte_end":9004467,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004472,"byte_end":9004475,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004480,"byte_end":9004494,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004499,"byte_end":9004502,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004507,"byte_end":9004553,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004558,"byte_end":9004561,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004566,"byte_end":9004584,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004589,"byte_end":9004611,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004616,"byte_end":9004644,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004649,"byte_end":9004684,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004689,"byte_end":9004725,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004730,"byte_end":9004733,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004738,"byte_end":9004759,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004764,"byte_end":9004787,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004792,"byte_end":9004797,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004802,"byte_end":9004805,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004810,"byte_end":9004840,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004845,"byte_end":9004878,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004883,"byte_end":9004886,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004891,"byte_end":9004978,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9004983,"byte_end":9005024,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005029,"byte_end":9005066,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005071,"byte_end":9005080,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005085,"byte_end":9005090,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005095,"byte_end":9005102,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5931},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":5932},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6108},{"krate":0,"index":6111},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6209},{"krate":0,"index":6212},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6299},{"krate":0,"index":6302},{"krate":0,"index":6322},{"krate":0,"index":6325},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6480},{"krate":0,"index":6595},{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6516},{"krate":0,"index":6518}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014293,"byte_end":9014324,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014325,"byte_end":9014328,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014329,"byte_end":9014474,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014475,"byte_end":9014478,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9014479,"byte_end":9014530,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040211,"byte_end":9040220,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":6523},{"krate":0,"index":6524}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040057,"byte_end":9040114,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040132,"byte_end":9040199,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6530},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041374,"byte_end":9041383,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6535}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041220,"byte_end":9041277,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041295,"byte_end":9041362,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9042503,"byte_end":9042508,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10290},{"krate":0,"index":10291}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10266},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9043741,"byte_end":9043748,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10269},{"krate":0,"index":10270}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6009},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044313,"byte_end":9044323,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9043900,"byte_end":9043953,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9043954,"byte_end":9043957,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9043958,"byte_end":9044023,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044024,"byte_end":9044080,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044081,"byte_end":9044084,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044085,"byte_end":9044103,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044104,"byte_end":9044107,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044108,"byte_end":9044187,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044188,"byte_end":9044263,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044264,"byte_end":9044302,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":6080},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049224,"byte_end":9049238,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6082},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049318,"byte_end":9049328,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049252,"byte_end":9049304,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6083},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049380,"byte_end":9049390,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"fn (lower: usize, upper: Option<usize>) -> Self::Collection","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049339,"byte_end":9049368,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049607,"byte_end":9049613,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"fn (collection: &mut Self::Collection, item: T) -> bool","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049457,"byte_end":9049505,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049514,"byte_end":9049517,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049526,"byte_end":9049595,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6085},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049729,"byte_end":9049737,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"fn (collection: &mut Self::Collection) -> Self","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9049676,"byte_end":9049717,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6541},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050030,"byte_end":9050035,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9049904,"byte_end":9049952,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9049970,"byte_end":9050018,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6101},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050625,"byte_end":9050630,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050160,"byte_end":9050201,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050202,"byte_end":9050205,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050206,"byte_end":9050274,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050275,"byte_end":9050351,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050352,"byte_end":9050362,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050363,"byte_end":9050366,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050367,"byte_end":9050381,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050382,"byte_end":9050385,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050386,"byte_end":9050402,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050403,"byte_end":9050406,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050407,"byte_end":9050414,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050415,"byte_end":9050456,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050457,"byte_end":9050460,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050461,"byte_end":9050479,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050480,"byte_end":9050501,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050502,"byte_end":9050548,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050549,"byte_end":9050552,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050553,"byte_end":9050597,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050598,"byte_end":9050603,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050604,"byte_end":9050611,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10193},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051213,"byte_end":9051219,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":10196},{"krate":0,"index":10197}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10148},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9052651,"byte_end":9052660,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":10151},{"krate":0,"index":10152}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10120},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9054077,"byte_end":9054087,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":10124},{"krate":0,"index":10125},{"krate":0,"index":10126}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10072},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9055243,"byte_end":9055247,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10074}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6548},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056379,"byte_end":9056383,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6550}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056255,"byte_end":9056301,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056319,"byte_end":9056367,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6202},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056957,"byte_end":9056961,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056435,"byte_end":9056499,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056500,"byte_end":9056528,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056529,"byte_end":9056532,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056533,"byte_end":9056606,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056607,"byte_end":9056662,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056663,"byte_end":9056666,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056667,"byte_end":9056674,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056675,"byte_end":9056697,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056698,"byte_end":9056739,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056740,"byte_end":9056743,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056744,"byte_end":9056792,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056793,"byte_end":9056796,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056797,"byte_end":9056843,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056844,"byte_end":9056890,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056891,"byte_end":9056933,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056934,"byte_end":9056941,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056942,"byte_end":9056949,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10005},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9057741,"byte_end":9057744,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10009}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9956},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9058814,"byte_end":9058819,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":9959},{"krate":0,"index":9960},{"krate":0,"index":9961}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060694,"byte_end":9060698,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6557}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060538,"byte_end":9060597,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060615,"byte_end":9060682,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6562},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061394,"byte_end":9061398,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6564}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061270,"byte_end":9061316,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061334,"byte_end":9061382,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6292},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061970,"byte_end":9061974,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (value: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061474,"byte_end":9061530,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061531,"byte_end":9061534,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061535,"byte_end":9061614,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061615,"byte_end":9061618,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061619,"byte_end":9061633,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061634,"byte_end":9061637,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061638,"byte_end":9061645,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061646,"byte_end":9061687,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061688,"byte_end":9061691,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061692,"byte_end":9061710,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061711,"byte_end":9061732,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061733,"byte_end":9061771,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061772,"byte_end":9061810,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061811,"byte_end":9061814,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061815,"byte_end":9061861,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061862,"byte_end":9061865,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061866,"byte_end":9061904,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061905,"byte_end":9061948,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061949,"byte_end":9061954,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061955,"byte_end":9061962,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6568},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062597,"byte_end":9062604,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062467,"byte_end":9062519,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062537,"byte_end":9062585,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6315},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063344,"byte_end":9063351,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062735,"byte_end":9062775,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062776,"byte_end":9062779,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062780,"byte_end":9062838,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062839,"byte_end":9062910,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062911,"byte_end":9062980,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062981,"byte_end":9063025,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063026,"byte_end":9063029,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063030,"byte_end":9063044,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063045,"byte_end":9063048,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063049,"byte_end":9063065,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063066,"byte_end":9063069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063070,"byte_end":9063083,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063084,"byte_end":9063125,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063126,"byte_end":9063129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063130,"byte_end":9063148,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063149,"byte_end":9063170,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063171,"byte_end":9063220,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063221,"byte_end":9063224,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063225,"byte_end":9063260,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063261,"byte_end":9063288,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063289,"byte_end":9063292,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063293,"byte_end":9063316,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063317,"byte_end":9063322,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063323,"byte_end":9063330,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6575},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069000,"byte_end":9069009,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":6578}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9063768,"byte_end":9063844,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9063845,"byte_end":9063853,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9063854,"byte_end":9063857,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9063858,"byte_end":9063935,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9063936,"byte_end":9064012,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064013,"byte_end":9064089,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064090,"byte_end":9064124,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064125,"byte_end":9064128,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064129,"byte_end":9064149,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064150,"byte_end":9064153,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064154,"byte_end":9064197,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064198,"byte_end":9064258,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064259,"byte_end":9064337,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064338,"byte_end":9064371,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064372,"byte_end":9064375,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064376,"byte_end":9064455,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064456,"byte_end":9064536,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064537,"byte_end":9064609,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064610,"byte_end":9064634,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064635,"byte_end":9064638,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064639,"byte_end":9064652,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064653,"byte_end":9064656,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064657,"byte_end":9064735,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064736,"byte_end":9064805,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064806,"byte_end":9064885,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064886,"byte_end":9064917,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064918,"byte_end":9064921,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064922,"byte_end":9064942,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064943,"byte_end":9064946,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9064947,"byte_end":9065024,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065025,"byte_end":9065102,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065103,"byte_end":9065180,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065181,"byte_end":9065255,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065256,"byte_end":9065334,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065335,"byte_end":9065412,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065413,"byte_end":9065434,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065435,"byte_end":9065438,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065439,"byte_end":9065496,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065497,"byte_end":9065528,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065529,"byte_end":9065552,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065553,"byte_end":9065591,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065592,"byte_end":9065595,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065596,"byte_end":9065610,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065611,"byte_end":9065614,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065615,"byte_end":9065688,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065689,"byte_end":9065692,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065693,"byte_end":9065700,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065701,"byte_end":9065747,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065748,"byte_end":9065774,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065775,"byte_end":9065778,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065779,"byte_end":9065797,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065798,"byte_end":9065819,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065820,"byte_end":9065867,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065868,"byte_end":9065915,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065916,"byte_end":9065919,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065920,"byte_end":9065953,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065954,"byte_end":9065993,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065994,"byte_end":9065997,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9065998,"byte_end":9066078,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066079,"byte_end":9066151,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066152,"byte_end":9066190,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066191,"byte_end":9066202,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066203,"byte_end":9066206,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066207,"byte_end":9066240,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066241,"byte_end":9066280,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066281,"byte_end":9066319,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066320,"byte_end":9066331,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066332,"byte_end":9066335,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066336,"byte_end":9066375,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066376,"byte_end":9066379,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066380,"byte_end":9066410,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066411,"byte_end":9066442,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066443,"byte_end":9066474,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066475,"byte_end":9066478,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066479,"byte_end":9066500,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066501,"byte_end":9066524,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066525,"byte_end":9066580,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066581,"byte_end":9066584,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066585,"byte_end":9066614,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066615,"byte_end":9066650,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066651,"byte_end":9066671,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066672,"byte_end":9066707,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066708,"byte_end":9066721,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066722,"byte_end":9066725,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066726,"byte_end":9066792,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066793,"byte_end":9066821,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066822,"byte_end":9066831,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066832,"byte_end":9066837,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066838,"byte_end":9066845,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066846,"byte_end":9066849,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066850,"byte_end":9066928,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9066929,"byte_end":9067005,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067006,"byte_end":9067046,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067047,"byte_end":9067050,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067051,"byte_end":9067128,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067129,"byte_end":9067166,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067167,"byte_end":9067170,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067171,"byte_end":9067184,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067185,"byte_end":9067239,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067240,"byte_end":9067243,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067244,"byte_end":9067262,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067263,"byte_end":9067284,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067285,"byte_end":9067307,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067308,"byte_end":9067313,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067314,"byte_end":9067317,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067318,"byte_end":9067368,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067369,"byte_end":9067424,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067425,"byte_end":9067455,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067456,"byte_end":9067461,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067462,"byte_end":9067465,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067466,"byte_end":9067542,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067543,"byte_end":9067609,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067610,"byte_end":9067654,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067655,"byte_end":9067685,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067686,"byte_end":9067691,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067692,"byte_end":9067695,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067696,"byte_end":9067714,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067715,"byte_end":9067736,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067737,"byte_end":9067781,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067782,"byte_end":9067785,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067786,"byte_end":9067836,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067837,"byte_end":9067867,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067868,"byte_end":9067894,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067895,"byte_end":9067898,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067899,"byte_end":9067913,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067914,"byte_end":9067942,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067943,"byte_end":9067987,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9067988,"byte_end":9068019,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068020,"byte_end":9068068,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068069,"byte_end":9068145,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068146,"byte_end":9068187,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068188,"byte_end":9068239,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068240,"byte_end":9068296,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068297,"byte_end":9068322,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068323,"byte_end":9068372,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068373,"byte_end":9068424,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068425,"byte_end":9068450,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068451,"byte_end":9068472,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068473,"byte_end":9068490,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068491,"byte_end":9068547,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068548,"byte_end":9068628,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068629,"byte_end":9068671,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068672,"byte_end":9068722,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068723,"byte_end":9068740,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068741,"byte_end":9068816,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068817,"byte_end":9068893,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068894,"byte_end":9068924,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068925,"byte_end":9068938,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068939,"byte_end":9068948,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068949,"byte_end":9068954,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9068955,"byte_end":9068962,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6336},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069482,"byte_end":9069485,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"fn () -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069114,"byte_end":9069147,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069152,"byte_end":9069155,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069160,"byte_end":9069234,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069239,"byte_end":9069288,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069293,"byte_end":9069296,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069301,"byte_end":9069315,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069320,"byte_end":9069323,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069328,"byte_end":9069335,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069340,"byte_end":9069384,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069389,"byte_end":9069392,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069397,"byte_end":9069458,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069463,"byte_end":9069470,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069990,"byte_end":9070003,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"fn (capacity: usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069558,"byte_end":9069619,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069624,"byte_end":9069627,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069632,"byte_end":9069708,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069713,"byte_end":9069784,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069789,"byte_end":9069792,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069797,"byte_end":9069811,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069816,"byte_end":9069819,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069824,"byte_end":9069831,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069836,"byte_end":9069880,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069885,"byte_end":9069888,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069893,"byte_end":9069966,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069971,"byte_end":9069978,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6338},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070621,"byte_end":9070625,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070134,"byte_end":9070195,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070200,"byte_end":9070203,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070208,"byte_end":9070247,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070252,"byte_end":9070255,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070260,"byte_end":9070274,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070279,"byte_end":9070282,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070287,"byte_end":9070294,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070299,"byte_end":9070343,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070348,"byte_end":9070351,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070356,"byte_end":9070391,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070396,"byte_end":9070399,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070404,"byte_end":9070442,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070447,"byte_end":9070478,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070483,"byte_end":9070514,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070519,"byte_end":9070522,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070527,"byte_end":9070554,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070559,"byte_end":9070587,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070592,"byte_end":9070597,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070602,"byte_end":9070609,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6341},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071209,"byte_end":9071215,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070718,"byte_end":9070773,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070778,"byte_end":9070781,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070786,"byte_end":9070825,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070830,"byte_end":9070833,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070838,"byte_end":9070852,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070857,"byte_end":9070860,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070865,"byte_end":9070872,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070877,"byte_end":9070921,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070926,"byte_end":9070929,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070934,"byte_end":9070969,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070974,"byte_end":9070977,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9070982,"byte_end":9071020,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071025,"byte_end":9071056,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071061,"byte_end":9071092,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071097,"byte_end":9071100,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071105,"byte_end":9071137,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071142,"byte_end":9071175,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071180,"byte_end":9071185,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071190,"byte_end":9071197,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071815,"byte_end":9071825,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071308,"byte_end":9071371,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071376,"byte_end":9071379,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071384,"byte_end":9071427,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071432,"byte_end":9071435,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071440,"byte_end":9071454,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071459,"byte_end":9071462,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071467,"byte_end":9071474,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071479,"byte_end":9071523,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071528,"byte_end":9071531,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071536,"byte_end":9071571,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071576,"byte_end":9071579,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071584,"byte_end":9071622,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071627,"byte_end":9071658,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071663,"byte_end":9071694,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071699,"byte_end":9071702,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071707,"byte_end":9071743,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071748,"byte_end":9071781,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071786,"byte_end":9071791,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071796,"byte_end":9071803,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6347},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072403,"byte_end":9072411,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9071930,"byte_end":9072002,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072007,"byte_end":9072010,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072015,"byte_end":9072086,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072091,"byte_end":9072157,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072162,"byte_end":9072165,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072170,"byte_end":9072184,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072189,"byte_end":9072192,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072197,"byte_end":9072204,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072209,"byte_end":9072253,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072258,"byte_end":9072261,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072266,"byte_end":9072339,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072344,"byte_end":9072379,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072384,"byte_end":9072391,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6348},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072787,"byte_end":9072790,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072473,"byte_end":9072518,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072523,"byte_end":9072526,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072531,"byte_end":9072545,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072550,"byte_end":9072553,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072558,"byte_end":9072565,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072570,"byte_end":9072614,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072619,"byte_end":9072622,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072627,"byte_end":9072660,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072665,"byte_end":9072692,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072697,"byte_end":9072731,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072736,"byte_end":9072763,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072768,"byte_end":9072775,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6349},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073141,"byte_end":9073149,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072847,"byte_end":9072898,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072903,"byte_end":9072906,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072911,"byte_end":9072925,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072930,"byte_end":9072933,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072938,"byte_end":9072945,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072950,"byte_end":9072984,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072989,"byte_end":9072992,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9072997,"byte_end":9073028,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073033,"byte_end":9073059,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073064,"byte_end":9073085,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073090,"byte_end":9073117,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073122,"byte_end":9073129,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6350},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073561,"byte_end":9073566,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073210,"byte_end":9073280,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073285,"byte_end":9073306,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073311,"byte_end":9073314,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073319,"byte_end":9073333,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073338,"byte_end":9073341,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073346,"byte_end":9073353,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073358,"byte_end":9073402,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073407,"byte_end":9073410,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073415,"byte_end":9073448,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073453,"byte_end":9073487,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073492,"byte_end":9073506,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073511,"byte_end":9073537,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073542,"byte_end":9073549,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6351},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074241,"byte_end":9074247,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"fn (&mut self, k: K, stream: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073621,"byte_end":9073663,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073668,"byte_end":9073671,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073676,"byte_end":9073741,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073746,"byte_end":9073749,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073754,"byte_end":9073829,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073834,"byte_end":9073873,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073878,"byte_end":9073881,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073886,"byte_end":9073900,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073905,"byte_end":9073908,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073913,"byte_end":9073920,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073925,"byte_end":9073969,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073974,"byte_end":9073977,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9073982,"byte_end":9074017,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074022,"byte_end":9074025,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074030,"byte_end":9074086,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074091,"byte_end":9074120,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074125,"byte_end":9074128,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074133,"byte_end":9074163,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074168,"byte_end":9074217,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074222,"byte_end":9074229,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6352},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074978,"byte_end":9074984,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074426,"byte_end":9074527,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074532,"byte_end":9074535,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074540,"byte_end":9074614,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074619,"byte_end":9074683,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074688,"byte_end":9074691,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074696,"byte_end":9074710,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074715,"byte_end":9074718,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074723,"byte_end":9074730,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074735,"byte_end":9074779,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074784,"byte_end":9074787,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074792,"byte_end":9074827,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074832,"byte_end":9074868,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074873,"byte_end":9074911,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074916,"byte_end":9074954,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9074959,"byte_end":9074966,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6354},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075818,"byte_end":9075830,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075286,"byte_end":9075356,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075361,"byte_end":9075364,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075369,"byte_end":9075443,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075448,"byte_end":9075512,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075517,"byte_end":9075520,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075525,"byte_end":9075539,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075544,"byte_end":9075547,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075552,"byte_end":9075559,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075564,"byte_end":9075608,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075613,"byte_end":9075616,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075621,"byte_end":9075656,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075661,"byte_end":9075697,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075702,"byte_end":9075745,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075750,"byte_end":9075794,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9075799,"byte_end":9075806,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9919},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9078770,"byte_end":9078774,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":9921},{"krate":0,"index":9922}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9874},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080336,"byte_end":9080345,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6587},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082149,"byte_end":9082156,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6590}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9081985,"byte_end":9082052,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082070,"byte_end":9082137,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9837},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083005,"byte_end":9083009,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9839},{"krate":0,"index":9840}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9788},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9084852,"byte_end":9084861,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":9791},{"krate":0,"index":9792},{"krate":0,"index":9793}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9765},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9116529,"byte_end":9116536,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9767},{"krate":0,"index":9768},{"krate":0,"index":9769},{"krate":0,"index":9770}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6482},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015534,"byte_end":9015543,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6487},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6513},{"krate":0,"index":6515}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015423,"byte_end":9015497,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015498,"byte_end":9015523,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6483},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016613,"byte_end":9016617,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015558,"byte_end":9015628,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015633,"byte_end":9015656,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015661,"byte_end":9015664,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015669,"byte_end":9015687,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015692,"byte_end":9015695,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015700,"byte_end":9015713,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015718,"byte_end":9015769,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015774,"byte_end":9015781,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015786,"byte_end":9015789,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015794,"byte_end":9015862,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015867,"byte_end":9015942,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015947,"byte_end":9016022,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016027,"byte_end":9016081,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016086,"byte_end":9016161,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016166,"byte_end":9016176,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016181,"byte_end":9016184,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016189,"byte_end":9016203,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016208,"byte_end":9016211,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016216,"byte_end":9016223,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016228,"byte_end":9016248,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016253,"byte_end":9016276,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016281,"byte_end":9016322,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016327,"byte_end":9016330,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016335,"byte_end":9016376,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016381,"byte_end":9016384,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016389,"byte_end":9016434,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016439,"byte_end":9016484,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016489,"byte_end":9016534,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016539,"byte_end":9016581,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016586,"byte_end":9016593,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016598,"byte_end":9016605,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6484},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017688,"byte_end":9017696,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"fn <T, E> (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016719,"byte_end":9016787,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016792,"byte_end":9016860,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016865,"byte_end":9016868,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016873,"byte_end":9016891,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016896,"byte_end":9016899,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016904,"byte_end":9016917,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016922,"byte_end":9016979,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016984,"byte_end":9016991,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9016996,"byte_end":9016999,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017004,"byte_end":9017068,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017073,"byte_end":9017135,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017140,"byte_end":9017200,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017205,"byte_end":9017248,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017253,"byte_end":9017256,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017261,"byte_end":9017275,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017280,"byte_end":9017283,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017288,"byte_end":9017295,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017300,"byte_end":9017320,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017325,"byte_end":9017348,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017353,"byte_end":9017394,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017399,"byte_end":9017402,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017407,"byte_end":9017474,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017479,"byte_end":9017482,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017487,"byte_end":9017540,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017545,"byte_end":9017598,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017603,"byte_end":9017656,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017661,"byte_end":9017668,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017673,"byte_end":9017680,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6487},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018764,"byte_end":9018767,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017840,"byte_end":9017915,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017920,"byte_end":9017943,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017948,"byte_end":9017951,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9017956,"byte_end":9018028,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018033,"byte_end":9018097,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018102,"byte_end":9018139,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018144,"byte_end":9018147,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018152,"byte_end":9018228,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018233,"byte_end":9018304,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018309,"byte_end":9018330,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018335,"byte_end":9018338,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018343,"byte_end":9018357,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018362,"byte_end":9018365,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018370,"byte_end":9018377,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018382,"byte_end":9018402,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018407,"byte_end":9018430,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018435,"byte_end":9018476,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018481,"byte_end":9018484,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018489,"byte_end":9018526,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018531,"byte_end":9018574,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018579,"byte_end":9018582,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018587,"byte_end":9018632,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018637,"byte_end":9018682,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018687,"byte_end":9018732,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018737,"byte_end":9018744,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018749,"byte_end":9018756,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6490},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021377,"byte_end":9021382,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"fn <U> (self, other: U) -> Merge<Self, U>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018911,"byte_end":9018984,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9018989,"byte_end":9019005,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019010,"byte_end":9019013,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019018,"byte_end":9019094,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019099,"byte_end":9019164,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019169,"byte_end":9019244,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019249,"byte_end":9019323,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019328,"byte_end":9019371,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019376,"byte_end":9019379,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019384,"byte_end":9019459,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019464,"byte_end":9019530,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019535,"byte_end":9019578,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019583,"byte_end":9019586,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019591,"byte_end":9019662,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019667,"byte_end":9019670,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019675,"byte_end":9019718,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019723,"byte_end":9019726,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019731,"byte_end":9019745,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019750,"byte_end":9019753,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019758,"byte_end":9019765,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019770,"byte_end":9019803,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019808,"byte_end":9019834,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019839,"byte_end":9019859,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019864,"byte_end":9019867,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019872,"byte_end":9019900,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019905,"byte_end":9019908,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019913,"byte_end":9019921,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019926,"byte_end":9019944,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019949,"byte_end":9019957,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9019962,"byte_end":9019999,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020004,"byte_end":9020025,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020030,"byte_end":9020050,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020055,"byte_end":9020102,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020107,"byte_end":9020154,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020159,"byte_end":9020162,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020167,"byte_end":9020203,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020208,"byte_end":9020211,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020216,"byte_end":9020249,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020254,"byte_end":9020297,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020302,"byte_end":9020341,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020346,"byte_end":9020385,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020390,"byte_end":9020393,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020398,"byte_end":9020443,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020448,"byte_end":9020509,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020514,"byte_end":9020517,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020522,"byte_end":9020561,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020566,"byte_end":9020577,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020582,"byte_end":9020585,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020590,"byte_end":9020623,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020628,"byte_end":9020681,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020686,"byte_end":9020746,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020751,"byte_end":9020754,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020759,"byte_end":9020798,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020803,"byte_end":9020806,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020811,"byte_end":9020872,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020877,"byte_end":9020880,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020885,"byte_end":9020920,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020925,"byte_end":9020964,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020969,"byte_end":9020980,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020985,"byte_end":9020988,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9020993,"byte_end":9021040,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021045,"byte_end":9021092,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021097,"byte_end":9021144,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021149,"byte_end":9021196,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021201,"byte_end":9021248,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021253,"byte_end":9021256,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021261,"byte_end":9021300,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021305,"byte_end":9021347,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021352,"byte_end":9021357,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021362,"byte_end":9021369,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6492},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022687,"byte_end":9022693,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021538,"byte_end":9021610,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021615,"byte_end":9021629,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021634,"byte_end":9021637,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021642,"byte_end":9021717,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021722,"byte_end":9021768,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021773,"byte_end":9021845,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021850,"byte_end":9021899,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021904,"byte_end":9021962,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021967,"byte_end":9021970,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9021975,"byte_end":9022051,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022056,"byte_end":9022128,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022133,"byte_end":9022154,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022159,"byte_end":9022162,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022167,"byte_end":9022181,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022186,"byte_end":9022189,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022194,"byte_end":9022201,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022206,"byte_end":9022226,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022231,"byte_end":9022254,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022259,"byte_end":9022300,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022305,"byte_end":9022308,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022313,"byte_end":9022350,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022355,"byte_end":9022405,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022410,"byte_end":9022413,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022418,"byte_end":9022462,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022467,"byte_end":9022511,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022516,"byte_end":9022560,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022565,"byte_end":9022609,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022614,"byte_end":9022655,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022660,"byte_end":9022667,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022672,"byte_end":9022679,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6494},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024060,"byte_end":9024070,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"fn <T, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022844,"byte_end":9022919,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022924,"byte_end":9022987,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9022992,"byte_end":9022995,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023000,"byte_end":9023075,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023080,"byte_end":9023132,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023137,"byte_end":9023213,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023218,"byte_end":9023278,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023283,"byte_end":9023286,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023291,"byte_end":9023367,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023372,"byte_end":9023448,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023453,"byte_end":9023474,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023479,"byte_end":9023482,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023487,"byte_end":9023501,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023506,"byte_end":9023513,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023518,"byte_end":9023538,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023543,"byte_end":9023566,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023571,"byte_end":9023612,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023617,"byte_end":9023620,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023625,"byte_end":9023662,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023667,"byte_end":9023710,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023715,"byte_end":9023766,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023771,"byte_end":9023778,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023783,"byte_end":9023786,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023791,"byte_end":9023835,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023840,"byte_end":9023884,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023889,"byte_end":9023933,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023938,"byte_end":9023982,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9023987,"byte_end":9024028,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024033,"byte_end":9024040,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024045,"byte_end":9024052,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6497},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026202,"byte_end":9026206,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024234,"byte_end":9024289,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024294,"byte_end":9024297,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024302,"byte_end":9024375,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024380,"byte_end":9024452,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024457,"byte_end":9024531,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024536,"byte_end":9024562,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024567,"byte_end":9024570,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024575,"byte_end":9024589,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024594,"byte_end":9024597,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024602,"byte_end":9024609,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024614,"byte_end":9024657,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024662,"byte_end":9024665,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024670,"byte_end":9024692,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024697,"byte_end":9024732,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024737,"byte_end":9024740,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024745,"byte_end":9024799,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024804,"byte_end":9024826,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024831,"byte_end":9024850,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024855,"byte_end":9024860,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024865,"byte_end":9024868,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024873,"byte_end":9024904,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024909,"byte_end":9024933,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024938,"byte_end":9024941,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9024946,"byte_end":9025038,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025043,"byte_end":9025076,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025081,"byte_end":9025121,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025126,"byte_end":9025129,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025134,"byte_end":9025183,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025188,"byte_end":9025217,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025222,"byte_end":9025260,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025265,"byte_end":9025285,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025290,"byte_end":9025323,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025328,"byte_end":9025341,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025346,"byte_end":9025355,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025360,"byte_end":9025365,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025370,"byte_end":9025373,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025378,"byte_end":9025396,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025401,"byte_end":9025422,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025427,"byte_end":9025475,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025480,"byte_end":9025483,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025488,"byte_end":9025529,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025534,"byte_end":9025583,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025588,"byte_end":9025634,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025639,"byte_end":9025688,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025693,"byte_end":9025739,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025744,"byte_end":9025747,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025752,"byte_end":9025788,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025793,"byte_end":9025832,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025837,"byte_end":9025840,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025845,"byte_end":9025894,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025899,"byte_end":9025945,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025950,"byte_end":9025953,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9025958,"byte_end":9026019,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026024,"byte_end":9026070,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026075,"byte_end":9026121,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026126,"byte_end":9026172,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026177,"byte_end":9026182,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026187,"byte_end":9026194,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026942,"byte_end":9026946,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026299,"byte_end":9026370,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026375,"byte_end":9026378,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026383,"byte_end":9026456,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026461,"byte_end":9026496,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026501,"byte_end":9026504,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026509,"byte_end":9026523,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026528,"byte_end":9026531,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026536,"byte_end":9026543,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026548,"byte_end":9026568,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026573,"byte_end":9026596,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026601,"byte_end":9026642,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026647,"byte_end":9026650,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026655,"byte_end":9026705,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026710,"byte_end":9026713,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026718,"byte_end":9026763,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026768,"byte_end":9026813,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026818,"byte_end":9026863,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026868,"byte_end":9026910,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026915,"byte_end":9026922,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9026927,"byte_end":9026934,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6499},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027839,"byte_end":9027849,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"fn <F> (self, f: F) -> TakeWhile<Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027052,"byte_end":9027115,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027120,"byte_end":9027143,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027148,"byte_end":9027151,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027156,"byte_end":9027231,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027236,"byte_end":9027308,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027313,"byte_end":9027377,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027382,"byte_end":9027385,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027390,"byte_end":9027404,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027409,"byte_end":9027412,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027417,"byte_end":9027424,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027429,"byte_end":9027449,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027454,"byte_end":9027477,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027482,"byte_end":9027523,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027528,"byte_end":9027531,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027536,"byte_end":9027602,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027607,"byte_end":9027610,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027615,"byte_end":9027660,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027665,"byte_end":9027710,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027715,"byte_end":9027760,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027765,"byte_end":9027807,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027812,"byte_end":9027819,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9027824,"byte_end":9027831,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028546,"byte_end":9028550,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028006,"byte_end":9028072,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028077,"byte_end":9028099,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028104,"byte_end":9028107,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028112,"byte_end":9028126,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028131,"byte_end":9028134,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028139,"byte_end":9028146,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028151,"byte_end":9028171,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028176,"byte_end":9028199,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028204,"byte_end":9028245,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028250,"byte_end":9028253,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028258,"byte_end":9028308,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028313,"byte_end":9028316,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028321,"byte_end":9028366,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028371,"byte_end":9028416,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028421,"byte_end":9028467,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028472,"byte_end":9028514,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028519,"byte_end":9028526,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028531,"byte_end":9028538,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6502},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029528,"byte_end":9029538,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"fn <F> (self, f: F) -> SkipWhile<Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028656,"byte_end":9028729,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028734,"byte_end":9028757,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028762,"byte_end":9028765,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028770,"byte_end":9028848,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028853,"byte_end":9028925,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028930,"byte_end":9028990,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9028995,"byte_end":9028998,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029003,"byte_end":9029066,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029071,"byte_end":9029074,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029079,"byte_end":9029093,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029098,"byte_end":9029101,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029106,"byte_end":9029113,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029118,"byte_end":9029138,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029143,"byte_end":9029166,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029171,"byte_end":9029212,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029217,"byte_end":9029291,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029296,"byte_end":9029299,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029304,"byte_end":9029349,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029354,"byte_end":9029399,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029404,"byte_end":9029449,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029454,"byte_end":9029496,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029501,"byte_end":9029508,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029513,"byte_end":9029520,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031117,"byte_end":9031120,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029695,"byte_end":9029756,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029761,"byte_end":9029764,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029769,"byte_end":9029839,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029844,"byte_end":9029914,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029919,"byte_end":9029984,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9029989,"byte_end":9030041,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030046,"byte_end":9030049,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030054,"byte_end":9030126,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030131,"byte_end":9030205,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030210,"byte_end":9030246,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030251,"byte_end":9030254,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030259,"byte_end":9030294,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030299,"byte_end":9030302,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030307,"byte_end":9030321,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030326,"byte_end":9030329,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030334,"byte_end":9030350,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030355,"byte_end":9030358,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030363,"byte_end":9030370,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030375,"byte_end":9030395,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030400,"byte_end":9030423,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030428,"byte_end":9030469,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030474,"byte_end":9030477,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030482,"byte_end":9030504,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030509,"byte_end":9030512,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030517,"byte_end":9030569,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030574,"byte_end":9030577,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030582,"byte_end":9030635,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030640,"byte_end":9030647,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030652,"byte_end":9030659,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030664,"byte_end":9030667,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030672,"byte_end":9030706,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030711,"byte_end":9030714,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030719,"byte_end":9030726,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030731,"byte_end":9030751,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030756,"byte_end":9030779,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030784,"byte_end":9030825,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030830,"byte_end":9030833,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030838,"byte_end":9030860,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030865,"byte_end":9030868,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030873,"byte_end":9030909,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030914,"byte_end":9030917,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030922,"byte_end":9030964,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030969,"byte_end":9030972,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9030977,"byte_end":9031036,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031041,"byte_end":9031085,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031090,"byte_end":9031097,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031102,"byte_end":9031109,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032645,"byte_end":9032648,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031285,"byte_end":9031344,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031349,"byte_end":9031352,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031357,"byte_end":9031427,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031432,"byte_end":9031505,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031510,"byte_end":9031574,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031579,"byte_end":9031599,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031604,"byte_end":9031607,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031612,"byte_end":9031684,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031689,"byte_end":9031762,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031767,"byte_end":9031802,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031807,"byte_end":9031810,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031815,"byte_end":9031851,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031856,"byte_end":9031859,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031864,"byte_end":9031880,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031885,"byte_end":9031888,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031893,"byte_end":9031900,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031905,"byte_end":9031925,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031930,"byte_end":9031953,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9031958,"byte_end":9031999,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032004,"byte_end":9032007,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032012,"byte_end":9032034,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032039,"byte_end":9032042,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032047,"byte_end":9032099,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032104,"byte_end":9032107,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032112,"byte_end":9032165,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032170,"byte_end":9032177,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032182,"byte_end":9032189,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032194,"byte_end":9032197,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032202,"byte_end":9032235,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032240,"byte_end":9032243,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032248,"byte_end":9032255,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032260,"byte_end":9032280,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032285,"byte_end":9032308,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032313,"byte_end":9032354,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032359,"byte_end":9032362,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032367,"byte_end":9032389,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032394,"byte_end":9032397,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032402,"byte_end":9032438,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032443,"byte_end":9032446,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032451,"byte_end":9032492,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032497,"byte_end":9032500,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032505,"byte_end":9032564,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032569,"byte_end":9032613,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032618,"byte_end":9032625,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032630,"byte_end":9032637,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033791,"byte_end":9033796,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032813,"byte_end":9032884,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032889,"byte_end":9032945,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032950,"byte_end":9032953,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9032958,"byte_end":9033032,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033037,"byte_end":9033073,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033078,"byte_end":9033081,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033086,"byte_end":9033100,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033105,"byte_end":9033108,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033113,"byte_end":9033120,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033125,"byte_end":9033166,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033171,"byte_end":9033174,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033179,"byte_end":9033197,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033202,"byte_end":9033223,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033228,"byte_end":9033274,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033279,"byte_end":9033325,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033330,"byte_end":9033333,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033338,"byte_end":9033378,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033383,"byte_end":9033386,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033391,"byte_end":9033440,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033445,"byte_end":9033494,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033499,"byte_end":9033548,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033553,"byte_end":9033602,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033607,"byte_end":9033656,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033661,"byte_end":9033710,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033715,"byte_end":9033761,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033766,"byte_end":9033771,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033776,"byte_end":9033783,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034389,"byte_end":9034393,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, B, F>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9033952,"byte_end":9034021,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034026,"byte_end":9034062,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034067,"byte_end":9034070,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034075,"byte_end":9034089,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034094,"byte_end":9034110,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034115,"byte_end":9034122,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034127,"byte_end":9034147,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034152,"byte_end":9034175,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034180,"byte_end":9034213,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034218,"byte_end":9034221,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034226,"byte_end":9034268,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034273,"byte_end":9034321,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034326,"byte_end":9034329,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034334,"byte_end":9034357,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034362,"byte_end":9034369,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034374,"byte_end":9034381,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036706,"byte_end":9036713,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"fn <T> (self) -> Collect<Self, T>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034572,"byte_end":9034634,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034639,"byte_end":9034642,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034647,"byte_end":9034723,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034728,"byte_end":9034795,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034800,"byte_end":9034848,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034853,"byte_end":9034918,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034923,"byte_end":9034926,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034931,"byte_end":9034945,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034950,"byte_end":9034953,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9034958,"byte_end":9035032,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035037,"byte_end":9035109,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035114,"byte_end":9035189,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035194,"byte_end":9035256,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035261,"byte_end":9035264,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035269,"byte_end":9035280,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035285,"byte_end":9035288,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035293,"byte_end":9035363,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035368,"byte_end":9035406,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035411,"byte_end":9035414,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035419,"byte_end":9035433,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035438,"byte_end":9035441,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035446,"byte_end":9035462,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035467,"byte_end":9035470,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035475,"byte_end":9035482,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035487,"byte_end":9035528,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035533,"byte_end":9035536,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035541,"byte_end":9035559,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035564,"byte_end":9035585,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035590,"byte_end":9035621,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035626,"byte_end":9035665,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035670,"byte_end":9035701,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035706,"byte_end":9035732,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035737,"byte_end":9035760,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035765,"byte_end":9035768,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035773,"byte_end":9035816,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035821,"byte_end":9035826,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035831,"byte_end":9035838,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035843,"byte_end":9035846,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035851,"byte_end":9035893,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035898,"byte_end":9035901,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035906,"byte_end":9035913,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035918,"byte_end":9035959,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035964,"byte_end":9035967,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035972,"byte_end":9035990,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9035995,"byte_end":9036016,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036021,"byte_end":9036086,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036091,"byte_end":9036135,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036140,"byte_end":9036191,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036196,"byte_end":9036222,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036227,"byte_end":9036250,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036255,"byte_end":9036258,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036263,"byte_end":9036309,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036314,"byte_end":9036317,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036322,"byte_end":9036394,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036399,"byte_end":9036471,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036476,"byte_end":9036479,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036484,"byte_end":9036528,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036533,"byte_end":9036566,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036571,"byte_end":9036597,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036602,"byte_end":9036625,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036630,"byte_end":9036633,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036638,"byte_end":9036676,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036681,"byte_end":9036686,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036691,"byte_end":9036698,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039368,"byte_end":9039375,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"fn (self, duration: Duration) -> Timeout<Self>","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036853,"byte_end":9036905,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036910,"byte_end":9036913,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036918,"byte_end":9036990,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9036995,"byte_end":9037065,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037070,"byte_end":9037073,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037078,"byte_end":9037154,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037159,"byte_end":9037236,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037241,"byte_end":9037317,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037322,"byte_end":9037365,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037370,"byte_end":9037373,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037378,"byte_end":9037389,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037394,"byte_end":9037397,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037402,"byte_end":9037468,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037473,"byte_end":9037499,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037504,"byte_end":9037507,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037512,"byte_end":9037587,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037592,"byte_end":9037626,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037631,"byte_end":9037634,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037639,"byte_end":9037653,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037658,"byte_end":9037661,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037666,"byte_end":9037740,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037745,"byte_end":9037748,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037753,"byte_end":9037760,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037765,"byte_end":9037785,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037790,"byte_end":9037813,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037818,"byte_end":9037859,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037864,"byte_end":9037892,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037897,"byte_end":9037940,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037945,"byte_end":9037948,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9037953,"byte_end":9038021,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038026,"byte_end":9038029,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038034,"byte_end":9038101,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038106,"byte_end":9038163,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038168,"byte_end":9038225,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038230,"byte_end":9038287,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038292,"byte_end":9038346,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038351,"byte_end":9038354,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038359,"byte_end":9038444,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038449,"byte_end":9038525,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038530,"byte_end":9038587,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038592,"byte_end":9038642,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038647,"byte_end":9038704,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038709,"byte_end":9038766,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038771,"byte_end":9038825,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038830,"byte_end":9038833,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038838,"byte_end":9038909,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038914,"byte_end":9038977,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9038982,"byte_end":9039054,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039059,"byte_end":9039121,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039126,"byte_end":9039129,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039134,"byte_end":9039191,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039196,"byte_end":9039250,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039255,"byte_end":9039262,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039267,"byte_end":9039274,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039279,"byte_end":9039308,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6620},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6631},{"krate":0,"index":6634},{"krate":0,"index":6821},{"krate":0,"index":7248},{"krate":0,"index":7329},{"krate":0,"index":7334},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7503},{"krate":0,"index":7594},{"krate":0,"index":7732},{"krate":0,"index":7757},{"krate":0,"index":7761},{"krate":0,"index":7814},{"krate":0,"index":7818},{"krate":0,"index":7863},{"krate":0,"index":7864}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118075,"byte_end":9118139,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118140,"byte_end":9118143,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118144,"byte_end":9118219,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118220,"byte_end":9118300,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118301,"byte_end":9118380,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! tasks to communicate together.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118381,"byte_end":9118415,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118416,"byte_end":9118419,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118420,"byte_end":9118444,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118445,"byte_end":9118448,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Message passing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118449,"byte_end":9118470,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118471,"byte_end":9118474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118475,"byte_end":9118548,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118549,"byte_end":9118628,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118629,"byte_end":9118698,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118699,"byte_end":9118702,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118703,"byte_end":9118782,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118783,"byte_end":9118860,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118861,"byte_end":9118936,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9118937,"byte_end":9119009,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"! producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119010,"byte_end":9119082,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119083,"byte_end":9119160,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! messages.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119161,"byte_end":9119174,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119175,"byte_end":9119178,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119179,"byte_end":9119257,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! patterns are best handled with different implementations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119258,"byte_end":9119319,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119320,"byte_end":9119323,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ## `oneshot` channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119324,"byte_end":9119348,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119349,"byte_end":9119352,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119353,"byte_end":9119432,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119433,"byte_end":9119511,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"! the result of a computation to a waiter.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119512,"byte_end":9119556,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119557,"byte_end":9119560,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119561,"byte_end":9119641,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"! computation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119642,"byte_end":9119658,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119659,"byte_end":9119662,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119663,"byte_end":9119670,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119671,"byte_end":9119700,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119701,"byte_end":9119704,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119705,"byte_end":9119748,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"!     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119749,"byte_end":9119811,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119812,"byte_end":9119817,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119818,"byte_end":9119821,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119822,"byte_end":9119840,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119841,"byte_end":9119862,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119863,"byte_end":9119905,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119906,"byte_end":9119909,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119910,"byte_end":9119943,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"!         let res = some_computation().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119944,"byte_end":9119991,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"!         tx.send(res).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9119992,"byte_end":9120026,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120027,"byte_end":9120038,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120039,"byte_end":9120042,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120043,"byte_end":9120120,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120121,"byte_end":9120124,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120125,"byte_end":9120167,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"!     let res = rx.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120168,"byte_end":9120204,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120205,"byte_end":9120210,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120211,"byte_end":9120218,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120219,"byte_end":9120222,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Note, if the task produces a computation result as its final","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120223,"byte_end":9120287,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"! action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120288,"byte_end":9120352,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"! receive that value instead of allocating resources for the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120353,"byte_end":9120415,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"! `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120416,"byte_end":9120486,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"! the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120487,"byte_end":9120552,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"! cause.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120553,"byte_end":9120563,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120564,"byte_end":9120567,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! **Example:**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120568,"byte_end":9120584,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120585,"byte_end":9120588,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120589,"byte_end":9120596,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120597,"byte_end":9120640,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"!     \"the result of the computation\".to_string()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120641,"byte_end":9120692,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120693,"byte_end":9120698,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120699,"byte_end":9120702,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120703,"byte_end":9120721,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120722,"byte_end":9120743,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"!     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120744,"byte_end":9120795,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"!         some_computation().await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120796,"byte_end":9120832,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120833,"byte_end":9120844,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120845,"byte_end":9120848,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120849,"byte_end":9120926,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120927,"byte_end":9120930,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120931,"byte_end":9120973,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"!     let res = join_handle.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9120974,"byte_end":9121019,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121020,"byte_end":9121025,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121026,"byte_end":9121033,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121034,"byte_end":9121037,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! [oneshot]: oneshot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121038,"byte_end":9121060,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121061,"byte_end":9121104,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121105,"byte_end":9121108,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ## `mpsc` channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121109,"byte_end":9121130,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121131,"byte_end":9121134,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121135,"byte_end":9121212,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"! producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121213,"byte_end":9121293,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"! task or to receive the result of many computations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121294,"byte_end":9121349,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121350,"byte_end":9121353,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121354,"byte_end":9121432,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"! of computations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121433,"byte_end":9121453,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121454,"byte_end":9121457,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121458,"byte_end":9121465,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121466,"byte_end":9121492,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121493,"byte_end":9121496,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121497,"byte_end":9121550,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"!     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121551,"byte_end":9121605,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121606,"byte_end":9121611,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121612,"byte_end":9121615,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121616,"byte_end":9121634,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121635,"byte_end":9121656,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"!     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121657,"byte_end":9121707,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121708,"byte_end":9121711,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121712,"byte_end":9121745,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"!         for i in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121746,"byte_end":9121774,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"!             let res = some_computation(i).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121775,"byte_end":9121827,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"!             tx.send(res).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121828,"byte_end":9121872,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"!         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121873,"byte_end":9121886,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121887,"byte_end":9121898,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121899,"byte_end":9121902,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121903,"byte_end":9121950,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"!         println!(\"got = {}\", res);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121951,"byte_end":9121989,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9121990,"byte_end":9121999,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122000,"byte_end":9122005,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122006,"byte_end":9122013,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122014,"byte_end":9122017,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122018,"byte_end":9122098,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"! number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122099,"byte_end":9122176,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"! given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122177,"byte_end":9122250,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"! programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122251,"byte_end":9122326,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"! pressure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122327,"byte_end":9122340,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122341,"byte_end":9122344,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122345,"byte_end":9122420,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"! dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122421,"byte_end":9122500,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122501,"byte_end":9122579,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"! not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122580,"byte_end":9122659,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"! For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122660,"byte_end":9122740,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"! a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122741,"byte_end":9122806,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122807,"byte_end":9122810,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122811,"byte_end":9122891,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"! passing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122892,"byte_end":9122904,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122905,"byte_end":9122908,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122909,"byte_end":9122922,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122923,"byte_end":9122964,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"! use tokio::net::TcpStream;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122965,"byte_end":9122995,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9122996,"byte_end":9123022,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123023,"byte_end":9123026,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123027,"byte_end":9123045,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123046,"byte_end":9123085,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"!     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123086,"byte_end":9123161,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"!     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123162,"byte_end":9123208,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123209,"byte_end":9123212,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123213,"byte_end":9123237,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"!         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123238,"byte_end":9123317,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"!         // original handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123318,"byte_end":9123349,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"!         let mut tx = tx.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123350,"byte_end":9123386,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123387,"byte_end":9123390,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123391,"byte_end":9123428,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"!             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123429,"byte_end":9123491,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"!         });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123492,"byte_end":9123507,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123508,"byte_end":9123517,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123518,"byte_end":9123521,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"!     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123522,"byte_end":9123601,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"!     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123602,"byte_end":9123677,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"!     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123678,"byte_end":9123756,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"!     // be a single outstanding `tx` handle.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123757,"byte_end":9123804,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"!     drop(tx);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123805,"byte_end":9123822,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123823,"byte_end":9123826,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123827,"byte_end":9123874,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"!         socket.write_all(res).await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123875,"byte_end":9123916,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123917,"byte_end":9123926,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123927,"byte_end":9123930,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123931,"byte_end":9123945,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123946,"byte_end":9123951,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123952,"byte_end":9123959,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123960,"byte_end":9123963,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9123964,"byte_end":9124039,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"! provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124040,"byte_end":9124115,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"! resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124116,"byte_end":9124195,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"! received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124196,"byte_end":9124261,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"! [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124262,"byte_end":9124339,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124340,"byte_end":9124343,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124344,"byte_end":9124422,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"! \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124423,"byte_end":9124503,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! sent over the provided `oneshot` channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124504,"byte_end":9124549,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124550,"byte_end":9124553,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124554,"byte_end":9124561,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124562,"byte_end":9124599,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"! use Command::Increment;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124600,"byte_end":9124627,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124628,"byte_end":9124631,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! enum Command {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124632,"byte_end":9124650,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"!     Increment,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124651,"byte_end":9124669,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"!     // Other commands can be added here","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124670,"byte_end":9124713,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124714,"byte_end":9124719,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124720,"byte_end":9124723,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124724,"byte_end":9124742,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124743,"byte_end":9124764,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"!     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124765,"byte_end":9124854,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124855,"byte_end":9124858,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to manage the counter","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124859,"byte_end":9124904,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124905,"byte_end":9124938,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"!         let mut counter: u64 = 0;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124939,"byte_end":9124976,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124977,"byte_end":9124980,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"!         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9124981,"byte_end":9125048,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"!             match cmd {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125049,"byte_end":9125076,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"!                 Increment => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125077,"byte_end":9125111,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"!                     let prev = counter;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125112,"byte_end":9125155,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"!                     counter += 1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125156,"byte_end":9125193,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"!                     response.send(prev).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125194,"byte_end":9125247,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"!                 }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125248,"byte_end":9125269,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125270,"byte_end":9125287,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125288,"byte_end":9125301,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125302,"byte_end":9125313,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125314,"byte_end":9125317,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"!     let mut join_handles = vec![];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125318,"byte_end":9125356,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125357,"byte_end":9125360,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125361,"byte_end":9125421,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125422,"byte_end":9125446,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"!         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125447,"byte_end":9125491,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125492,"byte_end":9125495,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"!         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125496,"byte_end":9125551,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"!             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125552,"byte_end":9125612,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125613,"byte_end":9125616,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"!             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125617,"byte_end":9125687,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"!             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125688,"byte_end":9125737,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125738,"byte_end":9125741,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"!             println!(\"previous value = {}\", res);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125742,"byte_end":9125795,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"!         }));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125796,"byte_end":9125812,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125813,"byte_end":9125822,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125823,"byte_end":9125826,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"!     // Wait for all tasks to complete","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125827,"byte_end":9125868,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"!     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125869,"byte_end":9125920,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"!         join_handle.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125921,"byte_end":9125960,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125961,"byte_end":9125970,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125971,"byte_end":9125976,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125977,"byte_end":9125984,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125985,"byte_end":9125988,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! [mpsc]: mpsc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9125989,"byte_end":9126005,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126006,"byte_end":9126009,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! ## `broadcast` channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126010,"byte_end":9126036,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126037,"byte_end":9126040,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126041,"byte_end":9126108,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"! **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126109,"byte_end":9126181,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"! **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126182,"byte_end":9126255,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"! patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126256,"byte_end":9126309,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126310,"byte_end":9126313,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126314,"byte_end":9126394,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"! has its use cases.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126395,"byte_end":9126417,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126418,"byte_end":9126421,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126422,"byte_end":9126437,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126438,"byte_end":9126441,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126442,"byte_end":9126449,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126450,"byte_end":9126481,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126482,"byte_end":9126485,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126486,"byte_end":9126504,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126505,"byte_end":9126526,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126527,"byte_end":9126578,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126579,"byte_end":9126616,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126617,"byte_end":9126620,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126621,"byte_end":9126654,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126655,"byte_end":9126709,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126710,"byte_end":9126764,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126765,"byte_end":9126776,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126777,"byte_end":9126780,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126781,"byte_end":9126814,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126815,"byte_end":9126869,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126870,"byte_end":9126924,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126925,"byte_end":9126936,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126937,"byte_end":9126940,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126941,"byte_end":9126970,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9126971,"byte_end":9127000,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127001,"byte_end":9127006,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127007,"byte_end":9127014,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127015,"byte_end":9127018,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127019,"byte_end":9127068,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127069,"byte_end":9127072,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"! ## `watch` channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127073,"byte_end":9127095,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127096,"byte_end":9127099,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127100,"byte_end":9127176,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"! producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127177,"byte_end":9127255,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"! stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127256,"byte_end":9127335,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"! there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127336,"byte_end":9127401,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127402,"byte_end":9127405,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127406,"byte_end":9127486,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127487,"byte_end":9127490,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127491,"byte_end":9127565,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"! changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127566,"byte_end":9127639,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"! shutdown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127640,"byte_end":9127653,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127654,"byte_end":9127657,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"! **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127658,"byte_end":9127731,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"! changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127732,"byte_end":9127812,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"! the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127813,"byte_end":9127888,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127889,"byte_end":9127892,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127893,"byte_end":9127900,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127901,"byte_end":9127928,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"! use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127929,"byte_end":9127976,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127977,"byte_end":9127980,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"! use std::io;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127981,"byte_end":9127997,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9127998,"byte_end":9128001,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128002,"byte_end":9128044,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"! struct Config {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128045,"byte_end":9128064,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"!     timeout: Duration,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128065,"byte_end":9128091,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128092,"byte_end":9128097,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128098,"byte_end":9128101,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! impl Config {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128102,"byte_end":9128119,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"!     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128120,"byte_end":9128177,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"!         // file loading and deserialization logic here","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128178,"byte_end":9128236,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"! # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128237,"byte_end":9128289,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128290,"byte_end":9128299,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128300,"byte_end":9128305,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128306,"byte_end":9128309,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"! async fn my_async_operation() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128310,"byte_end":9128345,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"!     // Do something here","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128346,"byte_end":9128374,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128375,"byte_end":9128380,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128381,"byte_end":9128384,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128385,"byte_end":9128403,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128404,"byte_end":9128425,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"!     // Load initial configuration value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128426,"byte_end":9128469,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"!     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128470,"byte_end":9128535,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128536,"byte_end":9128539,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"!     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128540,"byte_end":9128618,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"!     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128619,"byte_end":9128673,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128674,"byte_end":9128677,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to monitor the file.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128678,"byte_end":9128722,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128723,"byte_end":9128756,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"!         loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128757,"byte_end":9128775,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"!             // Wait 10 seconds between checks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128776,"byte_end":9128825,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"!             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128826,"byte_end":9128889,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128890,"byte_end":9128893,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"!             // Load the configuration file","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128894,"byte_end":9128940,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"!             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9128941,"byte_end":9129014,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129015,"byte_end":9129018,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"!             // If the configuration changed, send the new config value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129019,"byte_end":9129093,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"!             // on the watch channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129094,"byte_end":9129134,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"!             if new_config != config {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129135,"byte_end":9129176,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"!                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129177,"byte_end":9129239,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"!                 config = new_config;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129240,"byte_end":9129280,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"!             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129281,"byte_end":9129298,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129299,"byte_end":9129312,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129313,"byte_end":9129324,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129325,"byte_end":9129328,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"!     let mut handles = vec![];","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129329,"byte_end":9129362,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129363,"byte_end":9129366,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129367,"byte_end":9129445,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"!     // the timeout elapses, restart the operation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129446,"byte_end":9129500,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"!     //","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129501,"byte_end":9129511,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"!     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129512,"byte_end":9129589,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"!     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129590,"byte_end":9129668,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"!     // the in-flight operation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129669,"byte_end":9129704,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"!     for _ in 0..5 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129705,"byte_end":9129728,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"!         // Clone a config watch handle for use in this task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129729,"byte_end":9129792,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"!         let mut rx = rx.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129793,"byte_end":9129829,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129830,"byte_end":9129833,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"!         let handle = tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129834,"byte_end":9129884,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"!             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129885,"byte_end":9129964,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"!             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9129965,"byte_end":9130040,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"!             // across multiple calls to `select!`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130041,"byte_end":9130094,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"!             let op = my_async_operation();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130095,"byte_end":9130141,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"!             tokio::pin!(op);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130142,"byte_end":9130174,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130175,"byte_end":9130178,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"!             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130179,"byte_end":9130257,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"!             // first time the config is received from the watch, it will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130258,"byte_end":9130334,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"!             // always complete immediatedly.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130335,"byte_end":9130383,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"!             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130384,"byte_end":9130440,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130441,"byte_end":9130444,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"!             let mut op_start = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130445,"byte_end":9130495,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"!             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130496,"byte_end":9130571,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130572,"byte_end":9130575,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"!             loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130576,"byte_end":9130598,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"!                 tokio::select! {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130599,"byte_end":9130635,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"!                     _ = &mut delay => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130636,"byte_end":9130679,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"!                         // The operation elapsed. Restart it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130680,"byte_end":9130744,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"!                         op.set(my_async_operation());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130745,"byte_end":9130802,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130803,"byte_end":9130806,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"!                         // Track the new start time","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130807,"byte_end":9130862,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"!                         op_start = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130863,"byte_end":9130917,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130918,"byte_end":9130921,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"!                         // Restart the timeout","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130922,"byte_end":9130972,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"!                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9130973,"byte_end":9131052,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"!                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131053,"byte_end":9131078,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"!                     new_conf = rx.recv() => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131079,"byte_end":9131128,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"!                         conf = new_conf.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131129,"byte_end":9131182,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131183,"byte_end":9131186,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"!                         // The configuration has been updated. Update the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131187,"byte_end":9131264,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"!                         // `delay` using the new `timeout` value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131265,"byte_end":9131334,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"!                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131335,"byte_end":9131400,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"!                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131401,"byte_end":9131426,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"!                     _ = &mut op => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131427,"byte_end":9131467,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"!                         // The operation completed!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131468,"byte_end":9131523,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"!                         return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131524,"byte_end":9131558,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"!                     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131559,"byte_end":9131584,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131585,"byte_end":9131606,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131607,"byte_end":9131624,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131625,"byte_end":9131640,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131641,"byte_end":9131644,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"!         handles.push(handle);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131645,"byte_end":9131678,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131679,"byte_end":9131688,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131689,"byte_end":9131692,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"!     for handle in handles.drain(..) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131693,"byte_end":9131734,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"!         handle.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131735,"byte_end":9131769,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131770,"byte_end":9131779,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131780,"byte_end":9131785,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131786,"byte_end":9131793,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131794,"byte_end":9131797,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"! [`watch` channel]: crate::sync::watch","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131798,"byte_end":9131839,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"! [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131840,"byte_end":9131889,"line_start":403,"line_end":403,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131890,"byte_end":9131893,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"! # State synchronization","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131894,"byte_end":9131921,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131922,"byte_end":9131925,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"! The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9131926,"byte_end":9132000,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"! These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132001,"byte_end":9132075,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"! operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132076,"byte_end":9132152,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"! asynchronously instead of blocking the thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132153,"byte_end":9132203,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132204,"byte_end":9132207,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"! * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132208,"byte_end":9132285,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"!   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132286,"byte_end":9132363,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132364,"byte_end":9132367,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"! * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132368,"byte_end":9132445,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"!   one thread at a time is able to access some data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132446,"byte_end":9132501,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132502,"byte_end":9132505,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"! * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132506,"byte_end":9132585,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"!   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132586,"byte_end":9132664,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"!   resumes processing.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132665,"byte_end":9132690,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132691,"byte_end":9132694,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"! * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132695,"byte_end":9132770,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"!   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132771,"byte_end":9132847,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"!   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132848,"byte_end":9132915,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132916,"byte_end":9132919,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"! * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132920,"byte_end":9132996,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"!   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9132997,"byte_end":9133073,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"!   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133074,"byte_end":9133148,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"!   bounding of any kind.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133149,"byte_end":9133176,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7952},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135310,"byte_end":9135317,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134357,"byte_end":9134445,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134446,"byte_end":9134449,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134450,"byte_end":9134457,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134458,"byte_end":9134478,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134479,"byte_end":9134502,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134503,"byte_end":9134532,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134533,"byte_end":9134536,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134537,"byte_end":9134571,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134572,"byte_end":9134595,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134596,"byte_end":9134599,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134600,"byte_end":9134645,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134646,"byte_end":9134691,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134692,"byte_end":9134712,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134713,"byte_end":9134745,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134746,"byte_end":9134800,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134801,"byte_end":9134846,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134847,"byte_end":9134880,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134881,"byte_end":9134917,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134918,"byte_end":9134954,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134955,"byte_end":9134990,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9134991,"byte_end":9135005,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135006,"byte_end":9135017,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135018,"byte_end":9135023,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135024,"byte_end":9135098,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135099,"byte_end":9135137,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135138,"byte_end":9135193,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135194,"byte_end":9135265,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135266,"byte_end":9135273,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135274,"byte_end":9135281,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6625},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135780,"byte_end":9135783,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn (mut n: usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135540,"byte_end":9135607,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135612,"byte_end":9135615,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135620,"byte_end":9135708,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135713,"byte_end":9135768,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136856,"byte_end":9136860,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"fn (&self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136382,"byte_end":9136442,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136447,"byte_end":9136450,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136455,"byte_end":9136531,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136536,"byte_end":9136561,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136566,"byte_end":9136569,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136574,"byte_end":9136667,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136672,"byte_end":9136765,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9136770,"byte_end":9136838,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7964},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138782,"byte_end":9138799,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138646,"byte_end":9138746,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9139047,"byte_end":9139056,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138837,"byte_end":9138904,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138909,"byte_end":9138912,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138917,"byte_end":9139009,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9139014,"byte_end":9139035,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6634},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":6642},{"krate":0,"index":6645},{"krate":0,"index":6646},{"krate":0,"index":6647},{"krate":0,"index":6648},{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":6651},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":7971},{"krate":0,"index":7975},{"krate":0,"index":7978},{"krate":0,"index":7988},{"krate":0,"index":7984},{"krate":0,"index":7985},{"krate":0,"index":7990},{"krate":0,"index":8002},{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":6664},{"krate":0,"index":6670},{"krate":0,"index":6675},{"krate":0,"index":6681},{"krate":0,"index":6686},{"krate":0,"index":6690},{"krate":0,"index":6696},{"krate":0,"index":6700},{"krate":0,"index":6703},{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6716},{"krate":0,"index":6718},{"krate":0,"index":6720},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":6733},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6741},{"krate":0,"index":6745},{"krate":0,"index":6765},{"krate":0,"index":6770},{"krate":0,"index":6775},{"krate":0,"index":6780},{"krate":0,"index":8004},{"krate":0,"index":8005},{"krate":0,"index":8009},{"krate":0,"index":6785},{"krate":0,"index":6791},{"krate":0,"index":6797},{"krate":0,"index":6800},{"krate":0,"index":6803},{"krate":0,"index":6808},{"krate":0,"index":6813},{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6818},{"krate":0,"index":6819}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139098,"byte_end":9139178,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! all consumers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139179,"byte_end":9139197,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139198,"byte_end":9139201,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139202,"byte_end":9139280,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139281,"byte_end":9139356,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139357,"byte_end":9139435,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139436,"byte_end":9139490,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139491,"byte_end":9139494,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139495,"byte_end":9139571,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139572,"byte_end":9139652,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139653,"byte_end":9139730,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! value, the value is released from the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139731,"byte_end":9139781,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139782,"byte_end":9139785,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139786,"byte_end":9139864,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! of messages the channel can retain at any given time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139865,"byte_end":9139922,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139923,"byte_end":9139926,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9139927,"byte_end":9140005,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140006,"byte_end":9140078,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! `subscribe`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140079,"byte_end":9140095,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140096,"byte_end":9140099,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ## Lagging","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140100,"byte_end":9140114,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140115,"byte_end":9140118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140119,"byte_end":9140199,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140200,"byte_end":9140279,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140280,"byte_end":9140357,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140358,"byte_end":9140436,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! up.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140437,"byte_end":9140444,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140445,"byte_end":9140448,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140449,"byte_end":9140526,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140527,"byte_end":9140602,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"! time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140603,"byte_end":9140683,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140684,"byte_end":9140687,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140688,"byte_end":9140760,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"! currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140761,"byte_end":9140839,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"! value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140840,"byte_end":9140916,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140917,"byte_end":9140976,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140977,"byte_end":9140980,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9140981,"byte_end":9141059,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"! updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141060,"byte_end":9141134,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! [`recv`] will return this value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141135,"byte_end":9141171,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141172,"byte_end":9141175,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141176,"byte_end":9141255,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141256,"byte_end":9141333,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141334,"byte_end":9141409,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! consumption of the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141410,"byte_end":9141441,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141442,"byte_end":9141445,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ## Closing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141446,"byte_end":9141460,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141461,"byte_end":9141464,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141465,"byte_end":9141540,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141541,"byte_end":9141619,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"! all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141620,"byte_end":9141697,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"! with [`RecvError::Closed`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141698,"byte_end":9141729,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141730,"byte_end":9141733,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141734,"byte_end":9141780,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"! [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141781,"byte_end":9141849,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141850,"byte_end":9141900,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"! [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141901,"byte_end":9141949,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"! [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9141950,"byte_end":9142018,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"! [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142019,"byte_end":9142087,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"! [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142088,"byte_end":9142140,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142141,"byte_end":9142144,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142145,"byte_end":9142159,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142160,"byte_end":9142163,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142164,"byte_end":9142179,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142180,"byte_end":9142183,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142184,"byte_end":9142191,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142192,"byte_end":9142223,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142224,"byte_end":9142227,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142228,"byte_end":9142246,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142247,"byte_end":9142268,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142269,"byte_end":9142320,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142321,"byte_end":9142358,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142359,"byte_end":9142362,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142363,"byte_end":9142396,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142397,"byte_end":9142451,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142452,"byte_end":9142506,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142507,"byte_end":9142518,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142519,"byte_end":9142522,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142523,"byte_end":9142556,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142557,"byte_end":9142611,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142612,"byte_end":9142666,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142667,"byte_end":9142678,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142679,"byte_end":9142682,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142683,"byte_end":9142712,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142713,"byte_end":9142742,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142743,"byte_end":9142748,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142749,"byte_end":9142756,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142757,"byte_end":9142760,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! Handling lag","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142761,"byte_end":9142777,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142778,"byte_end":9142781,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142782,"byte_end":9142789,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142790,"byte_end":9142821,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142822,"byte_end":9142825,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142826,"byte_end":9142844,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142845,"byte_end":9142866,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142867,"byte_end":9142916,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142917,"byte_end":9142920,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142921,"byte_end":9142950,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142951,"byte_end":9142980,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"!     tx.send(30).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9142981,"byte_end":9143010,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143011,"byte_end":9143014,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"!     // The receiver lagged behind","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143015,"byte_end":9143052,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"!     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143053,"byte_end":9143095,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143096,"byte_end":9143099,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143100,"byte_end":9143169,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143170,"byte_end":9143173,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143174,"byte_end":9143223,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143224,"byte_end":9143273,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143274,"byte_end":9143279,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":6656},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144476,"byte_end":9144482,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6658}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143683,"byte_end":9143729,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143730,"byte_end":9143733,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143734,"byte_end":9143794,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143795,"byte_end":9143822,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143823,"byte_end":9143826,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143827,"byte_end":9143841,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143842,"byte_end":9143845,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143846,"byte_end":9143853,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143854,"byte_end":9143885,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143886,"byte_end":9143889,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143890,"byte_end":9143908,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143909,"byte_end":9143930,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143931,"byte_end":9143982,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9143983,"byte_end":9144020,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144021,"byte_end":9144024,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144025,"byte_end":9144058,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144059,"byte_end":9144113,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144114,"byte_end":9144168,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144169,"byte_end":9144180,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144181,"byte_end":9144184,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144185,"byte_end":9144218,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144219,"byte_end":9144273,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144274,"byte_end":9144328,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144329,"byte_end":9144340,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144341,"byte_end":9144344,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144345,"byte_end":9144374,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144375,"byte_end":9144404,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144405,"byte_end":9144410,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144411,"byte_end":9144418,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144419,"byte_end":9144422,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144423,"byte_end":9144464,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145322,"byte_end":9145330,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144519,"byte_end":9144567,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144568,"byte_end":9144571,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144572,"byte_end":9144638,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144639,"byte_end":9144668,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144669,"byte_end":9144672,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144673,"byte_end":9144687,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144688,"byte_end":9144691,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144692,"byte_end":9144699,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144700,"byte_end":9144731,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144732,"byte_end":9144735,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144736,"byte_end":9144754,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144755,"byte_end":9144776,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144777,"byte_end":9144828,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144829,"byte_end":9144866,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144867,"byte_end":9144870,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144871,"byte_end":9144904,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144905,"byte_end":9144959,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9144960,"byte_end":9145014,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145015,"byte_end":9145026,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145027,"byte_end":9145030,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145031,"byte_end":9145064,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145065,"byte_end":9145119,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145120,"byte_end":9145174,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145175,"byte_end":9145186,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145187,"byte_end":9145190,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145191,"byte_end":9145220,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145221,"byte_end":9145250,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145251,"byte_end":9145256,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145257,"byte_end":9145264,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145265,"byte_end":9145268,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145269,"byte_end":9145310,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7971},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145873,"byte_end":9145882,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145576,"byte_end":9145629,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145630,"byte_end":9145633,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145634,"byte_end":9145706,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145707,"byte_end":9145784,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145785,"byte_end":9145844,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7979},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146221,"byte_end":9146227,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146124,"byte_end":9146199,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146204,"byte_end":9146216,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7981},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146433,"byte_end":9146439,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146234,"byte_end":9146306,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146311,"byte_end":9146371,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146376,"byte_end":9146379,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146384,"byte_end":9146428,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7978},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146108,"byte_end":9146117,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"RecvError::{Closed, Lagged}","parent":null,"children":[{"krate":0,"index":7979},{"krate":0,"index":7981}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145895,"byte_end":9145962,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145963,"byte_end":9145966,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9145967,"byte_end":9146019,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146020,"byte_end":9146070,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7991},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146826,"byte_end":9146831,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146693,"byte_end":9146751,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146756,"byte_end":9146821,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7993},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146935,"byte_end":9146941,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146838,"byte_end":9146913,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146918,"byte_end":9146930,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7995},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9147190,"byte_end":9147196,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146948,"byte_end":9147022,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9147027,"byte_end":9147095,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9147100,"byte_end":9147128,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9147133,"byte_end":9147136,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9147141,"byte_end":9147185,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7990},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146674,"byte_end":9146686,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"TryRecvError::{Empty, Closed, Lagged}","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7993},{"krate":0,"index":7995}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146449,"byte_end":9146520,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146521,"byte_end":9146524,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146525,"byte_end":9146585,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9146586,"byte_end":9146636,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":6714},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151497,"byte_end":9151504,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"fn <T> (mut capacity: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149885,"byte_end":9149961,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149962,"byte_end":9150011,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150012,"byte_end":9150015,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150016,"byte_end":9150085,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150086,"byte_end":9150136,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150137,"byte_end":9150140,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150141,"byte_end":9150215,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150216,"byte_end":9150291,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150292,"byte_end":9150360,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150361,"byte_end":9150364,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150365,"byte_end":9150441,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150442,"byte_end":9150523,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150524,"byte_end":9150563,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150564,"byte_end":9150567,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150568,"byte_end":9150614,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150615,"byte_end":9150683,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150684,"byte_end":9150734,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150735,"byte_end":9150787,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150788,"byte_end":9150840,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150841,"byte_end":9150893,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150894,"byte_end":9150897,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150898,"byte_end":9150912,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150913,"byte_end":9150916,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150917,"byte_end":9150924,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150925,"byte_end":9150956,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150957,"byte_end":9150960,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150961,"byte_end":9150979,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9150980,"byte_end":9151001,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151002,"byte_end":9151053,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151054,"byte_end":9151091,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151092,"byte_end":9151095,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151096,"byte_end":9151129,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151130,"byte_end":9151184,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151185,"byte_end":9151239,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151240,"byte_end":9151251,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151252,"byte_end":9151255,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151256,"byte_end":9151289,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151290,"byte_end":9151344,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151345,"byte_end":9151399,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151400,"byte_end":9151411,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151412,"byte_end":9151415,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151416,"byte_end":9151445,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151446,"byte_end":9151475,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151476,"byte_end":9151481,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9151482,"byte_end":9151489,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6726},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154571,"byte_end":9154575,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152721,"byte_end":9152795,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152800,"byte_end":9152836,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152841,"byte_end":9152844,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152849,"byte_end":9152924,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152929,"byte_end":9152995,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153000,"byte_end":9153051,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153056,"byte_end":9153059,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153064,"byte_end":9153076,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153081,"byte_end":9153084,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153089,"byte_end":9153163,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153168,"byte_end":9153244,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153249,"byte_end":9153302,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153307,"byte_end":9153310,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153315,"byte_end":9153325,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153330,"byte_end":9153333,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153338,"byte_end":9153410,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153415,"byte_end":9153490,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153495,"byte_end":9153556,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153561,"byte_end":9153564,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153569,"byte_end":9153642,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153647,"byte_end":9153712,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153717,"byte_end":9153735,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153740,"byte_end":9153743,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153748,"byte_end":9153798,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153803,"byte_end":9153863,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153868,"byte_end":9153871,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153876,"byte_end":9153890,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153895,"byte_end":9153898,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153903,"byte_end":9153910,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153915,"byte_end":9153946,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153951,"byte_end":9153954,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153959,"byte_end":9153977,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9153982,"byte_end":9154003,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154008,"byte_end":9154059,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154064,"byte_end":9154101,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154106,"byte_end":9154109,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154114,"byte_end":9154147,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154152,"byte_end":9154206,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154211,"byte_end":9154265,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154270,"byte_end":9154281,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154286,"byte_end":9154289,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154294,"byte_end":9154327,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154332,"byte_end":9154386,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154391,"byte_end":9154445,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154450,"byte_end":9154461,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154466,"byte_end":9154469,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154474,"byte_end":9154503,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154508,"byte_end":9154537,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154542,"byte_end":9154547,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154552,"byte_end":9154559,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6728},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155335,"byte_end":9155344,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn (&self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154740,"byte_end":9154817,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154822,"byte_end":9154851,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154856,"byte_end":9154859,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154864,"byte_end":9154878,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154883,"byte_end":9154886,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154891,"byte_end":9154898,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154903,"byte_end":9154934,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154939,"byte_end":9154942,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154947,"byte_end":9154965,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154970,"byte_end":9154991,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9154996,"byte_end":9155043,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155048,"byte_end":9155051,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155056,"byte_end":9155083,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155088,"byte_end":9155117,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155122,"byte_end":9155125,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155130,"byte_end":9155166,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155171,"byte_end":9155174,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155179,"byte_end":9155208,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155213,"byte_end":9155216,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155221,"byte_end":9155266,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155271,"byte_end":9155301,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155306,"byte_end":9155311,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155316,"byte_end":9155323,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6729},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156931,"byte_end":9156945,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155779,"byte_end":9155821,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155826,"byte_end":9155829,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155834,"byte_end":9155910,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155915,"byte_end":9155988,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9155993,"byte_end":9156013,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156018,"byte_end":9156021,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156026,"byte_end":9156036,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156041,"byte_end":9156044,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156049,"byte_end":9156119,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156124,"byte_end":9156192,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156197,"byte_end":9156210,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156215,"byte_end":9156218,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156223,"byte_end":9156275,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156280,"byte_end":9156330,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156335,"byte_end":9156381,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156386,"byte_end":9156446,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156451,"byte_end":9156499,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156504,"byte_end":9156507,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156512,"byte_end":9156526,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156531,"byte_end":9156534,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156539,"byte_end":9156546,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156551,"byte_end":9156582,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156587,"byte_end":9156590,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156595,"byte_end":9156613,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156618,"byte_end":9156639,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156644,"byte_end":9156692,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156697,"byte_end":9156700,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156705,"byte_end":9156748,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156753,"byte_end":9156756,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156761,"byte_end":9156799,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156804,"byte_end":9156807,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156812,"byte_end":9156855,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156860,"byte_end":9156863,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156868,"byte_end":9156897,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156902,"byte_end":9156907,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9156912,"byte_end":9156919,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165594,"byte_end":9165602,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164000,"byte_end":9164073,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164078,"byte_end":9164081,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164086,"byte_end":9164158,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164163,"byte_end":9164187,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164192,"byte_end":9164195,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164200,"byte_end":9164280,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164285,"byte_end":9164359,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164364,"byte_end":9164367,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164372,"byte_end":9164445,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164450,"byte_end":9164524,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164529,"byte_end":9164532,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164537,"byte_end":9164613,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164618,"byte_end":9164694,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164699,"byte_end":9164770,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164775,"byte_end":9164848,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164853,"byte_end":9164926,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9164931,"byte_end":9165002,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165007,"byte_end":9165059,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165064,"byte_end":9165067,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165072,"byte_end":9165124,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165129,"byte_end":9165179,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165184,"byte_end":9165187,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165192,"byte_end":9165206,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165211,"byte_end":9165214,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165219,"byte_end":9165226,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165231,"byte_end":9165262,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165267,"byte_end":9165270,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165275,"byte_end":9165293,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165298,"byte_end":9165319,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165324,"byte_end":9165374,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165379,"byte_end":9165382,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165387,"byte_end":9165427,"line_start":822,"line_end":822,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165432,"byte_end":9165435,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165440,"byte_end":9165469,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165474,"byte_end":9165477,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165482,"byte_end":9165525,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165530,"byte_end":9165560,"line_start":827,"line_end":827,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165565,"byte_end":9165570,"line_start":828,"line_end":828,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165575,"byte_end":9165582,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6748},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165844,"byte_end":9165853,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9165771,"byte_end":9165832,"line_start":836,"line_end":836,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6762},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169884,"byte_end":9169888,"line_start":951,"line_end":951,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167668,"byte_end":9167714,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167719,"byte_end":9167722,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167727,"byte_end":9167795,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167800,"byte_end":9167832,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167837,"byte_end":9167840,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167845,"byte_end":9167915,"line_start":892,"line_end":892,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167920,"byte_end":9167994,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9167999,"byte_end":9168002,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168007,"byte_end":9168083,"line_start":895,"line_end":895,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168088,"byte_end":9168164,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168169,"byte_end":9168237,"line_start":897,"line_end":897,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168242,"byte_end":9168315,"line_start":898,"line_end":898,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168320,"byte_end":9168389,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168394,"byte_end":9168439,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168444,"byte_end":9168447,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168452,"byte_end":9168502,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168507,"byte_end":9168559,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168564,"byte_end":9168567,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168572,"byte_end":9168586,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168591,"byte_end":9168594,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168599,"byte_end":9168606,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168611,"byte_end":9168642,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168647,"byte_end":9168650,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168655,"byte_end":9168673,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168678,"byte_end":9168699,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168704,"byte_end":9168755,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168760,"byte_end":9168797,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168802,"byte_end":9168805,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168810,"byte_end":9168843,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168848,"byte_end":9168902,"line_start":916,"line_end":916,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168907,"byte_end":9168961,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168966,"byte_end":9168977,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168982,"byte_end":9168985,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9168990,"byte_end":9169023,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169028,"byte_end":9169082,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169087,"byte_end":9169141,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169146,"byte_end":9169157,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169162,"byte_end":9169165,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169170,"byte_end":9169199,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169204,"byte_end":9169233,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169238,"byte_end":9169243,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169248,"byte_end":9169255,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169260,"byte_end":9169263,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169268,"byte_end":9169284,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169289,"byte_end":9169292,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169297,"byte_end":9169304,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169309,"byte_end":9169340,"line_start":933,"line_end":933,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169345,"byte_end":9169348,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169353,"byte_end":9169371,"line_start":935,"line_end":935,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169376,"byte_end":9169397,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169402,"byte_end":9169451,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169456,"byte_end":9169459,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169464,"byte_end":9169493,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169498,"byte_end":9169527,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169532,"byte_end":9169561,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169566,"byte_end":9169569,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169574,"byte_end":9169611,"line_start":943,"line_end":943,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169616,"byte_end":9169658,"line_start":944,"line_end":944,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169663,"byte_end":9169666,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169671,"byte_end":9169740,"line_start":946,"line_end":946,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169745,"byte_end":9169748,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169753,"byte_end":9169802,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169807,"byte_end":9169856,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9169861,"byte_end":9169866,"line_start":950,"line_end":950,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":8007},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9174542,"byte_end":9174553,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"fn (self) -> impl Stream<Item = Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6821},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":6822},{"krate":0,"index":6895},{"krate":0,"index":6955},{"krate":0,"index":6959},{"krate":0,"index":7123},{"krate":0,"index":7169},{"krate":0,"index":7216},{"krate":0,"index":7220},{"krate":0,"index":7247}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178207,"byte_end":9178276,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178277,"byte_end":9178300,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178301,"byte_end":9178304,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178305,"byte_end":9178380,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178381,"byte_end":9178459,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178460,"byte_end":9178540,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178541,"byte_end":9178619,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! is rejected and the task will be notified when additional capacity is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178620,"byte_end":9178693,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"! available. In other words, the channel provides backpressure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178694,"byte_end":9178759,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178760,"byte_end":9178763,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178764,"byte_end":9178844,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"! bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178845,"byte_end":9178923,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9178924,"byte_end":9179000,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179001,"byte_end":9179080,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179081,"byte_end":9179160,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179161,"byte_end":9179232,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"! asynchronous code.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179233,"byte_end":9179255,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179256,"byte_end":9179259,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179260,"byte_end":9179279,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179280,"byte_end":9179283,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179284,"byte_end":9179350,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179351,"byte_end":9179431,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179432,"byte_end":9179509,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179510,"byte_end":9179513,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179514,"byte_end":9179584,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179585,"byte_end":9179664,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179665,"byte_end":9179688,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179689,"byte_end":9179692,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179693,"byte_end":9179713,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179714,"byte_end":9179717,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179718,"byte_end":9179798,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179799,"byte_end":9179879,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"! shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179880,"byte_end":9179958,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"! any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9179959,"byte_end":9180031,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180032,"byte_end":9180106,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"! dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180107,"byte_end":9180119,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180120,"byte_end":9180123,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! # Communicating between sync and async code","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180124,"byte_end":9180171,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180172,"byte_end":9180175,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180176,"byte_end":9180257,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"! are two situations to consider:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180258,"byte_end":9180293,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180294,"byte_end":9180297,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180298,"byte_end":9180378,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"! Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180379,"byte_end":9180459,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"! [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180460,"byte_end":9180538,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"! will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180539,"byte_end":9180617,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"! method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180618,"byte_end":9180697,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"! need to wait for additional capacity to become available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180698,"byte_end":9180759,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180760,"byte_end":9180763,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180764,"byte_end":9180844,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"! the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180845,"byte_end":9180923,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"! use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180924,"byte_end":9180990,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"! [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9180991,"byte_end":9181073,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"! to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181074,"byte_end":9181138,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181139,"byte_end":9181142,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181143,"byte_end":9181184,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"! [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181185,"byte_end":9181230,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"! [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181231,"byte_end":9181284,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"! [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181285,"byte_end":9181340,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"! [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181341,"byte_end":9181400,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"! [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181401,"byte_end":9181461,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"! [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181462,"byte_end":9181507,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"! [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181508,"byte_end":9181598,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":6907},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195463,"byte_end":9195469,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6909}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195338,"byte_end":9195383,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195384,"byte_end":9195387,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195388,"byte_end":9195451,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6916},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195978,"byte_end":9195986,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6918}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195850,"byte_end":9195898,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195899,"byte_end":9195902,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195903,"byte_end":9195966,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6922},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197374,"byte_end":9197381,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196267,"byte_end":9196347,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196348,"byte_end":9196389,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196390,"byte_end":9196393,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196394,"byte_end":9196471,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196472,"byte_end":9196497,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196498,"byte_end":9196501,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196502,"byte_end":9196581,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196582,"byte_end":9196630,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196631,"byte_end":9196634,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196635,"byte_end":9196714,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196715,"byte_end":9196790,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196791,"byte_end":9196857,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196858,"byte_end":9196861,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196862,"byte_end":9196876,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196877,"byte_end":9196880,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196881,"byte_end":9196892,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196893,"byte_end":9196919,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196920,"byte_end":9196923,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196924,"byte_end":9196942,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196943,"byte_end":9196964,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196965,"byte_end":9197015,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197016,"byte_end":9197019,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197020,"byte_end":9197053,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197054,"byte_end":9197082,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197083,"byte_end":9197133,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197134,"byte_end":9197183,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197184,"byte_end":9197211,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197212,"byte_end":9197229,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197230,"byte_end":9197243,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197244,"byte_end":9197255,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197256,"byte_end":9197259,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197260,"byte_end":9197305,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197306,"byte_end":9197342,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197343,"byte_end":9197352,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197353,"byte_end":9197358,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197359,"byte_end":9197366,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6928},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199063,"byte_end":9199067,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197981,"byte_end":9198027,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198032,"byte_end":9198035,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198040,"byte_end":9198112,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198117,"byte_end":9198171,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198176,"byte_end":9198179,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198184,"byte_end":9198198,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198203,"byte_end":9198206,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198211,"byte_end":9198218,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198223,"byte_end":9198249,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198254,"byte_end":9198257,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198262,"byte_end":9198280,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198285,"byte_end":9198306,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198311,"byte_end":9198361,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198366,"byte_end":9198369,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198374,"byte_end":9198407,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198412,"byte_end":9198456,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198461,"byte_end":9198472,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198477,"byte_end":9198480,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198485,"byte_end":9198536,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198541,"byte_end":9198583,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198588,"byte_end":9198593,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198598,"byte_end":9198605,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198610,"byte_end":9198613,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198618,"byte_end":9198642,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198647,"byte_end":9198650,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198655,"byte_end":9198662,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198667,"byte_end":9198693,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198698,"byte_end":9198701,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198706,"byte_end":9198724,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198729,"byte_end":9198750,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198755,"byte_end":9198805,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198810,"byte_end":9198813,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198818,"byte_end":9198858,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198863,"byte_end":9198903,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198908,"byte_end":9198911,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198916,"byte_end":9198967,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9198972,"byte_end":9199023,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199028,"byte_end":9199033,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199038,"byte_end":9199045,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6933},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199233,"byte_end":9199242,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6934},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199898,"byte_end":9199906,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199335,"byte_end":9199408,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199413,"byte_end":9199416,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199421,"byte_end":9199493,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199498,"byte_end":9199569,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199574,"byte_end":9199627,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199632,"byte_end":9199635,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199640,"byte_end":9199712,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199717,"byte_end":9199741,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199746,"byte_end":9199749,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199754,"byte_end":9199824,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199829,"byte_end":9199886,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6935},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200224,"byte_end":9200229,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9199987,"byte_end":9200051,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200056,"byte_end":9200059,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200064,"byte_end":9200139,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200144,"byte_end":9200212,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6941},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202319,"byte_end":9202323,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&mut self, value: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200675,"byte_end":9200726,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200731,"byte_end":9200734,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200739,"byte_end":9200815,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200820,"byte_end":9200896,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200901,"byte_end":9200975,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200980,"byte_end":9201055,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201060,"byte_end":9201129,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201134,"byte_end":9201206,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201211,"byte_end":9201242,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201247,"byte_end":9201250,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201255,"byte_end":9201267,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201272,"byte_end":9201275,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201280,"byte_end":9201353,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201358,"byte_end":9201432,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201437,"byte_end":9201497,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201502,"byte_end":9201505,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201510,"byte_end":9201540,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201545,"byte_end":9201571,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201576,"byte_end":9201579,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201584,"byte_end":9201598,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201603,"byte_end":9201606,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201611,"byte_end":9201681,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201686,"byte_end":9201725,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201730,"byte_end":9201733,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201738,"byte_end":9201749,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201754,"byte_end":9201780,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201785,"byte_end":9201788,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201793,"byte_end":9201811,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201816,"byte_end":9201837,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201842,"byte_end":9201890,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201895,"byte_end":9201898,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201903,"byte_end":9201936,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201941,"byte_end":9201969,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9201974,"byte_end":9202024,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202029,"byte_end":9202078,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202083,"byte_end":9202110,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202115,"byte_end":9202132,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202137,"byte_end":9202150,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202155,"byte_end":9202166,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202171,"byte_end":9202174,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202179,"byte_end":9202224,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202229,"byte_end":9202265,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202270,"byte_end":9202279,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202284,"byte_end":9202289,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202294,"byte_end":9202301,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6946},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205056,"byte_end":9205064,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, message: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202744,"byte_end":9202803,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202808,"byte_end":9202811,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202816,"byte_end":9202895,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202900,"byte_end":9202975,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9202980,"byte_end":9203058,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203063,"byte_end":9203105,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203110,"byte_end":9203113,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203118,"byte_end":9203190,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203195,"byte_end":9203246,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203251,"byte_end":9203254,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203259,"byte_end":9203271,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203276,"byte_end":9203279,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203284,"byte_end":9203355,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203360,"byte_end":9203436,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203441,"byte_end":9203463,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203468,"byte_end":9203471,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203476,"byte_end":9203549,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203554,"byte_end":9203628,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203633,"byte_end":9203693,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203698,"byte_end":9203701,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203706,"byte_end":9203732,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203737,"byte_end":9203775,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203780,"byte_end":9203804,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203809,"byte_end":9203839,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203844,"byte_end":9203847,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203852,"byte_end":9203866,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203871,"byte_end":9203874,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203879,"byte_end":9203886,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203891,"byte_end":9203917,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203922,"byte_end":9203925,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203930,"byte_end":9203948,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203953,"byte_end":9203974,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9203979,"byte_end":9204025,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204030,"byte_end":9204079,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204084,"byte_end":9204118,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204123,"byte_end":9204126,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204131,"byte_end":9204164,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204169,"byte_end":9204208,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204213,"byte_end":9204252,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204257,"byte_end":9204319,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204324,"byte_end":9204335,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204340,"byte_end":9204343,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204348,"byte_end":9204381,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204386,"byte_end":9204435,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204440,"byte_end":9204487,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204492,"byte_end":9204528,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204533,"byte_end":9204544,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204549,"byte_end":9204552,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204557,"byte_end":9204577,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204582,"byte_end":9204621,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204626,"byte_end":9204671,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204676,"byte_end":9204679,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204684,"byte_end":9204723,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204728,"byte_end":9204773,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204778,"byte_end":9204781,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204786,"byte_end":9204835,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204840,"byte_end":9204871,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204876,"byte_end":9204938,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9204943,"byte_end":9205008,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205013,"byte_end":9205022,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205027,"byte_end":9205032,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205037,"byte_end":9205044,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6947},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206881,"byte_end":9206893,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"fn (&mut self, value: T, timeout: Duration) -> Result<(), SendTimeoutError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205185,"byte_end":9205265,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205270,"byte_end":9205273,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205278,"byte_end":9205355,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205360,"byte_end":9205438,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205443,"byte_end":9205491,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205496,"byte_end":9205499,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205504,"byte_end":9205530,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205535,"byte_end":9205538,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205543,"byte_end":9205555,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205560,"byte_end":9205563,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205568,"byte_end":9205641,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205646,"byte_end":9205703,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205708,"byte_end":9205789,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205794,"byte_end":9205797,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205802,"byte_end":9205832,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205837,"byte_end":9205863,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205868,"byte_end":9205871,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205876,"byte_end":9205890,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205895,"byte_end":9205898,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205903,"byte_end":9205981,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9205986,"byte_end":9206057,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206062,"byte_end":9206065,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206070,"byte_end":9206081,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206086,"byte_end":9206112,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206117,"byte_end":9206160,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206165,"byte_end":9206168,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206173,"byte_end":9206191,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206196,"byte_end":9206217,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206222,"byte_end":9206270,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206275,"byte_end":9206278,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206283,"byte_end":9206316,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206321,"byte_end":9206349,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206354,"byte_end":9206440,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206445,"byte_end":9206498,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206503,"byte_end":9206530,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206535,"byte_end":9206552,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206557,"byte_end":9206570,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206575,"byte_end":9206586,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206591,"byte_end":9206594,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206599,"byte_end":9206644,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206649,"byte_end":9206685,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206690,"byte_end":9206746,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206751,"byte_end":9206760,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206765,"byte_end":9206770,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206775,"byte_end":9206782,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9206787,"byte_end":9206811,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6952},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208677,"byte_end":9208687,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207596,"byte_end":9207678,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207683,"byte_end":9207686,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207691,"byte_end":9207783,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207788,"byte_end":9207815,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207820,"byte_end":9207823,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207828,"byte_end":9207921,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9207926,"byte_end":9208021,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208026,"byte_end":9208119,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208124,"byte_end":9208219,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208224,"byte_end":9208271,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208276,"byte_end":9208279,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208284,"byte_end":9208378,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208383,"byte_end":9208451,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208456,"byte_end":9208459,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208464,"byte_end":9208548,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208553,"byte_end":9208646,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208651,"byte_end":9208665,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6954},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211243,"byte_end":9211249,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208832,"byte_end":9208875,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208880,"byte_end":9208883,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208888,"byte_end":9208978,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9208983,"byte_end":9209076,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209081,"byte_end":9209172,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209177,"byte_end":9209265,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209270,"byte_end":9209273,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209278,"byte_end":9209370,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209375,"byte_end":9209422,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209427,"byte_end":9209430,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209435,"byte_end":9209451,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209456,"byte_end":9209459,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209464,"byte_end":9209559,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209564,"byte_end":9209658,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209663,"byte_end":9209757,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209762,"byte_end":9209836,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209841,"byte_end":9209844,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209849,"byte_end":9209867,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209872,"byte_end":9209882,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209887,"byte_end":9209920,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209925,"byte_end":9209977,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9209982,"byte_end":9210009,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210014,"byte_end":9210028,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210033,"byte_end":9210047,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210052,"byte_end":9210059,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210064,"byte_end":9210069,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210074,"byte_end":9210081,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210086,"byte_end":9210089,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210094,"byte_end":9210187,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210192,"byte_end":9210287,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210292,"byte_end":9210378,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210383,"byte_end":9210478,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210483,"byte_end":9210547,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210552,"byte_end":9210555,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210560,"byte_end":9210654,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210659,"byte_end":9210724,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210729,"byte_end":9210732,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210737,"byte_end":9210755,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210760,"byte_end":9210770,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210775,"byte_end":9210808,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210813,"byte_end":9210847,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210852,"byte_end":9210892,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210897,"byte_end":9210959,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210964,"byte_end":9210978,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9210983,"byte_end":9211045,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211050,"byte_end":9211070,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211075,"byte_end":9211082,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211087,"byte_end":9211127,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211132,"byte_end":9211159,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211164,"byte_end":9211178,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211183,"byte_end":9211197,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211202,"byte_end":9211209,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211214,"byte_end":9211219,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9211224,"byte_end":9211231,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":7005},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9213241,"byte_end":9213247,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":7004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7179},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236844,"byte_end":9236859,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":7181}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236686,"byte_end":9236740,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236741,"byte_end":9236744,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236745,"byte_end":9236777,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236778,"byte_end":9236832,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7188},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237437,"byte_end":9237454,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":7190}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237276,"byte_end":9237333,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237334,"byte_end":9237337,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237338,"byte_end":9237370,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237371,"byte_end":9237425,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":7194},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238265,"byte_end":9238282,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237753,"byte_end":9237829,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237830,"byte_end":9237840,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237841,"byte_end":9237844,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237845,"byte_end":9237925,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237926,"byte_end":9238005,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238006,"byte_end":9238019,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238020,"byte_end":9238023,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238024,"byte_end":9238103,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238104,"byte_end":9238180,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238181,"byte_end":9238257,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7200},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238730,"byte_end":9238739,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7201},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239902,"byte_end":9239906,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238832,"byte_end":9238878,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238883,"byte_end":9238886,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238891,"byte_end":9238963,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238968,"byte_end":9239022,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239027,"byte_end":9239030,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239035,"byte_end":9239049,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239054,"byte_end":9239057,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239062,"byte_end":9239069,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239074,"byte_end":9239100,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239105,"byte_end":9239108,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239113,"byte_end":9239131,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239136,"byte_end":9239157,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239162,"byte_end":9239215,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239220,"byte_end":9239223,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239228,"byte_end":9239261,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239266,"byte_end":9239304,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239309,"byte_end":9239320,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239325,"byte_end":9239328,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239333,"byte_end":9239384,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239389,"byte_end":9239431,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239436,"byte_end":9239441,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239446,"byte_end":9239453,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239458,"byte_end":9239461,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239466,"byte_end":9239490,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239495,"byte_end":9239498,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239503,"byte_end":9239510,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239515,"byte_end":9239541,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239546,"byte_end":9239549,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239554,"byte_end":9239572,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239577,"byte_end":9239598,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239603,"byte_end":9239656,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239661,"byte_end":9239664,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239669,"byte_end":9239703,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239708,"byte_end":9239742,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239747,"byte_end":9239750,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239755,"byte_end":9239806,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239811,"byte_end":9239862,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239867,"byte_end":9239872,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9239877,"byte_end":9239884,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7206},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240591,"byte_end":9240599,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240028,"byte_end":9240101,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240106,"byte_end":9240109,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240114,"byte_end":9240186,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240191,"byte_end":9240262,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240267,"byte_end":9240320,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240325,"byte_end":9240328,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240333,"byte_end":9240405,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240410,"byte_end":9240434,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240439,"byte_end":9240442,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240447,"byte_end":9240517,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240522,"byte_end":9240579,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7207},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240917,"byte_end":9240922,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240680,"byte_end":9240744,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240749,"byte_end":9240752,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240757,"byte_end":9240832,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9240837,"byte_end":9240905,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7215},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9242045,"byte_end":9242049,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, message: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241357,"byte_end":9241431,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241436,"byte_end":9241439,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241444,"byte_end":9241529,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241534,"byte_end":9241615,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241620,"byte_end":9241688,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241693,"byte_end":9241696,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241701,"byte_end":9241774,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241779,"byte_end":9241850,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241855,"byte_end":9241932,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241937,"byte_end":9241940,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241945,"byte_end":9241984,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241989,"byte_end":9242033,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":7220},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":8035},{"krate":0,"index":8039},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":8042},{"krate":0,"index":8050},{"krate":0,"index":7228},{"krate":0,"index":7230},{"krate":0,"index":7233},{"krate":0,"index":8053},{"krate":0,"index":8056},{"krate":0,"index":7236},{"krate":0,"index":7238},{"krate":0,"index":8058},{"krate":0,"index":8066},{"krate":0,"index":8063},{"krate":0,"index":8064},{"krate":0,"index":7239},{"krate":0,"index":7241},{"krate":0,"index":8068},{"krate":0,"index":8071},{"krate":0,"index":7242},{"krate":0,"index":7244},{"krate":0,"index":7246},{"krate":0,"index":8078},{"krate":0,"index":8086},{"krate":0,"index":8073},{"krate":0,"index":8075}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"! Channel error types","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242167,"byte_end":9242190,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8035},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242294,"byte_end":9242303,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242230,"byte_end":9242265,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8044},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242856,"byte_end":9242860,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242724,"byte_end":9242792,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242797,"byte_end":9242851,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8047},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242961,"byte_end":9242967,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242870,"byte_end":9242939,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242944,"byte_end":9242956,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8042},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242702,"byte_end":9242714,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"TrySendError::{Full, Closed}","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8047}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242556,"byte_end":9242627,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242628,"byte_end":9242675,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8053},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243605,"byte_end":9243614,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243543,"byte_end":9243576,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8059},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244119,"byte_end":9244124,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8058},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243991,"byte_end":9244058,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244063,"byte_end":9244114,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8061},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244244,"byte_end":9244250,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8058},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244130,"byte_end":9244192,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244197,"byte_end":9244239,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":8058},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243972,"byte_end":9243984,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8061}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243825,"byte_end":9243895,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243896,"byte_end":9243934,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":8068},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244741,"byte_end":9244752,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244640,"byte_end":9244712,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8080},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245358,"byte_end":9245365,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8083},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245478,"byte_end":9245484,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8078},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245196,"byte_end":9245212,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"SendTimeoutError::{Timeout, Closed}","parent":null,"children":[{"krate":0,"index":8080},{"krate":0,"index":8083}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8089},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250415,"byte_end":9250420,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8091},{"krate":0,"index":8092}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246145,"byte_end":9246183,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246184,"byte_end":9246187,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246188,"byte_end":9246266,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246267,"byte_end":9246343,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246344,"byte_end":9246368,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246369,"byte_end":9246372,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246373,"byte_end":9246414,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246415,"byte_end":9246418,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246419,"byte_end":9246499,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246500,"byte_end":9246579,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246580,"byte_end":9246643,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246644,"byte_end":9246647,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246648,"byte_end":9246727,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246728,"byte_end":9246808,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246809,"byte_end":9246887,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246888,"byte_end":9246967,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9246968,"byte_end":9247046,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247047,"byte_end":9247127,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247128,"byte_end":9247141,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247142,"byte_end":9247145,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247146,"byte_end":9247225,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247226,"byte_end":9247302,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247303,"byte_end":9247380,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247381,"byte_end":9247414,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247415,"byte_end":9247418,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247419,"byte_end":9247494,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247495,"byte_end":9247573,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247574,"byte_end":9247616,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247617,"byte_end":9247620,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247621,"byte_end":9247648,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247649,"byte_end":9247697,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247698,"byte_end":9247776,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247777,"byte_end":9247780,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247781,"byte_end":9247796,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247797,"byte_end":9247800,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247801,"byte_end":9247819,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247820,"byte_end":9247847,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247848,"byte_end":9247871,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247872,"byte_end":9247875,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247876,"byte_end":9247894,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247895,"byte_end":9247916,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247917,"byte_end":9247961,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9247962,"byte_end":9248001,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248002,"byte_end":9248005,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248006,"byte_end":9248039,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248040,"byte_end":9248086,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248087,"byte_end":9248110,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248111,"byte_end":9248122,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248123,"byte_end":9248126,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248127,"byte_end":9248169,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248170,"byte_end":9248189,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248190,"byte_end":9248195,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248196,"byte_end":9248203,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248204,"byte_end":9248207,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248208,"byte_end":9248211,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248212,"byte_end":9248230,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248231,"byte_end":9248258,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248259,"byte_end":9248282,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248283,"byte_end":9248286,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248287,"byte_end":9248305,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248306,"byte_end":9248327,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248328,"byte_end":9248372,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248373,"byte_end":9248376,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248377,"byte_end":9248400,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248401,"byte_end":9248447,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248448,"byte_end":9248485,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248486,"byte_end":9248518,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248519,"byte_end":9248576,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248577,"byte_end":9248608,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248609,"byte_end":9248650,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248651,"byte_end":9248668,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248669,"byte_end":9248684,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248685,"byte_end":9248694,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248695,"byte_end":9248698,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248699,"byte_end":9248713,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248714,"byte_end":9248756,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248757,"byte_end":9248779,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248780,"byte_end":9248793,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248794,"byte_end":9248803,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248804,"byte_end":9248838,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248839,"byte_end":9248844,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248845,"byte_end":9248852,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248853,"byte_end":9248929,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9248930,"byte_end":9249003,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249004,"byte_end":9249019,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249020,"byte_end":9249095,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249096,"byte_end":9249172,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249173,"byte_end":9249225,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249226,"byte_end":9249229,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249230,"byte_end":9249308,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249309,"byte_end":9249389,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249390,"byte_end":9249466,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249467,"byte_end":9249544,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249545,"byte_end":9249623,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249624,"byte_end":9249704,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249705,"byte_end":9249785,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249786,"byte_end":9249855,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249856,"byte_end":9249859,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249860,"byte_end":9249939,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9249940,"byte_end":9250019,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250020,"byte_end":9250098,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250099,"byte_end":9250160,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250161,"byte_end":9250164,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250165,"byte_end":9250192,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250193,"byte_end":9250230,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250231,"byte_end":9250265,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250266,"byte_end":9250315,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250316,"byte_end":9250353,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250354,"byte_end":9250386,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250849,"byte_end":9250859,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7260}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250488,"byte_end":9250519,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250520,"byte_end":9250523,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250524,"byte_end":9250603,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250604,"byte_end":9250679,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250680,"byte_end":9250713,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250714,"byte_end":9250717,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250718,"byte_end":9250796,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250797,"byte_end":9250837,"line_start":131,"line_end":131,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7261},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251646,"byte_end":9251661,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7263}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250904,"byte_end":9250942,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250943,"byte_end":9250946,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9250947,"byte_end":9251028,"line_start":138,"line_end":138,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251029,"byte_end":9251109,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251110,"byte_end":9251184,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251185,"byte_end":9251246,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251247,"byte_end":9251250,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251251,"byte_end":9251330,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251331,"byte_end":9251409,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251410,"byte_end":9251478,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251479,"byte_end":9251482,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251483,"byte_end":9251561,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251562,"byte_end":9251602,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251603,"byte_end":9251606,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251607,"byte_end":9251634,"line_start":150,"line_end":150,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8096},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252369,"byte_end":9252381,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252161,"byte_end":9252218,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252219,"byte_end":9252222,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252223,"byte_end":9252295,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252296,"byte_end":9252299,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252300,"byte_end":9252340,"line_start":167,"line_end":167,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7277},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253597,"byte_end":9253600,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253394,"byte_end":9253452,"line_start":204,"line_end":204,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253457,"byte_end":9253460,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253465,"byte_end":9253479,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253484,"byte_end":9253487,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253492,"byte_end":9253499,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253504,"byte_end":9253531,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253536,"byte_end":9253539,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253544,"byte_end":9253573,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253578,"byte_end":9253585,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7278},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254225,"byte_end":9254229,"line_start":240,"line_end":240,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253765,"byte_end":9253811,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253816,"byte_end":9253862,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253867,"byte_end":9253938,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253943,"byte_end":9253946,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253951,"byte_end":9253965,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253970,"byte_end":9253973,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253978,"byte_end":9253985,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253990,"byte_end":9254017,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254022,"byte_end":9254025,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254030,"byte_end":9254048,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254053,"byte_end":9254074,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254079,"byte_end":9254113,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254118,"byte_end":9254121,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254126,"byte_end":9254165,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254170,"byte_end":9254185,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254190,"byte_end":9254195,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254200,"byte_end":9254207,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7281},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255256,"byte_end":9255266,"line_start":271,"line_end":271,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"fn (self: Arc<Self>) -> OwnedMutexGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254335,"byte_end":9254409,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254414,"byte_end":9254481,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254486,"byte_end":9254510,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254515,"byte_end":9254518,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254523,"byte_end":9254596,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254601,"byte_end":9254674,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254679,"byte_end":9254750,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254755,"byte_end":9254830,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254835,"byte_end":9254877,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254882,"byte_end":9254885,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254890,"byte_end":9254904,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254909,"byte_end":9254912,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254917,"byte_end":9254924,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254929,"byte_end":9254956,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254961,"byte_end":9254984,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254989,"byte_end":9254992,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9254997,"byte_end":9255015,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255020,"byte_end":9255041,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255046,"byte_end":9255090,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255095,"byte_end":9255098,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255103,"byte_end":9255156,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255161,"byte_end":9255176,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255181,"byte_end":9255186,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255191,"byte_end":9255198,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255203,"byte_end":9255206,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255211,"byte_end":9255238,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7288},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256143,"byte_end":9256151,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Result<MutexGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255675,"byte_end":9255744,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255749,"byte_end":9255791,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255796,"byte_end":9255799,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255804,"byte_end":9255838,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255843,"byte_end":9255857,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255862,"byte_end":9255865,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255870,"byte_end":9255877,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255882,"byte_end":9255909,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255914,"byte_end":9255977,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255982,"byte_end":9255985,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9255990,"byte_end":9256020,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256025,"byte_end":9256028,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256033,"byte_end":9256063,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256068,"byte_end":9256090,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256095,"byte_end":9256107,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256112,"byte_end":9256119,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256124,"byte_end":9256131,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7289},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257272,"byte_end":9257286,"line_start":332,"line_end":332,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn (self: Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256360,"byte_end":9256434,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256439,"byte_end":9256476,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256481,"byte_end":9256484,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256489,"byte_end":9256557,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256562,"byte_end":9256635,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256640,"byte_end":9256716,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256721,"byte_end":9256795,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256800,"byte_end":9256848,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256853,"byte_end":9256856,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256861,"byte_end":9256895,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256900,"byte_end":9256927,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256932,"byte_end":9256946,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256951,"byte_end":9256954,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256959,"byte_end":9256966,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9256971,"byte_end":9256998,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257003,"byte_end":9257026,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257031,"byte_end":9257094,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257099,"byte_end":9257102,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257107,"byte_end":9257147,"line_start":326,"line_end":326,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257152,"byte_end":9257155,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257160,"byte_end":9257204,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257209,"byte_end":9257231,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257236,"byte_end":9257248,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257253,"byte_end":9257260,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7290},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257844,"byte_end":9257854,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257511,"byte_end":9257565,"line_start":339,"line_end":339,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257570,"byte_end":9257584,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257589,"byte_end":9257592,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257597,"byte_end":9257604,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257609,"byte_end":9257636,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257641,"byte_end":9257644,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257649,"byte_end":9257667,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257672,"byte_end":9257693,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257698,"byte_end":9257732,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257737,"byte_end":9257740,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257745,"byte_end":9257780,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257785,"byte_end":9257810,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257815,"byte_end":9257820,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257825,"byte_end":9257832,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262884,"byte_end":9262890,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":8102},{"krate":0,"index":8103}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260074,"byte_end":9260110,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260111,"byte_end":9260114,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260115,"byte_end":9260191,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260192,"byte_end":9260272,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260273,"byte_end":9260314,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260315,"byte_end":9260318,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260319,"byte_end":9260393,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260394,"byte_end":9260475,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260476,"byte_end":9260542,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260543,"byte_end":9260546,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260547,"byte_end":9260605,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260606,"byte_end":9260686,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260687,"byte_end":9260767,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260768,"byte_end":9260847,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260848,"byte_end":9260898,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260899,"byte_end":9260902,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260903,"byte_end":9260982,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9260983,"byte_end":9261058,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261059,"byte_end":9261129,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261130,"byte_end":9261133,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261134,"byte_end":9261214,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261215,"byte_end":9261288,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261289,"byte_end":9261360,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261361,"byte_end":9261364,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261365,"byte_end":9261379,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261380,"byte_end":9261383,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261384,"byte_end":9261400,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261401,"byte_end":9261404,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261405,"byte_end":9261412,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261413,"byte_end":9261441,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261442,"byte_end":9261465,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261466,"byte_end":9261469,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261470,"byte_end":9261488,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261489,"byte_end":9261510,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261511,"byte_end":9261556,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261557,"byte_end":9261594,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261595,"byte_end":9261598,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261599,"byte_end":9261632,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261633,"byte_end":9261670,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261671,"byte_end":9261717,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261718,"byte_end":9261729,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261730,"byte_end":9261733,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261734,"byte_end":9261775,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261776,"byte_end":9261800,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261801,"byte_end":9261806,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261807,"byte_end":9261814,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261815,"byte_end":9261818,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261819,"byte_end":9261844,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261845,"byte_end":9261848,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261849,"byte_end":9261856,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261857,"byte_end":9261885,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261886,"byte_end":9261889,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261890,"byte_end":9261925,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261926,"byte_end":9261951,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261952,"byte_end":9261955,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261956,"byte_end":9261979,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9261980,"byte_end":9262015,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262016,"byte_end":9262039,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262040,"byte_end":9262045,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262046,"byte_end":9262049,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262050,"byte_end":9262074,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262075,"byte_end":9262113,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262114,"byte_end":9262153,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262154,"byte_end":9262188,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262189,"byte_end":9262192,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262193,"byte_end":9262248,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262249,"byte_end":9262282,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262283,"byte_end":9262292,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262293,"byte_end":9262296,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262297,"byte_end":9262336,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262337,"byte_end":9262355,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262356,"byte_end":9262387,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262388,"byte_end":9262466,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262467,"byte_end":9262500,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262501,"byte_end":9262518,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262519,"byte_end":9262522,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262523,"byte_end":9262573,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262574,"byte_end":9262619,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262620,"byte_end":9262633,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262634,"byte_end":9262643,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262644,"byte_end":9262649,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262650,"byte_end":9262657,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262658,"byte_end":9262661,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262662,"byte_end":9262691,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262692,"byte_end":9262733,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262734,"byte_end":9262778,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262779,"byte_end":9262813,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9262814,"byte_end":9262855,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7358},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264122,"byte_end":9264125,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"fn () -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263918,"byte_end":9263974,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263979,"byte_end":9263982,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263987,"byte_end":9264001,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264006,"byte_end":9264009,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264014,"byte_end":9264021,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264026,"byte_end":9264054,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264059,"byte_end":9264062,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264067,"byte_end":9264098,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264103,"byte_end":9264110,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7359},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265197,"byte_end":9265205,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264267,"byte_end":9264295,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264300,"byte_end":9264303,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264308,"byte_end":9264384,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264389,"byte_end":9264463,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264468,"byte_end":9264543,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264548,"byte_end":9264617,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264622,"byte_end":9264625,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264630,"byte_end":9264662,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264667,"byte_end":9264670,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264675,"byte_end":9264689,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264694,"byte_end":9264697,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264702,"byte_end":9264709,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264714,"byte_end":9264742,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264747,"byte_end":9264770,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264775,"byte_end":9264778,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264783,"byte_end":9264801,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264806,"byte_end":9264827,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264832,"byte_end":9264877,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264882,"byte_end":9264919,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264924,"byte_end":9264927,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264932,"byte_end":9264965,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9264970,"byte_end":9265007,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265012,"byte_end":9265058,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265063,"byte_end":9265074,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265079,"byte_end":9265082,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265087,"byte_end":9265128,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265133,"byte_end":9265157,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265162,"byte_end":9265167,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265172,"byte_end":9265179,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7362},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266701,"byte_end":9266707,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265542,"byte_end":9265569,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265574,"byte_end":9265577,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265582,"byte_end":9265653,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265658,"byte_end":9265726,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265731,"byte_end":9265807,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265812,"byte_end":9265853,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265858,"byte_end":9265861,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265866,"byte_end":9265940,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9265945,"byte_end":9266019,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266024,"byte_end":9266096,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266101,"byte_end":9266115,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266120,"byte_end":9266123,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266128,"byte_end":9266172,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266177,"byte_end":9266180,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266185,"byte_end":9266199,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266204,"byte_end":9266207,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266212,"byte_end":9266219,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266224,"byte_end":9266252,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266257,"byte_end":9266280,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266285,"byte_end":9266288,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266293,"byte_end":9266311,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266316,"byte_end":9266337,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266342,"byte_end":9266387,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266392,"byte_end":9266429,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266434,"byte_end":9266437,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266442,"byte_end":9266475,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266480,"byte_end":9266517,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266522,"byte_end":9266568,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266573,"byte_end":9266584,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266589,"byte_end":9266592,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266597,"byte_end":9266638,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266643,"byte_end":9266667,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266672,"byte_end":9266677,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9266682,"byte_end":9266689,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7384},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7396},{"krate":0,"index":7399},{"krate":0,"index":8130},{"krate":0,"index":8133},{"krate":0,"index":8136},{"krate":0,"index":8139},{"krate":0,"index":7403},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":8167},{"krate":0,"index":8171},{"krate":0,"index":8170},{"krate":0,"index":7418},{"krate":0,"index":7420},{"krate":0,"index":7433},{"krate":0,"index":7436},{"krate":0,"index":7440},{"krate":0,"index":7443},{"krate":0,"index":7447},{"krate":0,"index":7471},{"krate":0,"index":7473},{"krate":0,"index":7475},{"krate":0,"index":7479},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7501}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9278483,"byte_end":9278553,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279032,"byte_end":9279038,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8132}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9278885,"byte_end":9278932,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9278933,"byte_end":9278936,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9278937,"byte_end":9279003,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8136},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279230,"byte_end":9279238,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8138}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279081,"byte_end":9279130,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279131,"byte_end":9279134,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279135,"byte_end":9279201,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7403},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279289,"byte_end":9279294,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7404},{"krate":0,"index":8142},{"krate":0,"index":8152},{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8154},{"krate":0,"index":8165},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":7405},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7410}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"! Oneshot error types","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279301,"byte_end":9279324,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8142},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279466,"byte_end":9279475,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279349,"byte_end":9279414,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8155},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279697,"byte_end":9279702,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8154},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279630,"byte_end":9279688,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8157},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279791,"byte_end":9279797,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8154},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279713,"byte_end":9279782,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":8154},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279607,"byte_end":9279619,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":8155},{"krate":0,"index":8157}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279497,"byte_end":9279557,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":7418},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281794,"byte_end":9281801,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280979,"byte_end":9281058,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281059,"byte_end":9281069,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281070,"byte_end":9281073,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281074,"byte_end":9281150,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281151,"byte_end":9281229,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281230,"byte_end":9281276,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281277,"byte_end":9281280,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281281,"byte_end":9281327,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281328,"byte_end":9281331,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281332,"byte_end":9281346,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281347,"byte_end":9281350,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281351,"byte_end":9281358,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281359,"byte_end":9281388,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281389,"byte_end":9281392,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281393,"byte_end":9281411,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281412,"byte_end":9281433,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281434,"byte_end":9281476,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281477,"byte_end":9281480,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281481,"byte_end":9281514,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281515,"byte_end":9281555,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281556,"byte_end":9281605,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281606,"byte_end":9281619,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281620,"byte_end":9281631,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281632,"byte_end":9281635,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281636,"byte_end":9281660,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281661,"byte_end":9281708,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281709,"byte_end":9281762,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281763,"byte_end":9281772,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281773,"byte_end":9281778,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9281779,"byte_end":9281786,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7422},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283837,"byte_end":9283841,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (mut self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282266,"byte_end":9282341,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282346,"byte_end":9282362,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282367,"byte_end":9282370,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282375,"byte_end":9282454,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282459,"byte_end":9282534,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282539,"byte_end":9282615,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282620,"byte_end":9282692,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282697,"byte_end":9282710,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282715,"byte_end":9282718,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282723,"byte_end":9282799,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282804,"byte_end":9282880,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282885,"byte_end":9282957,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282962,"byte_end":9283035,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283040,"byte_end":9283114,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283119,"byte_end":9283191,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283196,"byte_end":9283233,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283238,"byte_end":9283241,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283246,"byte_end":9283260,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283265,"byte_end":9283268,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283273,"byte_end":9283305,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283310,"byte_end":9283313,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283318,"byte_end":9283325,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283330,"byte_end":9283359,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283364,"byte_end":9283367,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283372,"byte_end":9283390,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283395,"byte_end":9283416,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283421,"byte_end":9283463,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283468,"byte_end":9283471,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283476,"byte_end":9283509,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283514,"byte_end":9283554,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283559,"byte_end":9283608,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283613,"byte_end":9283626,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283631,"byte_end":9283642,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283647,"byte_end":9283650,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283655,"byte_end":9283679,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283684,"byte_end":9283731,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283736,"byte_end":9283789,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283794,"byte_end":9283803,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283808,"byte_end":9283813,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9283818,"byte_end":9283825,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7425},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9284242,"byte_end":9284253,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7427},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287495,"byte_end":9287501,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285610,"byte_end":9285668,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285673,"byte_end":9285676,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285681,"byte_end":9285755,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285760,"byte_end":9285794,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285799,"byte_end":9285802,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285807,"byte_end":9285872,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285877,"byte_end":9285949,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285954,"byte_end":9285957,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285962,"byte_end":9285974,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285979,"byte_end":9285982,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9285987,"byte_end":9286035,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286040,"byte_end":9286043,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286048,"byte_end":9286074,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286079,"byte_end":9286109,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286114,"byte_end":9286117,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286122,"byte_end":9286136,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286141,"byte_end":9286144,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286149,"byte_end":9286164,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286169,"byte_end":9286172,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286177,"byte_end":9286184,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286189,"byte_end":9286218,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286223,"byte_end":9286226,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286231,"byte_end":9286249,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286254,"byte_end":9286275,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286280,"byte_end":9286332,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286337,"byte_end":9286340,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286345,"byte_end":9286378,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286383,"byte_end":9286404,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286409,"byte_end":9286420,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286425,"byte_end":9286428,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286433,"byte_end":9286459,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286464,"byte_end":9286505,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286510,"byte_end":9286515,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286520,"byte_end":9286527,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286532,"byte_end":9286535,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286540,"byte_end":9286562,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286567,"byte_end":9286570,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286575,"byte_end":9286582,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286587,"byte_end":9286616,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286621,"byte_end":9286659,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286664,"byte_end":9286667,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286672,"byte_end":9286709,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286714,"byte_end":9286717,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286722,"byte_end":9286756,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286761,"byte_end":9286812,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286817,"byte_end":9286842,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286847,"byte_end":9286852,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286857,"byte_end":9286860,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286865,"byte_end":9286883,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286888,"byte_end":9286909,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286914,"byte_end":9286960,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286965,"byte_end":9286968,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9286973,"byte_end":9287006,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287011,"byte_end":9287032,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287037,"byte_end":9287080,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287085,"byte_end":9287160,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287165,"byte_end":9287182,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287187,"byte_end":9287232,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287237,"byte_end":9287280,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287285,"byte_end":9287302,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287307,"byte_end":9287320,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287325,"byte_end":9287336,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287341,"byte_end":9287344,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287349,"byte_end":9287385,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287390,"byte_end":9287455,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287460,"byte_end":9287465,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287470,"byte_end":9287477,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7432},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288371,"byte_end":9288380,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287612,"byte_end":9287686,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287691,"byte_end":9287694,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287699,"byte_end":9287773,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287778,"byte_end":9287812,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287817,"byte_end":9287820,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287825,"byte_end":9287900,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287905,"byte_end":9287908,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287913,"byte_end":9287939,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287944,"byte_end":9287974,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287979,"byte_end":9287982,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9287987,"byte_end":9288001,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288006,"byte_end":9288009,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288014,"byte_end":9288021,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288026,"byte_end":9288055,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288060,"byte_end":9288063,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288068,"byte_end":9288086,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288091,"byte_end":9288112,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288117,"byte_end":9288159,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288164,"byte_end":9288167,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288172,"byte_end":9288205,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288210,"byte_end":9288213,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288218,"byte_end":9288235,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288240,"byte_end":9288243,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288248,"byte_end":9288280,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288285,"byte_end":9288337,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288342,"byte_end":9288347,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288352,"byte_end":9288359,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7438},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290358,"byte_end":9290363,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288720,"byte_end":9288787,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288792,"byte_end":9288795,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288800,"byte_end":9288874,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288879,"byte_end":9288947,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288952,"byte_end":9289018,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289023,"byte_end":9289037,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289042,"byte_end":9289045,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289050,"byte_end":9289126,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289131,"byte_end":9289194,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289199,"byte_end":9289202,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289207,"byte_end":9289229,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289234,"byte_end":9289270,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289275,"byte_end":9289278,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289283,"byte_end":9289297,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289302,"byte_end":9289305,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289310,"byte_end":9289345,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289350,"byte_end":9289353,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289358,"byte_end":9289365,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289370,"byte_end":9289399,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289404,"byte_end":9289454,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289459,"byte_end":9289462,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289467,"byte_end":9289485,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289490,"byte_end":9289511,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289516,"byte_end":9289562,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289567,"byte_end":9289570,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289575,"byte_end":9289608,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289613,"byte_end":9289616,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289621,"byte_end":9289640,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289645,"byte_end":9289648,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289653,"byte_end":9289685,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289690,"byte_end":9289742,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289747,"byte_end":9289750,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289755,"byte_end":9289784,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289789,"byte_end":9289832,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289837,"byte_end":9289869,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289874,"byte_end":9289883,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289888,"byte_end":9289893,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289898,"byte_end":9289905,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289910,"byte_end":9289913,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289918,"byte_end":9289969,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289974,"byte_end":9289977,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289982,"byte_end":9289989,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9289994,"byte_end":9290023,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290028,"byte_end":9290031,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290036,"byte_end":9290054,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290059,"byte_end":9290080,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290085,"byte_end":9290131,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290136,"byte_end":9290139,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290144,"byte_end":9290193,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290198,"byte_end":9290201,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290206,"byte_end":9290225,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290230,"byte_end":9290233,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290238,"byte_end":9290279,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290284,"byte_end":9290324,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290329,"byte_end":9290334,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290339,"byte_end":9290346,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7439},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292346,"byte_end":9292354,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290461,"byte_end":9290493,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290498,"byte_end":9290501,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290506,"byte_end":9290579,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290584,"byte_end":9290650,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290655,"byte_end":9290679,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290684,"byte_end":9290687,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290692,"byte_end":9290758,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290763,"byte_end":9290785,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290790,"byte_end":9290793,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290798,"byte_end":9290810,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290815,"byte_end":9290818,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290823,"byte_end":9290874,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290879,"byte_end":9290942,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9290947,"byte_end":9291022,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291027,"byte_end":9291041,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291046,"byte_end":9291049,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291054,"byte_end":9291068,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291073,"byte_end":9291076,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291081,"byte_end":9291131,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291136,"byte_end":9291139,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291144,"byte_end":9291151,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291156,"byte_end":9291185,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291190,"byte_end":9291240,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291245,"byte_end":9291248,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291253,"byte_end":9291271,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291276,"byte_end":9291297,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291302,"byte_end":9291348,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291353,"byte_end":9291356,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291361,"byte_end":9291390,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291395,"byte_end":9291440,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291445,"byte_end":9291487,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291492,"byte_end":9291524,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291529,"byte_end":9291538,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291543,"byte_end":9291546,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291551,"byte_end":9291574,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291579,"byte_end":9291613,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291618,"byte_end":9291621,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291626,"byte_end":9291655,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291660,"byte_end":9291712,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291717,"byte_end":9291749,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291754,"byte_end":9291763,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291768,"byte_end":9291773,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291778,"byte_end":9291785,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291790,"byte_end":9291793,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291798,"byte_end":9291859,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291864,"byte_end":9291867,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291872,"byte_end":9291879,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291884,"byte_end":9291913,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291918,"byte_end":9291968,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291973,"byte_end":9291976,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9291981,"byte_end":9291999,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292004,"byte_end":9292025,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292030,"byte_end":9292082,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292087,"byte_end":9292090,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292095,"byte_end":9292112,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292117,"byte_end":9292120,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292125,"byte_end":9292154,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292159,"byte_end":9292213,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292218,"byte_end":9292261,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292266,"byte_end":9292298,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292303,"byte_end":9292312,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292317,"byte_end":9292322,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9292327,"byte_end":9292334,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8234},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360845,"byte_end":9360854,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":8235}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360194,"byte_end":9360259,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360260,"byte_end":9360263,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360264,"byte_end":9360339,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360340,"byte_end":9360416,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360417,"byte_end":9360497,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360498,"byte_end":9360507,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360508,"byte_end":9360511,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360512,"byte_end":9360585,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360586,"byte_end":9360665,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360666,"byte_end":9360744,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360745,"byte_end":9360816,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8238},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361103,"byte_end":9361118,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8240},{"krate":0,"index":8241}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360919,"byte_end":9360951,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360952,"byte_end":9360955,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9360956,"byte_end":9361007,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361008,"byte_end":9361011,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361012,"byte_end":9361062,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361063,"byte_end":9361074,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8245},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361379,"byte_end":9361399,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8246},{"krate":0,"index":8247}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361170,"byte_end":9361209,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361210,"byte_end":9361213,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361214,"byte_end":9361271,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361272,"byte_end":9361275,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361276,"byte_end":9361338,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361339,"byte_end":9361350,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8250},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361695,"byte_end":9361710,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361448,"byte_end":9361512,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361513,"byte_end":9361516,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361517,"byte_end":9361594,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361595,"byte_end":9361607,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361608,"byte_end":9361611,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9361612,"byte_end":9361666,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7736},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362264,"byte_end":9362267,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"fn (permits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362189,"byte_end":9362252,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362443,"byte_end":9362460,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362379,"byte_end":9362431,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7738},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362707,"byte_end":9362718,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"fn (&self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362530,"byte_end":9362572,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362577,"byte_end":9362580,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362585,"byte_end":9362695,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362838,"byte_end":9362845,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"fn (&self) -> SemaphorePermit<'_>","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362781,"byte_end":9362820,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363081,"byte_end":9363092,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn (&self) -> Result<SemaphorePermit<'_>, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363020,"byte_end":9363069,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363553,"byte_end":9363566,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"fn (self: Arc<Self>) -> OwnedSemaphorePermit","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363375,"byte_end":9363414,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363419,"byte_end":9363422,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363427,"byte_end":9363495,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363500,"byte_end":9363503,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363508,"byte_end":9363535,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7746},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363946,"byte_end":9363963,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"fn (self: Arc<Self>) -> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363764,"byte_end":9363813,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363818,"byte_end":9363821,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363826,"byte_end":9363894,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363899,"byte_end":9363902,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9363907,"byte_end":9363934,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7749},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364478,"byte_end":9364484,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364303,"byte_end":9364373,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364378,"byte_end":9364447,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364452,"byte_end":9364466,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7751},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364739,"byte_end":9364745,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364564,"byte_end":9364634,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364639,"byte_end":9364708,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364713,"byte_end":9364727,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8255},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367768,"byte_end":9367774,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":8257},{"krate":0,"index":8258}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365238,"byte_end":9365276,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365277,"byte_end":9365280,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365281,"byte_end":9365358,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365359,"byte_end":9365438,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365439,"byte_end":9365518,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365519,"byte_end":9365577,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365578,"byte_end":9365581,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365582,"byte_end":9365660,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365661,"byte_end":9365739,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365740,"byte_end":9365818,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365819,"byte_end":9365884,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365885,"byte_end":9365888,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365889,"byte_end":9365953,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9365954,"byte_end":9366026,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366027,"byte_end":9366107,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366108,"byte_end":9366188,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366189,"byte_end":9366269,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366270,"byte_end":9366339,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366340,"byte_end":9366410,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366411,"byte_end":9366449,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366450,"byte_end":9366453,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366454,"byte_end":9366531,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366532,"byte_end":9366617,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366618,"byte_end":9366698,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366699,"byte_end":9366746,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366747,"byte_end":9366819,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366820,"byte_end":9366823,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366824,"byte_end":9366838,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366839,"byte_end":9366842,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366843,"byte_end":9366850,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366851,"byte_end":9366879,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366880,"byte_end":9366883,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366884,"byte_end":9366902,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366903,"byte_end":9366924,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366925,"byte_end":9366959,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366960,"byte_end":9366963,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9366964,"byte_end":9367012,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367013,"byte_end":9367022,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367023,"byte_end":9367062,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367063,"byte_end":9367102,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367103,"byte_end":9367134,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367135,"byte_end":9367166,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367167,"byte_end":9367216,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367217,"byte_end":9367220,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367221,"byte_end":9367272,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367273,"byte_end":9367282,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367283,"byte_end":9367326,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367327,"byte_end":9367347,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367348,"byte_end":9367378,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367379,"byte_end":9367418,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367419,"byte_end":9367424,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367425,"byte_end":9367432,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367433,"byte_end":9367436,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367437,"byte_end":9367471,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367472,"byte_end":9367501,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367502,"byte_end":9367549,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367550,"byte_end":9367599,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367600,"byte_end":9367637,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367638,"byte_end":9367739,"line_start":69,"line_end":69,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8262},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368136,"byte_end":9368151,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8265},{"krate":0,"index":8266}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367908,"byte_end":9367980,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367981,"byte_end":9367993,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367994,"byte_end":9367997,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9367998,"byte_end":9368053,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368054,"byte_end":9368069,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368070,"byte_end":9368073,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368074,"byte_end":9368107,"line_start":85,"line_end":85,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8271},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368502,"byte_end":9368518,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8274},{"krate":0,"index":8275}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368233,"byte_end":9368309,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368310,"byte_end":9368322,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368323,"byte_end":9368326,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368327,"byte_end":9368384,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368385,"byte_end":9368403,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368404,"byte_end":9368407,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368408,"byte_end":9368443,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368444,"byte_end":9368473,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7787},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370583,"byte_end":9370586,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (value: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370373,"byte_end":9370436,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370441,"byte_end":9370444,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370449,"byte_end":9370463,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370468,"byte_end":9370471,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370476,"byte_end":9370483,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370488,"byte_end":9370516,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370521,"byte_end":9370524,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370529,"byte_end":9370559,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370564,"byte_end":9370571,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7788},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371801,"byte_end":9371805,"line_start":212,"line_end":212,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370763,"byte_end":9370834,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370839,"byte_end":9370885,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370890,"byte_end":9370893,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370898,"byte_end":9370967,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370972,"byte_end":9371048,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371053,"byte_end":9371077,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371082,"byte_end":9371085,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371090,"byte_end":9371104,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371109,"byte_end":9371112,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371117,"byte_end":9371124,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371129,"byte_end":9371152,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371157,"byte_end":9371185,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371190,"byte_end":9371193,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371198,"byte_end":9371216,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371221,"byte_end":9371242,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371247,"byte_end":9371291,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371296,"byte_end":9371330,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371335,"byte_end":9371338,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371343,"byte_end":9371377,"line_start":199,"line_end":199,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371382,"byte_end":9371408,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371413,"byte_end":9371416,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371421,"byte_end":9371454,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371459,"byte_end":9371529,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371534,"byte_end":9371574,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371579,"byte_end":9371609,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371614,"byte_end":9371670,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371675,"byte_end":9371678,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371683,"byte_end":9371741,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371746,"byte_end":9371762,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371767,"byte_end":9371771,"line_start":210,"line_end":210,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9371776,"byte_end":9371783,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7792},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372836,"byte_end":9372841,"line_start":243,"line_end":243,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372195,"byte_end":9372270,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372275,"byte_end":9372321,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372326,"byte_end":9372329,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372334,"byte_end":9372404,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372409,"byte_end":9372447,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372452,"byte_end":9372455,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372460,"byte_end":9372533,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372538,"byte_end":9372555,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372560,"byte_end":9372563,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372568,"byte_end":9372582,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372587,"byte_end":9372590,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372595,"byte_end":9372602,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372607,"byte_end":9372635,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372640,"byte_end":9372643,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372648,"byte_end":9372666,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372671,"byte_end":9372692,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372697,"byte_end":9372729,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372734,"byte_end":9372737,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372742,"byte_end":9372779,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372784,"byte_end":9372797,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372802,"byte_end":9372806,"line_start":241,"line_end":241,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9372811,"byte_end":9372818,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7796},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373356,"byte_end":9373366,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373291,"byte_end":9373344,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7864},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870},{"krate":0,"index":7873},{"krate":0,"index":7879},{"krate":0,"index":7882},{"krate":0,"index":8289},{"krate":0,"index":8293},{"krate":0,"index":8296},{"krate":0,"index":8299},{"krate":0,"index":8302},{"krate":0,"index":8306},{"krate":0,"index":7885},{"krate":0,"index":8316},{"krate":0,"index":8322},{"krate":0,"index":7892},{"krate":0,"index":8325},{"krate":0,"index":8330},{"krate":0,"index":8328},{"krate":0,"index":8332},{"krate":0,"index":8335},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7898},{"krate":0,"index":7903},{"krate":0,"index":7910},{"krate":0,"index":7915},{"krate":0,"index":7918},{"krate":0,"index":7921},{"krate":0,"index":7929},{"krate":0,"index":7931},{"krate":0,"index":7934},{"krate":0,"index":7938},{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7949}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"! A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9386881,"byte_end":9386960,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9386961,"byte_end":9386971,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9386972,"byte_end":9386975,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9386976,"byte_end":9387052,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387053,"byte_end":9387127,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387128,"byte_end":9387131,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387132,"byte_end":9387143,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387144,"byte_end":9387147,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387148,"byte_end":9387215,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"! the producer and sender halves of the channel. The channel is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387216,"byte_end":9387281,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387282,"byte_end":9387347,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"! be ready upon creation and will yield either this initial value or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387348,"byte_end":9387418,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! the latest value that has been sent by `Sender`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387419,"byte_end":9387471,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387472,"byte_end":9387475,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387476,"byte_end":9387543,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387544,"byte_end":9387547,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387548,"byte_end":9387562,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387563,"byte_end":9387566,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387567,"byte_end":9387574,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387575,"byte_end":9387602,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387603,"byte_end":9387606,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387607,"byte_end":9387671,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"!     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387672,"byte_end":9387723,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387724,"byte_end":9387727,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387728,"byte_end":9387761,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387762,"byte_end":9387815,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"!             println!(\"received = {:?}\", value);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387816,"byte_end":9387867,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"!         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387868,"byte_end":9387881,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387882,"byte_end":9387893,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387894,"byte_end":9387897,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!     tx.broadcast(\"world\")?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387898,"byte_end":9387929,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"! # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387930,"byte_end":9387942,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387943,"byte_end":9387950,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387951,"byte_end":9387958,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387959,"byte_end":9387962,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Closing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387963,"byte_end":9387976,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387977,"byte_end":9387980,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9387981,"byte_end":9388055,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388056,"byte_end":9388135,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! in the values being produced and work can be stopped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388136,"byte_end":9388193,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388194,"byte_end":9388197,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! # Thread safety","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388198,"byte_end":9388217,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388218,"byte_end":9388221,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388222,"byte_end":9388302,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"! threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388303,"byte_end":9388382,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"! handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388383,"byte_end":9388455,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388456,"byte_end":9388459,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388460,"byte_end":9388502,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"! [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388503,"byte_end":9388549,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"! [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388550,"byte_end":9388608,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"! [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388609,"byte_end":9388653,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"! [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9388654,"byte_end":9388712,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8289},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389200,"byte_end":9389208,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8291},{"krate":0,"index":8292}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389034,"byte_end":9389100,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389101,"byte_end":9389104,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389105,"byte_end":9389171,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8296},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389515,"byte_end":9389521,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8298}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389350,"byte_end":9389415,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389416,"byte_end":9389419,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389420,"byte_end":9389486,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8302},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389842,"byte_end":9389845,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":8305}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389559,"byte_end":9389601,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389602,"byte_end":9389605,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389606,"byte_end":9389682,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389683,"byte_end":9389762,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389763,"byte_end":9389813,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":7885},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389901,"byte_end":9389906,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7886},{"krate":0,"index":8310},{"krate":0,"index":8313},{"krate":0,"index":7887},{"krate":0,"index":7890}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"! Watch error types","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389913,"byte_end":9389934,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8310},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9390042,"byte_end":9390051,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":8312}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9389959,"byte_end":9390005,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7894},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391830,"byte_end":9391837,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"fn <T> (init: T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391062,"byte_end":9391138,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391139,"byte_end":9391142,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391143,"byte_end":9391225,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391226,"byte_end":9391302,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391303,"byte_end":9391339,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391340,"byte_end":9391343,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391344,"byte_end":9391358,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391359,"byte_end":9391362,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391363,"byte_end":9391370,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391371,"byte_end":9391398,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391399,"byte_end":9391402,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391403,"byte_end":9391467,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391468,"byte_end":9391519,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391520,"byte_end":9391523,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391524,"byte_end":9391557,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391558,"byte_end":9391611,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391612,"byte_end":9391663,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391664,"byte_end":9391677,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391678,"byte_end":9391689,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391690,"byte_end":9391693,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391694,"byte_end":9391725,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391726,"byte_end":9391738,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391739,"byte_end":9391746,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391747,"byte_end":9391754,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391755,"byte_end":9391758,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391759,"byte_end":9391788,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9391789,"byte_end":9391822,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7900},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393006,"byte_end":9393012,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"fn (&self) -> Ref<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392544,"byte_end":9392599,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392604,"byte_end":9392607,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392612,"byte_end":9392688,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392693,"byte_end":9392769,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392774,"byte_end":9392805,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392810,"byte_end":9392813,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392818,"byte_end":9392832,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392837,"byte_end":9392840,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392845,"byte_end":9392852,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392857,"byte_end":9392884,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392889,"byte_end":9392892,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392897,"byte_end":9392939,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392944,"byte_end":9392982,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392987,"byte_end":9392994,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7901},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393172,"byte_end":9393185,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"fn <'a> (&'a mut self, cx: &mut Context<'_>) -> Poll<Option<Ref<'a, T>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7905},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394906,"byte_end":9394910,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393824,"byte_end":9393884,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393889,"byte_end":9393892,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393897,"byte_end":9393965,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393970,"byte_end":9394044,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394049,"byte_end":9394122,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394127,"byte_end":9394166,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394171,"byte_end":9394174,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394179,"byte_end":9394234,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394239,"byte_end":9394242,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394247,"byte_end":9394261,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394266,"byte_end":9394269,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394274,"byte_end":9394281,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394286,"byte_end":9394313,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394318,"byte_end":9394321,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394326,"byte_end":9394344,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394349,"byte_end":9394370,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394375,"byte_end":9394426,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394431,"byte_end":9394434,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394439,"byte_end":9394480,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394485,"byte_end":9394516,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394521,"byte_end":9394524,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394529,"byte_end":9394562,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394567,"byte_end":9394612,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394617,"byte_end":9394628,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394633,"byte_end":9394636,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394641,"byte_end":9394703,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394708,"byte_end":9394749,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394754,"byte_end":9394787,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394792,"byte_end":9394795,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394800,"byte_end":9394832,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394837,"byte_end":9394866,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394871,"byte_end":9394876,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9394881,"byte_end":9394888,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395976,"byte_end":9395985,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"fn (&self, value: T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395896,"byte_end":9395964,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9396816,"byte_end":9396822,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9396605,"byte_end":9396651,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9396656,"byte_end":9396659,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9396664,"byte_end":9396738,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9396743,"byte_end":9396798,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":8337},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8341},{"krate":0,"index":8348},{"krate":0,"index":8349},{"krate":0,"index":8352},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8363},{"krate":0,"index":8374},{"krate":0,"index":8452},{"krate":0,"index":8455},{"krate":0,"index":8516}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398568,"byte_end":9398599,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398600,"byte_end":9398603,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398604,"byte_end":9398626,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398627,"byte_end":9398630,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398631,"byte_end":9398712,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398713,"byte_end":9398793,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398794,"byte_end":9398874,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398875,"byte_end":9398949,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9398950,"byte_end":9399025,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399026,"byte_end":9399048,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399049,"byte_end":9399052,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399053,"byte_end":9399088,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399089,"byte_end":9399092,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399093,"byte_end":9399167,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399168,"byte_end":9399247,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399248,"byte_end":9399320,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399321,"byte_end":9399396,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399397,"byte_end":9399450,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399451,"byte_end":9399454,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399455,"byte_end":9399532,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399533,"byte_end":9399606,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399607,"byte_end":9399686,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399687,"byte_end":9399765,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399766,"byte_end":9399838,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399839,"byte_end":9399914,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399915,"byte_end":9399989,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9399990,"byte_end":9400065,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400066,"byte_end":9400096,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400097,"byte_end":9400100,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400101,"byte_end":9400179,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400180,"byte_end":9400255,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400256,"byte_end":9400333,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400334,"byte_end":9400413,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400414,"byte_end":9400492,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400493,"byte_end":9400568,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400569,"byte_end":9400644,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400645,"byte_end":9400706,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400707,"byte_end":9400710,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400711,"byte_end":9400735,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400736,"byte_end":9400800,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400801,"byte_end":9400861,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400862,"byte_end":9400951,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9400952,"byte_end":9401040,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401041,"byte_end":9401044,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401045,"byte_end":9401070,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401071,"byte_end":9401074,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401075,"byte_end":9401142,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401143,"byte_end":9401146,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401147,"byte_end":9401163,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401164,"byte_end":9401167,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401168,"byte_end":9401247,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401248,"byte_end":9401327,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401328,"byte_end":9401407,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401408,"byte_end":9401475,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401476,"byte_end":9401479,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401480,"byte_end":9401487,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401488,"byte_end":9401508,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401509,"byte_end":9401512,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401513,"byte_end":9401535,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401536,"byte_end":9401559,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401560,"byte_end":9401596,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401597,"byte_end":9401604,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401605,"byte_end":9401612,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401613,"byte_end":9401620,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401621,"byte_end":9401624,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401625,"byte_end":9401704,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401705,"byte_end":9401783,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401784,"byte_end":9401818,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401819,"byte_end":9401822,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401823,"byte_end":9401830,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401831,"byte_end":9401851,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401852,"byte_end":9401855,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401856,"byte_end":9401936,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401937,"byte_end":9401971,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401972,"byte_end":9401986,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9401987,"byte_end":9402009,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402010,"byte_end":9402017,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402018,"byte_end":9402021,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402022,"byte_end":9402032,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402033,"byte_end":9402036,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402037,"byte_end":9402081,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402082,"byte_end":9402111,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402112,"byte_end":9402151,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402152,"byte_end":9402164,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402165,"byte_end":9402172,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402173,"byte_end":9402180,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402181,"byte_end":9402184,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402185,"byte_end":9402265,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402266,"byte_end":9402342,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402343,"byte_end":9402355,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402356,"byte_end":9402359,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402360,"byte_end":9402367,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402368,"byte_end":9402388,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402389,"byte_end":9402392,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402393,"byte_end":9402431,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402432,"byte_end":9402466,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402467,"byte_end":9402508,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402509,"byte_end":9402516,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402517,"byte_end":9402520,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402521,"byte_end":9402579,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402580,"byte_end":9402613,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402614,"byte_end":9402621,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402622,"byte_end":9402629,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402630,"byte_end":9402633,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402634,"byte_end":9402707,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402708,"byte_end":9402736,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402737,"byte_end":9402740,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402741,"byte_end":9402782,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402783,"byte_end":9402816,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402817,"byte_end":9402863,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402864,"byte_end":9402907,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402908,"byte_end":9402950,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402951,"byte_end":9402992,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402993,"byte_end":9402996,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9402997,"byte_end":9403026,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403027,"byte_end":9403030,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403031,"byte_end":9403111,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403112,"byte_end":9403191,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403192,"byte_end":9403271,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403272,"byte_end":9403312,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403313,"byte_end":9403316,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403317,"byte_end":9403391,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403392,"byte_end":9403472,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403473,"byte_end":9403476,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403477,"byte_end":9403500,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403501,"byte_end":9403504,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403505,"byte_end":9403585,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403586,"byte_end":9403652,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403653,"byte_end":9403720,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403721,"byte_end":9403795,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403796,"byte_end":9403808,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403809,"byte_end":9403812,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403813,"byte_end":9403820,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403821,"byte_end":9403841,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403842,"byte_end":9403845,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403846,"byte_end":9403869,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403870,"byte_end":9403899,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403900,"byte_end":9403962,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403963,"byte_end":9403970,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403971,"byte_end":9403978,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403979,"byte_end":9403986,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403987,"byte_end":9403990,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9403991,"byte_end":9404065,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404066,"byte_end":9404133,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404134,"byte_end":9404137,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404138,"byte_end":9404149,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404150,"byte_end":9404172,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404173,"byte_end":9404237,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404238,"byte_end":9404278,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404279,"byte_end":9404341,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404342,"byte_end":9404370,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404371,"byte_end":9404378,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404379,"byte_end":9404382,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404383,"byte_end":9404412,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404413,"byte_end":9404458,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404459,"byte_end":9404471,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404472,"byte_end":9404479,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404480,"byte_end":9404487,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404488,"byte_end":9404491,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404492,"byte_end":9404515,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404516,"byte_end":9404519,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404520,"byte_end":9404600,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404601,"byte_end":9404675,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404676,"byte_end":9404752,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404753,"byte_end":9404827,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404828,"byte_end":9404907,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404908,"byte_end":9404990,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9404991,"byte_end":9405012,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405013,"byte_end":9405016,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405017,"byte_end":9405033,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405034,"byte_end":9405037,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405038,"byte_end":9405045,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405046,"byte_end":9405066,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405067,"byte_end":9405070,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405071,"byte_end":9405094,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405095,"byte_end":9405137,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405138,"byte_end":9405200,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405201,"byte_end":9405229,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405230,"byte_end":9405237,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405238,"byte_end":9405241,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405242,"byte_end":9405287,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405288,"byte_end":9405295,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405296,"byte_end":9405303,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405304,"byte_end":9405307,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405308,"byte_end":9405326,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405327,"byte_end":9405330,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405331,"byte_end":9405405,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405406,"byte_end":9405484,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405485,"byte_end":9405561,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405562,"byte_end":9405619,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405620,"byte_end":9405698,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405699,"byte_end":9405727,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405728,"byte_end":9405731,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405732,"byte_end":9405743,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405744,"byte_end":9405764,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405765,"byte_end":9405768,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405769,"byte_end":9405807,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405808,"byte_end":9405819,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405820,"byte_end":9405847,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405848,"byte_end":9405866,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405867,"byte_end":9405909,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405910,"byte_end":9405921,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405922,"byte_end":9405925,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405926,"byte_end":9405993,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9405994,"byte_end":9406026,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406027,"byte_end":9406063,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406064,"byte_end":9406069,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406070,"byte_end":9406083,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406084,"byte_end":9406091,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406092,"byte_end":9406099,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406100,"byte_end":9406103,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406104,"byte_end":9406161,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406162,"byte_end":9406219,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406220,"byte_end":9406279,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406280,"byte_end":9406329,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9406330,"byte_end":9406379,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8342},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/blocking.rs","byte_start":9408979,"byte_end":9408993,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22029,"byte_end":22060,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8345},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/blocking.rs","byte_start":9411882,"byte_end":9411896,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"fn <F, R> (f: F) -> JoinHandle<R>","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":16564,"byte_end":16592,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":8364},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/spawn.rs","byte_start":9416068,"byte_end":9416073,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <T> (task: T) -> JoinHandle<T::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8366},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9417146,"byte_end":9417155,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9417065,"byte_end":9417128,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8517},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9421553,"byte_end":9421561,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8526},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9423573,"byte_end":9423584,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"fn <F> (future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8407},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9424481,"byte_end":9424484,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"fn () -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9424436,"byte_end":9424469,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8408},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426189,"byte_end":9426200,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425026,"byte_end":9425076,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425081,"byte_end":9425084,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425089,"byte_end":9425149,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425154,"byte_end":9425157,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425162,"byte_end":9425234,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425239,"byte_end":9425309,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425314,"byte_end":9425325,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425330,"byte_end":9425350,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425355,"byte_end":9425358,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425363,"byte_end":9425381,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425386,"byte_end":9425407,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425412,"byte_end":9425454,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425459,"byte_end":9425462,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425467,"byte_end":9425539,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425544,"byte_end":9425597,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425602,"byte_end":9425635,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425640,"byte_end":9425657,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425662,"byte_end":9425673,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425678,"byte_end":9425681,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425686,"byte_end":9425720,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425725,"byte_end":9425761,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425766,"byte_end":9425784,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425789,"byte_end":9425806,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425811,"byte_end":9425814,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425819,"byte_end":9425890,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425895,"byte_end":9425945,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425950,"byte_end":9425983,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9425988,"byte_end":9426005,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426010,"byte_end":9426021,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426026,"byte_end":9426029,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426034,"byte_end":9426070,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426075,"byte_end":9426093,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426098,"byte_end":9426115,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426120,"byte_end":9426125,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426130,"byte_end":9426137,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426142,"byte_end":9426177,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8410},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428935,"byte_end":9428943,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"fn <F> (&self, rt: &mut crate::runtime::Runtime, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426543,"byte_end":9426617,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426622,"byte_end":9426681,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426686,"byte_end":9426689,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426694,"byte_end":9426761,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426766,"byte_end":9426839,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426844,"byte_end":9426920,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9426925,"byte_end":9427005,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427010,"byte_end":9427029,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427034,"byte_end":9427037,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427042,"byte_end":9427108,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427113,"byte_end":9427116,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427121,"byte_end":9427133,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427138,"byte_end":9427141,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427146,"byte_end":9427218,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427223,"byte_end":9427296,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427301,"byte_end":9427304,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427309,"byte_end":9427320,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427325,"byte_end":9427328,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427333,"byte_end":9427407,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427412,"byte_end":9427487,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427492,"byte_end":9427567,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427572,"byte_end":9427649,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427654,"byte_end":9427657,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427662,"byte_end":9427695,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427700,"byte_end":9427719,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427724,"byte_end":9427756,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427761,"byte_end":9427781,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427786,"byte_end":9427789,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427794,"byte_end":9427835,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427840,"byte_end":9427878,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427883,"byte_end":9427918,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427923,"byte_end":9427967,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9427972,"byte_end":9428031,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428036,"byte_end":9428058,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428063,"byte_end":9428078,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428083,"byte_end":9428101,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428106,"byte_end":9428117,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428122,"byte_end":9428150,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428155,"byte_end":9428161,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428166,"byte_end":9428173,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428178,"byte_end":9428212,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428217,"byte_end":9428224,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428229,"byte_end":9428261,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428266,"byte_end":9428286,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428291,"byte_end":9428294,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428299,"byte_end":9428340,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428345,"byte_end":9428383,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428388,"byte_end":9428423,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428428,"byte_end":9428472,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428477,"byte_end":9428536,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428541,"byte_end":9428563,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428568,"byte_end":9428589,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428594,"byte_end":9428612,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428617,"byte_end":9428628,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428633,"byte_end":9428661,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428666,"byte_end":9428672,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428677,"byte_end":9428684,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428689,"byte_end":9428692,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428697,"byte_end":9428732,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428737,"byte_end":9428804,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428809,"byte_end":9428864,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9428869,"byte_end":9428923,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8412},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430194,"byte_end":9430203,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429102,"byte_end":9429172,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429177,"byte_end":9429180,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429185,"byte_end":9429255,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429260,"byte_end":9429336,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429341,"byte_end":9429409,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429414,"byte_end":9429494,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429499,"byte_end":9429571,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429576,"byte_end":9429651,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429656,"byte_end":9429712,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429717,"byte_end":9429720,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429725,"byte_end":9429739,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429744,"byte_end":9429747,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429752,"byte_end":9429763,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429768,"byte_end":9429788,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429793,"byte_end":9429796,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429801,"byte_end":9429819,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429824,"byte_end":9429845,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429850,"byte_end":9429897,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429902,"byte_end":9429944,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429949,"byte_end":9429971,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9429976,"byte_end":9430006,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430011,"byte_end":9430029,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430034,"byte_end":9430051,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430056,"byte_end":9430061,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430066,"byte_end":9430073,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430078,"byte_end":9430081,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430086,"byte_end":9430121,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9430126,"byte_end":9430176,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8469},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439120,"byte_end":9439128,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":8471}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438287,"byte_end":9438317,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438318,"byte_end":9438321,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438322,"byte_end":9438376,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438377,"byte_end":9438380,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438381,"byte_end":9438447,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438448,"byte_end":9438515,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438516,"byte_end":9438573,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438574,"byte_end":9438643,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438644,"byte_end":9438647,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438648,"byte_end":9438662,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438663,"byte_end":9438666,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438667,"byte_end":9438674,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438675,"byte_end":9438697,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438698,"byte_end":9438722,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438723,"byte_end":9438750,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438751,"byte_end":9438756,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438757,"byte_end":9438760,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438761,"byte_end":9438793,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438794,"byte_end":9438830,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438831,"byte_end":9438844,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438845,"byte_end":9438848,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438849,"byte_end":9438881,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438882,"byte_end":9438918,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438919,"byte_end":9438922,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438923,"byte_end":9438959,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9438960,"byte_end":9439000,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439001,"byte_end":9439018,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439019,"byte_end":9439032,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439033,"byte_end":9439040,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439041,"byte_end":9439048,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439049,"byte_end":9439108,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8471},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439170,"byte_end":9439175,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":8469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8474},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439703,"byte_end":9439708,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"fn <F> (&'static self, value: T, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439253,"byte_end":9439317,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439322,"byte_end":9439325,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439330,"byte_end":9439391,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439396,"byte_end":9439399,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439404,"byte_end":9439420,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439425,"byte_end":9439428,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439433,"byte_end":9439440,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439445,"byte_end":9439467,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439472,"byte_end":9439496,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439501,"byte_end":9439528,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439533,"byte_end":9439538,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439543,"byte_end":9439546,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439551,"byte_end":9439583,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439588,"byte_end":9439643,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439648,"byte_end":9439661,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439666,"byte_end":9439673,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439678,"byte_end":9439685,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8478},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440182,"byte_end":9440186,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439933,"byte_end":9439999,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440004,"byte_end":9440007,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440012,"byte_end":9440024,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440029,"byte_end":9440032,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440037,"byte_end":9440098,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440103,"byte_end":9440170,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8481},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440674,"byte_end":9440682,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440427,"byte_end":9440493,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440498,"byte_end":9440501,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440506,"byte_end":9440572,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440577,"byte_end":9440642,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9440647,"byte_end":9440662,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8487},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441142,"byte_end":9441145,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"fn (&'static self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441037,"byte_end":9441079,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441084,"byte_end":9441130,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8529},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442634,"byte_end":9442645,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8530}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442509,"byte_end":9442584,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8541},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8620},{"krate":0,"index":8621},{"krate":0,"index":8641},{"krate":0,"index":8645},{"krate":0,"index":8822},{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8896},{"krate":0,"index":8900},{"krate":0,"index":8934},{"krate":0,"index":9174},{"krate":0,"index":9198},{"krate":0,"index":8939},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9009}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"! Utilities for tracking time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443018,"byte_end":9443050,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443051,"byte_end":9443054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443055,"byte_end":9443135,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443136,"byte_end":9443148,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443149,"byte_end":9443152,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443153,"byte_end":9443234,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!   in time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443235,"byte_end":9443249,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443250,"byte_end":9443253,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443254,"byte_end":9443324,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"!   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443325,"byte_end":9443405,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"!   elapses.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443406,"byte_end":9443420,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443421,"byte_end":9443424,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443425,"byte_end":9443504,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"!   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443505,"byte_end":9443577,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443578,"byte_end":9443647,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443648,"byte_end":9443651,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443652,"byte_end":9443729,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"!   has expired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443730,"byte_end":9443748,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443749,"byte_end":9443752,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443753,"byte_end":9443824,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443825,"byte_end":9443844,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443845,"byte_end":9443848,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443849,"byte_end":9443919,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443920,"byte_end":9443923,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443924,"byte_end":9443938,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443939,"byte_end":9443942,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443943,"byte_end":9443989,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443990,"byte_end":9443993,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9443994,"byte_end":9444001,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444002,"byte_end":9444033,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444034,"byte_end":9444037,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444038,"byte_end":9444066,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444067,"byte_end":9444070,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444071,"byte_end":9444074,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444075,"byte_end":9444093,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444094,"byte_end":9444115,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444116,"byte_end":9444168,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444169,"byte_end":9444209,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444210,"byte_end":9444215,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444216,"byte_end":9444223,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444224,"byte_end":9444227,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444228,"byte_end":9444307,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444308,"byte_end":9444386,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! prelude.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444387,"byte_end":9444399,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444400,"byte_end":9444403,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444404,"byte_end":9444411,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444412,"byte_end":9444453,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444454,"byte_end":9444457,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444458,"byte_end":9444486,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444487,"byte_end":9444510,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444511,"byte_end":9444516,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444517,"byte_end":9444520,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444521,"byte_end":9444543,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444544,"byte_end":9444611,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444612,"byte_end":9444615,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444616,"byte_end":9444637,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444638,"byte_end":9444678,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444679,"byte_end":9444684,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444685,"byte_end":9444692,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444693,"byte_end":9444700,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444701,"byte_end":9444704,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444705,"byte_end":9444781,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444782,"byte_end":9444785,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444786,"byte_end":9444854,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"! [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444855,"byte_end":9444927,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"! `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9444928,"byte_end":9445003,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445004,"byte_end":9445082,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445083,"byte_end":9445086,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445087,"byte_end":9445165,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"! would only be executed once every three seconds, and not every two","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445166,"byte_end":9445236,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! seconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445237,"byte_end":9445249,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445250,"byte_end":9445253,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445254,"byte_end":9445261,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"! use tokio::time;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445262,"byte_end":9445282,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445283,"byte_end":9445286,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! async fn task_that_takes_a_second() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445287,"byte_end":9445328,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"!     println!(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445329,"byte_end":9445355,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"!     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445356,"byte_end":9445415,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445416,"byte_end":9445421,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445422,"byte_end":9445425,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445426,"byte_end":9445444,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445445,"byte_end":9445466,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"!     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445467,"byte_end":9445539,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"!     for _i in 0..5 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445540,"byte_end":9445564,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"!         interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445565,"byte_end":9445599,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"!         task_that_takes_a_second().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445600,"byte_end":9445645,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"!     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445646,"byte_end":9445655,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445656,"byte_end":9445661,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445662,"byte_end":9445669,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445670,"byte_end":9445673,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445674,"byte_end":9445717,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"! [`interval`]: crate::time::interval()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445718,"byte_end":9445759,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":8544},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":8545},{"krate":0,"index":8548},{"krate":0,"index":8554},{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":9026},{"krate":0,"index":9034},{"krate":0,"index":9037},{"krate":0,"index":9042},{"krate":0,"index":9045},{"krate":0,"index":9049},{"krate":0,"index":9047},{"krate":0,"index":9051},{"krate":0,"index":9055},{"krate":0,"index":9058},{"krate":0,"index":9065},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8590},{"krate":0,"index":8592},{"krate":0,"index":8595},{"krate":0,"index":8599},{"krate":0,"index":8609},{"krate":0,"index":8612},{"krate":0,"index":8614}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9451910,"byte_end":9451942,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9451943,"byte_end":9451946,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9451947,"byte_end":9451987,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9451988,"byte_end":9451991,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9451992,"byte_end":9452029,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9026},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456288,"byte_end":9456298,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":9028},{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9031},{"krate":0,"index":9032},{"krate":0,"index":9033}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452270,"byte_end":9452302,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452303,"byte_end":9452306,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452307,"byte_end":9452384,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452385,"byte_end":9452425,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452426,"byte_end":9452429,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452430,"byte_end":9452441,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452442,"byte_end":9452445,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452446,"byte_end":9452513,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452514,"byte_end":9452594,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452595,"byte_end":9452673,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452674,"byte_end":9452710,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452711,"byte_end":9452714,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452715,"byte_end":9452785,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452786,"byte_end":9452864,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452865,"byte_end":9452938,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9452939,"byte_end":9453008,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453009,"byte_end":9453012,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453013,"byte_end":9453042,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453043,"byte_end":9453046,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453047,"byte_end":9453125,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453126,"byte_end":9453206,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453207,"byte_end":9453283,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453284,"byte_end":9453296,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453297,"byte_end":9453300,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453301,"byte_end":9453380,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453381,"byte_end":9453458,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453459,"byte_end":9453535,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453536,"byte_end":9453569,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453570,"byte_end":9453573,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453574,"byte_end":9453652,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453653,"byte_end":9453729,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453730,"byte_end":9453808,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453809,"byte_end":9453848,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453849,"byte_end":9453852,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453853,"byte_end":9453873,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453874,"byte_end":9453877,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453878,"byte_end":9453976,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9453977,"byte_end":9454074,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454075,"byte_end":9454116,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454117,"byte_end":9454120,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454121,"byte_end":9454221,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454222,"byte_end":9454287,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454288,"byte_end":9454291,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454292,"byte_end":9454374,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454375,"byte_end":9454402,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454403,"byte_end":9454406,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454407,"byte_end":9454418,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454419,"byte_end":9454422,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454423,"byte_end":9454470,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454471,"byte_end":9454474,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454475,"byte_end":9454493,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454494,"byte_end":9454548,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454549,"byte_end":9454552,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454553,"byte_end":9454576,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454577,"byte_end":9454611,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454612,"byte_end":9454647,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454648,"byte_end":9454676,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454677,"byte_end":9454706,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454707,"byte_end":9454733,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454734,"byte_end":9454737,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454738,"byte_end":9454756,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454757,"byte_end":9454819,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454820,"byte_end":9454862,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454863,"byte_end":9454868,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454869,"byte_end":9454872,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454873,"byte_end":9454902,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454903,"byte_end":9454906,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454907,"byte_end":9454923,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454924,"byte_end":9454983,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9454984,"byte_end":9455024,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455025,"byte_end":9455093,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455094,"byte_end":9455097,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455098,"byte_end":9455151,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455152,"byte_end":9455161,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455162,"byte_end":9455165,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455166,"byte_end":9455223,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455224,"byte_end":9455257,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455258,"byte_end":9455295,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455296,"byte_end":9455305,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455306,"byte_end":9455309,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455310,"byte_end":9455356,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455357,"byte_end":9455425,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455426,"byte_end":9455478,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455479,"byte_end":9455492,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455493,"byte_end":9455502,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455503,"byte_end":9455506,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455507,"byte_end":9455590,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455591,"byte_end":9455668,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455669,"byte_end":9455702,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455703,"byte_end":9455756,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455757,"byte_end":9455770,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455771,"byte_end":9455774,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455775,"byte_end":9455806,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455807,"byte_end":9455816,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455817,"byte_end":9455822,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455823,"byte_end":9455830,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455831,"byte_end":9455834,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455835,"byte_end":9455870,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455871,"byte_end":9455912,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455913,"byte_end":9455936,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9455937,"byte_end":9456013,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456014,"byte_end":9456045,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456046,"byte_end":9456085,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456086,"byte_end":9456123,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456124,"byte_end":9456162,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456163,"byte_end":9456181,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456182,"byte_end":9456221,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456222,"byte_end":9456259,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9037},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456989,"byte_end":9456996,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456795,"byte_end":9456853,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456854,"byte_end":9456857,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456858,"byte_end":9456906,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456907,"byte_end":9456910,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9456911,"byte_end":9456960,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":9045},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457464,"byte_end":9457467,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":9046}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457164,"byte_end":9457210,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457211,"byte_end":9457214,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457215,"byte_end":9457296,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457297,"byte_end":9457332,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457333,"byte_end":9457336,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457337,"byte_end":9457374,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9457375,"byte_end":9457428,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8565},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458445,"byte_end":9458448,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"fn () -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458145,"byte_end":9458183,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458188,"byte_end":9458191,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458196,"byte_end":9458269,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458274,"byte_end":9458277,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458282,"byte_end":9458296,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458301,"byte_end":9458304,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458309,"byte_end":9458320,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458325,"byte_end":9458359,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458364,"byte_end":9458421,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458426,"byte_end":9458433,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8566},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459366,"byte_end":9459379,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"fn (capacity: usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458518,"byte_end":9458585,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458590,"byte_end":9458593,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458598,"byte_end":9458669,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458674,"byte_end":9458743,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458748,"byte_end":9458760,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458765,"byte_end":9458768,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458773,"byte_end":9458787,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458792,"byte_end":9458795,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458800,"byte_end":9458811,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458816,"byte_end":9458850,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458855,"byte_end":9458885,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458890,"byte_end":9458893,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458898,"byte_end":9458918,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458923,"byte_end":9458946,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458951,"byte_end":9459011,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459016,"byte_end":9459019,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459024,"byte_end":9459087,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459092,"byte_end":9459116,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459121,"byte_end":9459179,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459184,"byte_end":9459193,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459198,"byte_end":9459201,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459206,"byte_end":9459269,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459274,"byte_end":9459330,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459335,"byte_end":9459342,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459347,"byte_end":9459354,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8567},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461415,"byte_end":9461424,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"fn (&mut self, value: T, when: Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459678,"byte_end":9459751,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459756,"byte_end":9459765,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459770,"byte_end":9459773,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459778,"byte_end":9459852,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459857,"byte_end":9459877,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459882,"byte_end":9459885,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459890,"byte_end":9459965,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9459970,"byte_end":9460040,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460045,"byte_end":9460109,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460114,"byte_end":9460117,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460122,"byte_end":9460197,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460202,"byte_end":9460277,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460282,"byte_end":9460352,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460357,"byte_end":9460430,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460435,"byte_end":9460511,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460516,"byte_end":9460550,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460555,"byte_end":9460558,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460563,"byte_end":9460615,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460620,"byte_end":9460623,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460628,"byte_end":9460640,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460645,"byte_end":9460648,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460653,"byte_end":9460713,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460718,"byte_end":9460721,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460726,"byte_end":9460740,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460745,"byte_end":9460748,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460753,"byte_end":9460768,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460773,"byte_end":9460776,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460781,"byte_end":9460792,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460797,"byte_end":9460850,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460855,"byte_end":9460858,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460863,"byte_end":9460883,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460888,"byte_end":9460911,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460916,"byte_end":9460964,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9460969,"byte_end":9461009,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461014,"byte_end":9461074,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461079,"byte_end":9461082,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461087,"byte_end":9461114,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461119,"byte_end":9461163,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461168,"byte_end":9461211,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461216,"byte_end":9461223,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461228,"byte_end":9461235,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461240,"byte_end":9461243,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461248,"byte_end":9461279,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461284,"byte_end":9461319,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461324,"byte_end":9461357,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461362,"byte_end":9461385,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9461390,"byte_end":9461403,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8568},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9462784,"byte_end":9462796,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"fn (&mut self, cx: &mut task::Context<'_>) -> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9462576,"byte_end":9462651,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9462656,"byte_end":9462732,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9462737,"byte_end":9462772,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8571},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465168,"byte_end":9465174,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"fn (&mut self, value: T, timeout: Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463413,"byte_end":9463490,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463495,"byte_end":9463507,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463512,"byte_end":9463515,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463520,"byte_end":9463589,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463594,"byte_end":9463622,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463627,"byte_end":9463630,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463635,"byte_end":9463710,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463715,"byte_end":9463785,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463790,"byte_end":9463854,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463859,"byte_end":9463862,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463867,"byte_end":9463942,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9463947,"byte_end":9464022,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464027,"byte_end":9464097,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464102,"byte_end":9464175,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464180,"byte_end":9464256,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464261,"byte_end":9464295,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464300,"byte_end":9464303,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464308,"byte_end":9464360,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464365,"byte_end":9464368,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464373,"byte_end":9464385,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464390,"byte_end":9464393,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464398,"byte_end":9464473,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464478,"byte_end":9464491,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464496,"byte_end":9464499,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464504,"byte_end":9464518,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464523,"byte_end":9464526,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464531,"byte_end":9464546,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464551,"byte_end":9464554,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464559,"byte_end":9464570,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464575,"byte_end":9464607,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464612,"byte_end":9464640,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464645,"byte_end":9464648,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464653,"byte_end":9464673,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464678,"byte_end":9464701,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464706,"byte_end":9464754,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464759,"byte_end":9464827,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464832,"byte_end":9464835,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464840,"byte_end":9464867,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464872,"byte_end":9464916,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464921,"byte_end":9464964,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464969,"byte_end":9464976,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464981,"byte_end":9464988,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9464993,"byte_end":9464996,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465001,"byte_end":9465032,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465037,"byte_end":9465072,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465077,"byte_end":9465110,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465115,"byte_end":9465138,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465143,"byte_end":9465156,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8576},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466719,"byte_end":9466725,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"fn (&mut self, key: &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465865,"byte_end":9465923,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465928,"byte_end":9465931,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9465936,"byte_end":9466009,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466014,"byte_end":9466087,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466092,"byte_end":9466109,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466114,"byte_end":9466117,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466122,"byte_end":9466134,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466139,"byte_end":9466142,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466147,"byte_end":9466210,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466215,"byte_end":9466218,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466223,"byte_end":9466237,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466242,"byte_end":9466245,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466250,"byte_end":9466265,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466270,"byte_end":9466273,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466278,"byte_end":9466289,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466294,"byte_end":9466326,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466331,"byte_end":9466359,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466364,"byte_end":9466367,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466372,"byte_end":9466392,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466397,"byte_end":9466420,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466425,"byte_end":9466473,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466478,"byte_end":9466546,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466551,"byte_end":9466554,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466559,"byte_end":9466586,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466591,"byte_end":9466635,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466640,"byte_end":9466683,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466688,"byte_end":9466695,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9466700,"byte_end":9466707,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8578},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468377,"byte_end":9468385,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"fn (&mut self, key: &Key, when: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467263,"byte_end":9467336,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467341,"byte_end":9467344,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467349,"byte_end":9467424,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467429,"byte_end":9467446,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467451,"byte_end":9467454,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467459,"byte_end":9467534,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467539,"byte_end":9467615,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467620,"byte_end":9467635,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467640,"byte_end":9467643,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467648,"byte_end":9467660,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467665,"byte_end":9467668,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467673,"byte_end":9467747,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467752,"byte_end":9467783,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467788,"byte_end":9467791,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467796,"byte_end":9467810,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467815,"byte_end":9467818,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467823,"byte_end":9467838,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467843,"byte_end":9467846,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467851,"byte_end":9467862,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467867,"byte_end":9467920,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467925,"byte_end":9467928,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467933,"byte_end":9467953,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467958,"byte_end":9467981,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9467986,"byte_end":9468034,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468039,"byte_end":9468107,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468112,"byte_end":9468115,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468120,"byte_end":9468177,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468182,"byte_end":9468185,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468190,"byte_end":9468267,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468272,"byte_end":9468275,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468280,"byte_end":9468341,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468346,"byte_end":9468353,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9468358,"byte_end":9468365,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8581},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470278,"byte_end":9470283,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"fn (&mut self, key: &Key, timeout: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469128,"byte_end":9469196,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469201,"byte_end":9469215,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469220,"byte_end":9469223,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469228,"byte_end":9469303,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469308,"byte_end":9469328,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469333,"byte_end":9469336,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469341,"byte_end":9469411,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469416,"byte_end":9469486,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469491,"byte_end":9469519,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469524,"byte_end":9469527,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469532,"byte_end":9469544,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469549,"byte_end":9469552,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469557,"byte_end":9469632,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469637,"byte_end":9469692,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469697,"byte_end":9469700,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469705,"byte_end":9469719,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469724,"byte_end":9469727,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469732,"byte_end":9469747,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469752,"byte_end":9469755,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469760,"byte_end":9469771,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469776,"byte_end":9469808,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469813,"byte_end":9469841,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469846,"byte_end":9469849,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469854,"byte_end":9469874,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469879,"byte_end":9469902,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469907,"byte_end":9469955,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9469960,"byte_end":9470028,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470033,"byte_end":9470036,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470041,"byte_end":9470098,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470103,"byte_end":9470106,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470111,"byte_end":9470168,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470173,"byte_end":9470176,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470181,"byte_end":9470242,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470247,"byte_end":9470254,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470259,"byte_end":9470266,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8582},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471125,"byte_end":9471130,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470392,"byte_end":9470433,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470438,"byte_end":9470441,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470446,"byte_end":9470512,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470517,"byte_end":9470520,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470525,"byte_end":9470591,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470596,"byte_end":9470599,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470604,"byte_end":9470635,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470640,"byte_end":9470643,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470648,"byte_end":9470662,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470667,"byte_end":9470670,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470675,"byte_end":9470686,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470691,"byte_end":9470723,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470728,"byte_end":9470756,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470761,"byte_end":9470764,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470769,"byte_end":9470789,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470794,"byte_end":9470817,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470822,"byte_end":9470870,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470875,"byte_end":9470878,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470883,"byte_end":9470941,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470946,"byte_end":9470949,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9470954,"byte_end":9470995,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471000,"byte_end":9471003,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471008,"byte_end":9471036,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471041,"byte_end":9471044,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471049,"byte_end":9471089,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471094,"byte_end":9471101,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471106,"byte_end":9471113,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8583},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471602,"byte_end":9471610,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471285,"byte_end":9471360,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471365,"byte_end":9471368,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471373,"byte_end":9471387,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471392,"byte_end":9471395,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471400,"byte_end":9471411,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471416,"byte_end":9471448,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471453,"byte_end":9471456,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471461,"byte_end":9471530,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471535,"byte_end":9471578,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471583,"byte_end":9471590,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8584},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472178,"byte_end":9472181,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471669,"byte_end":9471727,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471732,"byte_end":9471735,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471740,"byte_end":9471754,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471759,"byte_end":9471762,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471767,"byte_end":9471778,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471783,"byte_end":9471815,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471820,"byte_end":9471848,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471853,"byte_end":9471856,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471861,"byte_end":9471881,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471886,"byte_end":9471909,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471914,"byte_end":9471991,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9471996,"byte_end":9472037,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472042,"byte_end":9472096,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472101,"byte_end":9472142,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472147,"byte_end":9472154,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472159,"byte_end":9472166,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8585},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473390,"byte_end":9473397,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472235,"byte_end":9472306,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472311,"byte_end":9472334,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472339,"byte_end":9472342,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472347,"byte_end":9472422,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472427,"byte_end":9472503,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472508,"byte_end":9472584,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472589,"byte_end":9472665,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472670,"byte_end":9472693,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472698,"byte_end":9472701,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472706,"byte_end":9472778,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472783,"byte_end":9472816,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472821,"byte_end":9472824,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472829,"byte_end":9472841,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472846,"byte_end":9472849,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472854,"byte_end":9472926,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472931,"byte_end":9472953,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472958,"byte_end":9472961,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472966,"byte_end":9472980,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472985,"byte_end":9472988,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9472993,"byte_end":9473000,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473005,"byte_end":9473037,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473042,"byte_end":9473070,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473075,"byte_end":9473078,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473083,"byte_end":9473103,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473108,"byte_end":9473131,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473136,"byte_end":9473184,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473189,"byte_end":9473192,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473197,"byte_end":9473258,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473263,"byte_end":9473295,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473300,"byte_end":9473303,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473308,"byte_end":9473354,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473359,"byte_end":9473366,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473371,"byte_end":9473378,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8586},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9474113,"byte_end":9474121,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473480,"byte_end":9473534,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473539,"byte_end":9473542,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473547,"byte_end":9473621,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473626,"byte_end":9473682,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473687,"byte_end":9473690,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473695,"byte_end":9473709,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473714,"byte_end":9473717,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473722,"byte_end":9473729,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473734,"byte_end":9473766,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473771,"byte_end":9473799,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473804,"byte_end":9473807,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473812,"byte_end":9473832,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473837,"byte_end":9473860,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473865,"byte_end":9473913,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473918,"byte_end":9473958,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473963,"byte_end":9473966,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9473971,"byte_end":9474031,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9474036,"byte_end":9474077,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9474082,"byte_end":9474089,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9474094,"byte_end":9474101,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8616},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478784,"byte_end":9478791,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478729,"byte_end":9478772,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8617},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478900,"byte_end":9478907,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478837,"byte_end":9478888,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8618},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9479025,"byte_end":9479035,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478965,"byte_end":9479013,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8619},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9479146,"byte_end":9479154,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9479078,"byte_end":9479134,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8631},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479732,"byte_end":9479743,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"fn (deadline: Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479358,"byte_end":9479396,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479397,"byte_end":9479400,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479401,"byte_end":9479476,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479477,"byte_end":9479554,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479555,"byte_end":9479590,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479591,"byte_end":9479594,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479595,"byte_end":9479613,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479614,"byte_end":9479617,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479618,"byte_end":9479694,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479695,"byte_end":9479724,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":8632},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480809,"byte_end":9480818,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"fn (duration: Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479882,"byte_end":9479921,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479922,"byte_end":9479925,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9479926,"byte_end":9480001,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480002,"byte_end":9480037,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480038,"byte_end":9480041,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480042,"byte_end":9480117,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480118,"byte_end":9480195,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480196,"byte_end":9480231,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480232,"byte_end":9480235,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480236,"byte_end":9480299,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480300,"byte_end":9480303,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480304,"byte_end":9480322,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480323,"byte_end":9480326,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480327,"byte_end":9480403,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480404,"byte_end":9480433,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480434,"byte_end":9480437,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480438,"byte_end":9480452,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480453,"byte_end":9480456,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480457,"byte_end":9480504,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480505,"byte_end":9480508,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480509,"byte_end":9480516,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480517,"byte_end":9480560,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480561,"byte_end":9480564,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480565,"byte_end":9480583,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480584,"byte_end":9480605,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480606,"byte_end":9480658,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480659,"byte_end":9480699,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480700,"byte_end":9480705,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480706,"byte_end":9480713,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480714,"byte_end":9480717,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480718,"byte_end":9480759,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9068},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481078,"byte_end":9481083,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9069}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480896,"byte_end":9480951,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480952,"byte_end":9480981,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9480999,"byte_end":9481066,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8635},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481523,"byte_end":9481531,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481453,"byte_end":9481511,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8636},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481735,"byte_end":9481745,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481600,"byte_end":9481645,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481650,"byte_end":9481653,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481658,"byte_end":9481723,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8637},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9482134,"byte_end":9482139,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"fn (&mut self, deadline: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481813,"byte_end":9481863,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481868,"byte_end":9481871,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481876,"byte_end":9481950,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481955,"byte_end":9482022,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9482027,"byte_end":9482030,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9482035,"byte_end":9482103,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9482108,"byte_end":9482122,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":9125},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515609,"byte_end":9515614,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514496,"byte_end":9514547,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514548,"byte_end":9514551,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514552,"byte_end":9514613,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514614,"byte_end":9514617,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514618,"byte_end":9514692,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514693,"byte_end":9514772,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514773,"byte_end":9514848,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514849,"byte_end":9514924,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514925,"byte_end":9514953,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514954,"byte_end":9514957,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9514958,"byte_end":9515035,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515036,"byte_end":9515114,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515115,"byte_end":9515191,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515192,"byte_end":9515272,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515273,"byte_end":9515350,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515351,"byte_end":9515432,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515433,"byte_end":9515515,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515516,"byte_end":9515519,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515520,"byte_end":9515580,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8827},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515765,"byte_end":9515773,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515702,"byte_end":9515753,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8828},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515905,"byte_end":9515916,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515822,"byte_end":9515893,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8829},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516104,"byte_end":9516115,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516038,"byte_end":9516092,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8830},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516252,"byte_end":9516266,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516166,"byte_end":9516240,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":9137},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517106,"byte_end":9517113,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":9138}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9516910,"byte_end":9516970,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9516971,"byte_end":9517033,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8841},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517360,"byte_end":9517363,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517167,"byte_end":9517213,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517218,"byte_end":9517221,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517226,"byte_end":9517240,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517245,"byte_end":9517248,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517253,"byte_end":9517260,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517265,"byte_end":9517294,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517299,"byte_end":9517302,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517307,"byte_end":9517336,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517341,"byte_end":9517348,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8842},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517489,"byte_end":9517497,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"fn (std: std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517413,"byte_end":9517477,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":8843},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517633,"byte_end":9517641,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"fn (self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517571,"byte_end":9517621,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8844},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517885,"byte_end":9517899,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517700,"byte_end":9517772,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517777,"byte_end":9517780,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517785,"byte_end":9517797,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517802,"byte_end":9517805,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517810,"byte_end":9517873,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8845},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518590,"byte_end":9518612,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"fn (&self, earlier: Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517995,"byte_end":9518070,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518075,"byte_end":9518123,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518128,"byte_end":9518131,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518136,"byte_end":9518150,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518155,"byte_end":9518158,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518163,"byte_end":9518170,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518175,"byte_end":9518227,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518232,"byte_end":9518235,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518240,"byte_end":9518258,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518263,"byte_end":9518284,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518289,"byte_end":9518322,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518327,"byte_end":9518372,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518377,"byte_end":9518414,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518419,"byte_end":9518481,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518486,"byte_end":9518556,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518561,"byte_end":9518566,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518571,"byte_end":9518578,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8846},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519335,"byte_end":9519360,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518724,"byte_end":9518799,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518804,"byte_end":9518863,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518868,"byte_end":9518871,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518876,"byte_end":9518890,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518895,"byte_end":9518898,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518903,"byte_end":9518910,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518915,"byte_end":9518967,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518972,"byte_end":9518975,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9518980,"byte_end":9518998,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519003,"byte_end":9519024,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519029,"byte_end":9519062,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519067,"byte_end":9519112,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519117,"byte_end":9519154,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519159,"byte_end":9519224,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519229,"byte_end":9519301,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519306,"byte_end":9519311,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519316,"byte_end":9519323,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8847},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520131,"byte_end":9520138,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519467,"byte_end":9519537,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519542,"byte_end":9519545,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519550,"byte_end":9519562,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519567,"byte_end":9519570,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519575,"byte_end":9519643,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519648,"byte_end":9519714,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519719,"byte_end":9519746,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519751,"byte_end":9519754,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519759,"byte_end":9519773,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519778,"byte_end":9519781,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519786,"byte_end":9519793,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519798,"byte_end":9519850,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519855,"byte_end":9519858,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519863,"byte_end":9519881,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519886,"byte_end":9519907,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519912,"byte_end":9519949,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9519954,"byte_end":9520002,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520007,"byte_end":9520043,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520048,"byte_end":9520097,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520102,"byte_end":9520107,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520112,"byte_end":9520119,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8848},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520419,"byte_end":9520430,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520202,"byte_end":9520277,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520282,"byte_end":9520353,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520358,"byte_end":9520407,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8849},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520769,"byte_end":9520780,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520552,"byte_end":9520627,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520632,"byte_end":9520703,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520708,"byte_end":9520757,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":8885},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524244,"byte_end":9524252,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"fn (period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522502,"byte_end":9522579,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522580,"byte_end":9522611,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522612,"byte_end":9522615,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522616,"byte_end":9522696,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522697,"byte_end":9522736,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522737,"byte_end":9522740,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522741,"byte_end":9522814,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522815,"byte_end":9522818,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522819,"byte_end":9522831,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522832,"byte_end":9522835,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522836,"byte_end":9522881,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522882,"byte_end":9522885,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522886,"byte_end":9522900,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522901,"byte_end":9522904,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522905,"byte_end":9522912,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522913,"byte_end":9522951,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522952,"byte_end":9522955,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522956,"byte_end":9522974,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522975,"byte_end":9522996,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9522997,"byte_end":9523066,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523067,"byte_end":9523070,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523071,"byte_end":9523101,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523102,"byte_end":9523132,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523133,"byte_end":9523163,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523164,"byte_end":9523167,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523168,"byte_end":9523211,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523212,"byte_end":9523217,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523218,"byte_end":9523225,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523226,"byte_end":9523229,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523230,"byte_end":9523304,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523305,"byte_end":9523308,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523309,"byte_end":9523386,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523387,"byte_end":9523462,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523463,"byte_end":9523539,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523540,"byte_end":9523601,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523602,"byte_end":9523605,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523606,"byte_end":9523684,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523685,"byte_end":9523755,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523756,"byte_end":9523768,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523769,"byte_end":9523772,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523773,"byte_end":9523780,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523781,"byte_end":9523801,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523802,"byte_end":9523805,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523806,"byte_end":9523847,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523848,"byte_end":9523874,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523875,"byte_end":9523934,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523935,"byte_end":9523940,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523941,"byte_end":9523944,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523945,"byte_end":9523963,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523964,"byte_end":9523985,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9523986,"byte_end":9524058,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524059,"byte_end":9524083,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524084,"byte_end":9524118,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524119,"byte_end":9524164,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524165,"byte_end":9524174,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524175,"byte_end":9524180,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524181,"byte_end":9524188,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524189,"byte_end":9524192,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524193,"byte_end":9524236,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8886},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525138,"byte_end":9525149,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"fn (start: Instant, period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524402,"byte_end":9524475,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524476,"byte_end":9524510,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524511,"byte_end":9524514,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524515,"byte_end":9524595,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524596,"byte_end":9524635,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524636,"byte_end":9524639,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524640,"byte_end":9524652,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524653,"byte_end":9524656,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524657,"byte_end":9524702,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524703,"byte_end":9524706,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524707,"byte_end":9524721,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524722,"byte_end":9524725,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524726,"byte_end":9524733,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524734,"byte_end":9524788,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524789,"byte_end":9524792,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524793,"byte_end":9524811,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524812,"byte_end":9524833,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524834,"byte_end":9524897,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524898,"byte_end":9524971,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524972,"byte_end":9524975,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9524976,"byte_end":9525006,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525007,"byte_end":9525037,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525038,"byte_end":9525068,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525069,"byte_end":9525072,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525073,"byte_end":9525116,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525117,"byte_end":9525122,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525123,"byte_end":9525130,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9160},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525455,"byte_end":9525463,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":9161},{"krate":0,"index":9162}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525347,"byte_end":9525426,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8888},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525708,"byte_end":9525717,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8889},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526809,"byte_end":9526813,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"fn (&mut self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526204,"byte_end":9526273,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526278,"byte_end":9526281,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526286,"byte_end":9526300,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526305,"byte_end":9526308,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526313,"byte_end":9526320,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526325,"byte_end":9526345,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526350,"byte_end":9526353,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526358,"byte_end":9526386,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526391,"byte_end":9526394,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526399,"byte_end":9526417,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526422,"byte_end":9526443,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526448,"byte_end":9526517,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526522,"byte_end":9526525,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526530,"byte_end":9526560,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526565,"byte_end":9526595,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526600,"byte_end":9526630,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526635,"byte_end":9526638,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526643,"byte_end":9526686,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526691,"byte_end":9526696,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526701,"byte_end":9526708,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526713,"byte_end":9526753,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":8913},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528495,"byte_end":9528502,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"fn <T> (duration: Duration, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527480,"byte_end":9527557,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527558,"byte_end":9527561,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527562,"byte_end":9527641,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527642,"byte_end":9527714,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527715,"byte_end":9527728,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527729,"byte_end":9527732,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527733,"byte_end":9527750,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527751,"byte_end":9527754,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527755,"byte_end":9527833,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527834,"byte_end":9527864,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527865,"byte_end":9527868,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527869,"byte_end":9527949,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527950,"byte_end":9527977,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527978,"byte_end":9527981,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527982,"byte_end":9527996,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9527997,"byte_end":9528000,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528001,"byte_end":9528061,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528062,"byte_end":9528065,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528066,"byte_end":9528077,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528078,"byte_end":9528107,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528108,"byte_end":9528137,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528138,"byte_end":9528141,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528142,"byte_end":9528170,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528171,"byte_end":9528174,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528175,"byte_end":9528197,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528198,"byte_end":9528236,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528237,"byte_end":9528264,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528265,"byte_end":9528268,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528269,"byte_end":9528342,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528343,"byte_end":9528409,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528410,"byte_end":9528465,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528466,"byte_end":9528471,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528472,"byte_end":9528479,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528480,"byte_end":9528487,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8915},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529724,"byte_end":9529734,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"fn <T> (deadline: Instant, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528693,"byte_end":9528765,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528766,"byte_end":9528769,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528770,"byte_end":9528847,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528848,"byte_end":9528903,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528904,"byte_end":9528907,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528908,"byte_end":9528925,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528926,"byte_end":9528929,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9528930,"byte_end":9529008,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529009,"byte_end":9529039,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529040,"byte_end":9529043,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529044,"byte_end":9529124,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529125,"byte_end":9529152,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529153,"byte_end":9529156,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529157,"byte_end":9529171,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529172,"byte_end":9529175,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529176,"byte_end":9529236,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529237,"byte_end":9529240,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529241,"byte_end":9529252,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529253,"byte_end":9529296,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529297,"byte_end":9529326,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529327,"byte_end":9529330,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529331,"byte_end":9529359,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529360,"byte_end":9529363,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529364,"byte_end":9529386,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529387,"byte_end":9529425,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529426,"byte_end":9529453,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529454,"byte_end":9529457,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529458,"byte_end":9529536,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529537,"byte_end":9529551,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529552,"byte_end":9529638,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529639,"byte_end":9529694,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529695,"byte_end":9529700,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529701,"byte_end":9529708,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9529709,"byte_end":9529716,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9625},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530109,"byte_end":9530116,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9627},{"krate":0,"index":9628}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9165},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530273,"byte_end":9530280,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530201,"byte_end":9530233,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8922},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530631,"byte_end":9530638,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530558,"byte_end":9530619,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8923},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530766,"byte_end":9530773,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530685,"byte_end":9530754,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8924},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530902,"byte_end":9530912,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530832,"byte_end":9530890,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":9187},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549045,"byte_end":9549053,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"fn <T> (duration: Duration, stream: T) -> Throttle<T>","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548471,"byte_end":9548530,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548531,"byte_end":9548600,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548601,"byte_end":9548604,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548605,"byte_end":9548618,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548619,"byte_end":9548622,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548623,"byte_end":9548653,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548654,"byte_end":9548672,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548673,"byte_end":9548701,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548702,"byte_end":9548735,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548736,"byte_end":9548766,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548767,"byte_end":9548770,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548771,"byte_end":9548793,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548794,"byte_end":9548885,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548886,"byte_end":9548889,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548890,"byte_end":9548900,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548901,"byte_end":9548963,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9548964,"byte_end":9549015,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549016,"byte_end":9549021,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549022,"byte_end":9549029,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549030,"byte_end":9549037,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9579},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549548,"byte_end":9549556,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9581},{"krate":0,"index":9582},{"krate":0,"index":9583},{"krate":0,"index":9584}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8135896,"byte_end":8135905,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9191},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550023,"byte_end":9550030,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549916,"byte_end":9549989,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549994,"byte_end":9550011,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":9192},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550339,"byte_end":9550346,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550078,"byte_end":9550156,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550161,"byte_end":9550181,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550186,"byte_end":9550189,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550194,"byte_end":9550274,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550279,"byte_end":9550327,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9193},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550641,"byte_end":9550651,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550406,"byte_end":9550468,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550473,"byte_end":9550476,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550481,"byte_end":9550558,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550563,"byte_end":9550629,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":8971},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547604,"byte_end":9547609,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547554,"byte_end":9547594,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":8972},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547667,"byte_end":9547675,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547640,"byte_end":9547657,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":8973},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547764,"byte_end":9547769,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547682,"byte_end":9547754,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":197659,"byte_end":197671,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"fn (n: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":197524,"byte_end":197575,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363030,"byte_end":8363040,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368811,"byte_end":8368815,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8382040,"byte_end":8382044,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8384528,"byte_end":8384532,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8386957,"byte_end":8386961,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8389932,"byte_end":8389936,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8390034,"byte_end":8390038,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8390267,"byte_end":8390271,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395196,"byte_end":8395207,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405676,"byte_end":8405687,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405805,"byte_end":8405816,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8409090,"byte_end":8409101,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409930,"byte_end":8409940,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8413012,"byte_end":8413019,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414254,"byte_end":8414261,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415088,"byte_end":8415096,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418878,"byte_end":8418886,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8424861,"byte_end":8424869,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8425142,"byte_end":8425150,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8426755,"byte_end":8426763,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8429488,"byte_end":8429491,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8431306,"byte_end":8431309,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8443582,"byte_end":8443593,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8444352,"byte_end":8444363,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8444570,"byte_end":8444581,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8447203,"byte_end":8447214,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8432951,"byte_end":8432957,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8435818,"byte_end":8435824,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8436192,"byte_end":8436198,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8436334,"byte_end":8436340,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8437483,"byte_end":8437489,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8437567,"byte_end":8437573,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8437708,"byte_end":8437713,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8439257,"byte_end":8439266,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453772,"byte_end":8453783,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461574,"byte_end":8461585,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8462078,"byte_end":8462089,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8463170,"byte_end":8463181,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8463354,"byte_end":8463365,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465513,"byte_end":8465525,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8476395,"byte_end":8476407,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8476432,"byte_end":8476444,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8476463,"byte_end":8476475,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8479034,"byte_end":8479040,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8479348,"byte_end":8479354,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8481762,"byte_end":8481767,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8482071,"byte_end":8482076,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8484859,"byte_end":8484865,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8485173,"byte_end":8485179,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487299,"byte_end":8487307,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488224,"byte_end":8488233,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488483,"byte_end":8488491,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8489046,"byte_end":8489055,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490004,"byte_end":8490009,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490402,"byte_end":8490407,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490660,"byte_end":8490665,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490788,"byte_end":8490796,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490833,"byte_end":8490842,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490879,"byte_end":8490887,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490924,"byte_end":8490933,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490976,"byte_end":8490984,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8491152,"byte_end":8491161,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8491851,"byte_end":8491855,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8503805,"byte_end":8503806,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8543091,"byte_end":8543092,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544850,"byte_end":8544851,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8580128,"byte_end":8580129,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581545,"byte_end":8581554,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583733,"byte_end":8583742,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8584718,"byte_end":8584727,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8585558,"byte_end":8585567,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8586283,"byte_end":8586292,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587799,"byte_end":8587808,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589645,"byte_end":8589654,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589796,"byte_end":8589805,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8590517,"byte_end":8590526,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8591056,"byte_end":8591065,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8591544,"byte_end":8591553,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593507,"byte_end":8593516,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595794,"byte_end":8595803,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8596693,"byte_end":8596702,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8597184,"byte_end":8597193,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8597480,"byte_end":8597489,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598658,"byte_end":8598663,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599803,"byte_end":8599808,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8600087,"byte_end":8600092,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8600915,"byte_end":8600920,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8603963,"byte_end":8603967,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607077,"byte_end":8607082,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607411,"byte_end":8607416,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607649,"byte_end":8607654,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8608475,"byte_end":8608480,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609660,"byte_end":8609665,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610917,"byte_end":8610922,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8611669,"byte_end":8611674,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8613072,"byte_end":8613076,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8614137,"byte_end":8614144,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8615509,"byte_end":8615518,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8623053,"byte_end":8623061,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8624287,"byte_end":8624292,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8625968,"byte_end":8625977,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8628041,"byte_end":8628053,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8630705,"byte_end":8630714,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8632548,"byte_end":8632554,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8633676,"byte_end":8633684,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8635517,"byte_end":8635521,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8636031,"byte_end":8636035,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637000,"byte_end":8637005,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637744,"byte_end":8637749,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8638528,"byte_end":8638533,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8652072,"byte_end":8652084,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8652589,"byte_end":8652601,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8654140,"byte_end":8654152,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639701,"byte_end":8639705,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641333,"byte_end":8641337,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641994,"byte_end":8641998,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8643555,"byte_end":8643560,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8644353,"byte_end":8644361,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8645869,"byte_end":8645877,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659074,"byte_end":8659085,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669789,"byte_end":8669800,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8670115,"byte_end":8670126,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8670566,"byte_end":8670577,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8670903,"byte_end":8670914,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8671130,"byte_end":8671141,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8671973,"byte_end":8671981,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672619,"byte_end":8672627,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674777,"byte_end":8674785,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8677240,"byte_end":8677248,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8677568,"byte_end":8677577,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8678390,"byte_end":8678398,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8678492,"byte_end":8678501,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681564,"byte_end":8681576,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681779,"byte_end":8681791,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681801,"byte_end":8681814,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684648,"byte_end":8684661,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684966,"byte_end":8684980,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685532,"byte_end":8685546,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685706,"byte_end":8685720,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8686541,"byte_end":8686554,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8686650,"byte_end":8686664,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688799,"byte_end":8688808,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3460},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8713614,"byte_end":8713623,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8714059,"byte_end":8714068,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8714421,"byte_end":8714430,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8714744,"byte_end":8714753,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8715497,"byte_end":8715506,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8715720,"byte_end":8715729,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8716735,"byte_end":8716744,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3602},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730300,"byte_end":8730309,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730745,"byte_end":8730754,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8731074,"byte_end":8731083,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8731302,"byte_end":8731311,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733392,"byte_end":8733404,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733607,"byte_end":8733619,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734146,"byte_end":8734154,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735786,"byte_end":8735794,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8737114,"byte_end":8737122,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8737213,"byte_end":8737221,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738037,"byte_end":8738049,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744672,"byte_end":8744684,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3764},{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8745126,"byte_end":8745138,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8745467,"byte_end":8745479,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8745604,"byte_end":8745616,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8745974,"byte_end":8745982,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746714,"byte_end":8746722,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748849,"byte_end":8748861,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753365,"byte_end":8753377,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753693,"byte_end":8753705,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8754147,"byte_end":8754159,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3829},{"krate":0,"index":3830}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8754479,"byte_end":8754491,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8754616,"byte_end":8754628,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755620,"byte_end":8755628,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755948,"byte_end":8755957,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8756441,"byte_end":8756449,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8756545,"byte_end":8756554,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757492,"byte_end":8757502,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760835,"byte_end":8760845,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3911},{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8761283,"byte_end":8761293,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8761606,"byte_end":8761616,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8761930,"byte_end":8761940,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8762427,"byte_end":8762437,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8763954,"byte_end":8763964,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8764089,"byte_end":8764099,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8768456,"byte_end":8768462,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8769268,"byte_end":8769274,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8769488,"byte_end":8769494,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4085}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8810385,"byte_end":8810400,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8810644,"byte_end":8810659,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815240,"byte_end":8815246,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815390,"byte_end":8815396,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815563,"byte_end":8815569,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8816036,"byte_end":8816042,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8818337,"byte_end":8818343,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8818519,"byte_end":8818525,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805001,"byte_end":8805006,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805184,"byte_end":8805189,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805434,"byte_end":8805451,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805600,"byte_end":8805617,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805964,"byte_end":8805969,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8806638,"byte_end":8806643,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8806730,"byte_end":8806735,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8806832,"byte_end":8806837,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807100,"byte_end":8807102,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807257,"byte_end":8807259,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807489,"byte_end":8807491,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807614,"byte_end":8807616,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775032,"byte_end":8775039,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4318},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791289,"byte_end":8791296,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791626,"byte_end":8791640,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791846,"byte_end":8791860,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791997,"byte_end":8792011,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793860,"byte_end":8793865,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796378,"byte_end":8796383,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4353},{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797348,"byte_end":8797358,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797883,"byte_end":8797894,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8798358,"byte_end":8798369,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4363},{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8798960,"byte_end":8798970,"line_start":921,"line_end":921,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4374}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8799095,"byte_end":8799106,"line_start":927,"line_end":927,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8799231,"byte_end":8799242,"line_start":933,"line_end":933,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8834454,"byte_end":8834468,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8838007,"byte_end":8838012,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8838699,"byte_end":8838713,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8839600,"byte_end":8839614,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8839780,"byte_end":8839787,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8840245,"byte_end":8840252,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8840420,"byte_end":8840423,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8841521,"byte_end":8841527,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4544},{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8849210,"byte_end":8849216,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8849241,"byte_end":8849247,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8849606,"byte_end":8849610,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8850388,"byte_end":8850392,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4611},{"krate":0,"index":4613},{"krate":0,"index":4615},{"krate":0,"index":4618},{"krate":0,"index":4620},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8856143,"byte_end":8856149,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8856774,"byte_end":8856783,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859862,"byte_end":8859871,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8860114,"byte_end":8860123,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8860400,"byte_end":8860409,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8860443,"byte_end":8860448,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4653}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8861126,"byte_end":8861133,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8861610,"byte_end":8861617,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4688},{"krate":0,"index":4699},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8863788,"byte_end":8863793,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876097,"byte_end":8876107,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876144,"byte_end":8876154,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876170,"byte_end":8876180,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876356,"byte_end":8876366,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876393,"byte_end":8876403,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4742},{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8877629,"byte_end":8877639,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8877905,"byte_end":8877915,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8879162,"byte_end":8879169,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8880700,"byte_end":8880707,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8880797,"byte_end":8880804,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8883486,"byte_end":8883491,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4832},{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4854},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8892347,"byte_end":8892355,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8894232,"byte_end":8894237,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8894396,"byte_end":8894404,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8896222,"byte_end":8896230,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8897978,"byte_end":8897991,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5030}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8899149,"byte_end":8899153,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5040}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8899553,"byte_end":8899557,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842540,"byte_end":8842544,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842575,"byte_end":8842579,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842716,"byte_end":8842724,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842765,"byte_end":8842773,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8844697,"byte_end":8844701,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8844998,"byte_end":8845006,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5052},{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845257,"byte_end":8845261,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845454,"byte_end":8845462,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845593,"byte_end":8845597,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845766,"byte_end":8845774,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846060,"byte_end":8846064,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4969}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846304,"byte_end":8846308,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846460,"byte_end":8846468,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846684,"byte_end":8846688,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8901865,"byte_end":8901877,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8903513,"byte_end":8903525,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8903611,"byte_end":8903623,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8903784,"byte_end":8903791,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8905955,"byte_end":8905960,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8908629,"byte_end":8908636,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/schedule.rs","byte_start":8909139,"byte_end":8909151,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs","byte_start":8910024,"byte_end":8910032,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8911652,"byte_end":8911664,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8911890,"byte_end":8911902,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8911932,"byte_end":8911944,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5196}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5206},{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8913915,"byte_end":8913921,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8914390,"byte_end":8914396,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5318}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8914712,"byte_end":8914718,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8915370,"byte_end":8915378,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8915447,"byte_end":8915452,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922500,"byte_end":8922505,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922536,"byte_end":8922541,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922572,"byte_end":8922578,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922609,"byte_end":8922615,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8923474,"byte_end":8923479,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5423},{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8930013,"byte_end":8930018,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935186,"byte_end":8935191,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935287,"byte_end":8935292,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935451,"byte_end":8935456,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5447}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935644,"byte_end":8935650,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8939155,"byte_end":8939161,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8943315,"byte_end":8943325,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8943362,"byte_end":8943372,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8943388,"byte_end":8943398,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8944185,"byte_end":8944195,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5491}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8945001,"byte_end":8945005,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8948878,"byte_end":8948883,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8950361,"byte_end":8950366,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5526}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8950539,"byte_end":8950544,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8956308,"byte_end":8956313,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5685}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8960078,"byte_end":8960084,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5589}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8960859,"byte_end":8960866,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8965132,"byte_end":8965136,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8969922,"byte_end":8969928,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8970368,"byte_end":8970371,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8972942,"byte_end":8972948,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8941213,"byte_end":8941223,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942378,"byte_end":8942388,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942527,"byte_end":8942537,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5659}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942644,"byte_end":8942651,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5661}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942996,"byte_end":8943003,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5664}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5726}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5741}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5748},{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8980795,"byte_end":8980798,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8981520,"byte_end":8981528,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8981618,"byte_end":8981626,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5791},{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8983779,"byte_end":8983786,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8983894,"byte_end":8983901,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989973,"byte_end":8989982,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990096,"byte_end":8990105,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5846},{"krate":0,"index":5848}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990493,"byte_end":8990504,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5853}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990790,"byte_end":8990800,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994596,"byte_end":8994606,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5872}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8996955,"byte_end":8996961,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8997246,"byte_end":8997252,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5881},{"krate":0,"index":5882}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003441,"byte_end":9003447,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005305,"byte_end":9005311,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5929},{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040303,"byte_end":9040312,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040458,"byte_end":9040467,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040506,"byte_end":9040515,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041466,"byte_end":9041475,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041621,"byte_end":9041630,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041669,"byte_end":9041678,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9042601,"byte_end":9042606,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9042786,"byte_end":9042791,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5993}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044369,"byte_end":9044376,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044660,"byte_end":9044667,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6018},{"krate":0,"index":6019}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9045643,"byte_end":9045649,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9045704,"byte_end":9045710,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046099,"byte_end":9046102,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046148,"byte_end":9046151,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046534,"byte_end":9046537,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046585,"byte_end":9046588,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9047103,"byte_end":9047109,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9047198,"byte_end":9047204,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048282,"byte_end":9048287,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048335,"byte_end":9048340,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048740,"byte_end":9048748,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048796,"byte_end":9048804,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050075,"byte_end":9050080,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050111,"byte_end":9050116,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050147,"byte_end":9050152,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050695,"byte_end":9050700,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051314,"byte_end":9051320,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051538,"byte_end":9051544,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051663,"byte_end":9051669,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9052755,"byte_end":9052764,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9052985,"byte_end":9052994,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9053116,"byte_end":9053125,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9054197,"byte_end":9054207,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9054403,"byte_end":9054413,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6175},{"krate":0,"index":6176}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9055312,"byte_end":9055316,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6187}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9055476,"byte_end":9055480,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056423,"byte_end":9056427,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9057089,"byte_end":9057093,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9057839,"byte_end":9057842,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9058031,"byte_end":9058034,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9058155,"byte_end":9058158,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9059003,"byte_end":9059008,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9059262,"byte_end":9059267,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060779,"byte_end":9060783,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060817,"byte_end":9060821,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060962,"byte_end":9060966,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061462,"byte_end":9061466,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9062093,"byte_end":9062097,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062644,"byte_end":9062651,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062682,"byte_end":9062689,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062720,"byte_end":9062727,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063420,"byte_end":9063427,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069092,"byte_end":9069101,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9076102,"byte_end":9076111,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9077650,"byte_end":9077659,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9078875,"byte_end":9078879,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9079089,"byte_end":9079093,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9079226,"byte_end":9079230,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080456,"byte_end":9080465,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080686,"byte_end":9080695,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080880,"byte_end":9080889,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082238,"byte_end":9082245,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082279,"byte_end":9082286,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082493,"byte_end":9082500,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083110,"byte_end":9083114,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083324,"byte_end":9083328,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083461,"byte_end":9083465,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6454}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9084984,"byte_end":9084993,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9085253,"byte_end":9085262,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9085455,"byte_end":9085464,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9116689,"byte_end":9116696,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9117051,"byte_end":9117058,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039533,"byte_end":9039535,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135526,"byte_end":9135533,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6625},{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138813,"byte_end":9138830,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149397,"byte_end":9149403,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149530,"byte_end":9149536,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6706}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149697,"byte_end":9149701,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149771,"byte_end":9149775,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152549,"byte_end":9152555,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152592,"byte_end":9152598,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152636,"byte_end":9152644,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152681,"byte_end":9152689,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152705,"byte_end":9152711,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9158347,"byte_end":9158351,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6734}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9158743,"byte_end":9158749,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6737}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9158929,"byte_end":9158935,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9159089,"byte_end":9159097,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6743}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9163962,"byte_end":9163970,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9166723,"byte_end":9166728,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9170142,"byte_end":9170150,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6767},{"krate":0,"index":6768}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9170600,"byte_end":9170608,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6772}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9171792,"byte_end":9171796,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6778},{"krate":0,"index":6779}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9172638,"byte_end":9172642,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9173372,"byte_end":9173380,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8007}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9174692,"byte_end":9174696,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8012},{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9175420,"byte_end":9175424,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176222,"byte_end":9176228,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176643,"byte_end":9176649,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176793,"byte_end":9176801,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176936,"byte_end":9176945,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6806}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177118,"byte_end":9177127,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177418,"byte_end":9177427,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177700,"byte_end":9177709,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177736,"byte_end":9177748,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9178090,"byte_end":9178102,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9184411,"byte_end":9184416,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9194398,"byte_end":9194404,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9194886,"byte_end":9194892,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6893},{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195530,"byte_end":9195536,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195668,"byte_end":9195674,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196081,"byte_end":9196089,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197861,"byte_end":9197869,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200297,"byte_end":9200305,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200365,"byte_end":9200373,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8020},{"krate":0,"index":8021}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200561,"byte_end":9200567,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6952},{"krate":0,"index":6954}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9211957,"byte_end":9211959,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6989}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9212360,"byte_end":9212362,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9212669,"byte_end":9212678,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7000}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9212940,"byte_end":9212952,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7003}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9214647,"byte_end":9214651,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7025}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9215284,"byte_end":9215292,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7032}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9215558,"byte_end":9215562,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9215611,"byte_end":9215615,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9216094,"byte_end":9216096,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9216794,"byte_end":9216796,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9216944,"byte_end":9216946,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9217124,"byte_end":9217126,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7058}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9217526,"byte_end":9217528,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7062}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9217937,"byte_end":9217939,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7069},{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9221059,"byte_end":9221061,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9221497,"byte_end":9221501,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7085}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9221965,"byte_end":9221969,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7089}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9222518,"byte_end":9222530,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7094}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9224130,"byte_end":9224141,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9226858,"byte_end":9226860,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7156}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9232564,"byte_end":9232566,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9232843,"byte_end":9232845,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9236244,"byte_end":9236246,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236920,"byte_end":9236935,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237076,"byte_end":9237091,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237549,"byte_end":9237566,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7193}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238544,"byte_end":9238561,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7206},{"krate":0,"index":7207}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241033,"byte_end":9241050,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7210},{"krate":0,"index":7211}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241216,"byte_end":9241231,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7214},{"krate":0,"index":7215}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242341,"byte_end":9242350,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7225}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242510,"byte_end":9242519,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243005,"byte_end":9243017,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243050,"byte_end":9243062,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7232}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243402,"byte_end":9243414,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7235}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243643,"byte_end":9243652,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243782,"byte_end":9243791,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244277,"byte_end":9244289,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7240}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244595,"byte_end":9244607,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244764,"byte_end":9244775,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7243}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244874,"byte_end":9244885,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7245}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245015,"byte_end":9245026,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245530,"byte_end":9245546,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245583,"byte_end":9245599,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8077}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251915,"byte_end":9251920,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251974,"byte_end":9251979,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252033,"byte_end":9252043,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252108,"byte_end":9252123,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252410,"byte_end":9252422,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7273}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252559,"byte_end":9252571,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253379,"byte_end":9253384,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7277},{"krate":0,"index":7278},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257957,"byte_end":9257962,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7293}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258046,"byte_end":9258051,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7296}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258200,"byte_end":9258210,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7299}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258311,"byte_end":9258321,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7302},{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258468,"byte_end":9258478,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7306}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258635,"byte_end":9258645,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258811,"byte_end":9258821,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258999,"byte_end":9259014,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7315}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259111,"byte_end":9259126,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7318},{"krate":0,"index":7319}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259269,"byte_end":9259284,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259437,"byte_end":9259452,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259614,"byte_end":9259629,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7328}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263593,"byte_end":9263601,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263634,"byte_end":9263642,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263905,"byte_end":9263911,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7362}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9267919,"byte_end":9267925,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7364}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9269663,"byte_end":9269671,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9270181,"byte_end":9270189,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9275019,"byte_end":9275027,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9277985,"byte_end":9277991,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7380}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279867,"byte_end":9279876,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7406}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280038,"byte_end":9280047,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280116,"byte_end":9280128,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7409}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280427,"byte_end":9280439,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282250,"byte_end":9282256,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7422},{"krate":0,"index":7425},{"krate":0,"index":7427},{"krate":0,"index":7432}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288557,"byte_end":9288563,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288702,"byte_end":9288710,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7438},{"krate":0,"index":7439}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9293101,"byte_end":9293109,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7442}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9293256,"byte_end":9293264,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9293727,"byte_end":9293732,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7455},{"krate":0,"index":7459},{"krate":0,"index":7463},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298104,"byte_end":9298109,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298146,"byte_end":9298151,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298176,"byte_end":9298181,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298550,"byte_end":9298555,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7481}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298950,"byte_end":9298955,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9300668,"byte_end":9300673,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9304151,"byte_end":9304160,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7557}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9314081,"byte_end":9314090,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7561}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9314291,"byte_end":9314297,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7563},{"krate":0,"index":7564}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9315163,"byte_end":9315170,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9315848,"byte_end":9315855,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7570},{"krate":0,"index":7571}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9316654,"byte_end":9316661,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318303,"byte_end":9318310,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318357,"byte_end":9318369,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318462,"byte_end":9318474,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7580}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318618,"byte_end":9318630,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318677,"byte_end":9318692,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7583},{"krate":0,"index":7584}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9319314,"byte_end":9319329,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7586}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9319615,"byte_end":9319630,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9319723,"byte_end":9319729,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592},{"krate":0,"index":7593}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9324998,"byte_end":9325007,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7635},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7640},{"krate":0,"index":7642},{"krate":0,"index":7646},{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341201,"byte_end":9341210,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7659}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341289,"byte_end":9341298,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7661}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341676,"byte_end":9341685,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341710,"byte_end":9341719,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341757,"byte_end":9341763,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7666},{"krate":0,"index":7668},{"krate":0,"index":7669},{"krate":0,"index":7673},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348169,"byte_end":9348175,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348248,"byte_end":9348254,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7681}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348676,"byte_end":9348688,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7683}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348868,"byte_end":9348880,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7686}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349024,"byte_end":9349036,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349083,"byte_end":9349098,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7689},{"krate":0,"index":7690}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349628,"byte_end":9349643,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7692}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349929,"byte_end":9349944,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349982,"byte_end":9349988,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9355401,"byte_end":9355409,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9359072,"byte_end":9359080,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7722}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9359433,"byte_end":9359444,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7724},{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7728},{"krate":0,"index":7729},{"krate":0,"index":7730},{"krate":0,"index":7731}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362173,"byte_end":9362182,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7742},{"krate":0,"index":7743},{"krate":0,"index":7746}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364277,"byte_end":9364292,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7749}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364537,"byte_end":9364557,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7751}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364811,"byte_end":9364826,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364934,"byte_end":9364954,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7756}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368775,"byte_end":9368790,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7771}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9369057,"byte_end":9369072,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7776}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370076,"byte_end":9370082,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370136,"byte_end":9370142,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370203,"byte_end":9370218,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370283,"byte_end":9370299,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370357,"byte_end":9370363,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7792},{"krate":0,"index":7796}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373480,"byte_end":9373495,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7799},{"krate":0,"index":7800}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373634,"byte_end":9373650,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7803},{"krate":0,"index":7804}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373792,"byte_end":9373808,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7807}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373930,"byte_end":9373936,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7810}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9374020,"byte_end":9374026,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7813}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9380301,"byte_end":9380312,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7844},{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386239,"byte_end":9386250,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7848}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386336,"byte_end":9386347,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7850}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386480,"byte_end":9386491,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386516,"byte_end":9386527,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386623,"byte_end":9386628,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9390169,"byte_end":9390178,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7889}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9390358,"byte_end":9390367,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392526,"byte_end":9392534,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7900},{"krate":0,"index":7901}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393806,"byte_end":9393814,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7905}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395180,"byte_end":9395188,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7912},{"krate":0,"index":7913}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395447,"byte_end":9395455,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7917}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395758,"byte_end":9395766,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395880,"byte_end":9395886,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7928}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397421,"byte_end":9397427,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7933}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397666,"byte_end":9397669,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397810,"byte_end":9397816,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7940}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397918,"byte_end":9397925,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7942}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398148,"byte_end":9398155,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398272,"byte_end":9398279,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398309,"byte_end":9398316,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398463,"byte_end":9398470,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7950},{"krate":0,"index":7951}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9417281,"byte_end":9417289,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8372},{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9424421,"byte_end":9424429,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8407},{"krate":0,"index":8408},{"krate":0,"index":8410},{"krate":0,"index":8412},{"krate":0,"index":8416},{"krate":0,"index":8418},{"krate":0,"index":8421}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9432271,"byte_end":9432279,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8425}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9432418,"byte_end":9432426,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8427},{"krate":0,"index":8428}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9433391,"byte_end":9433399,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8431}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9433480,"byte_end":9433488,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8433}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9434355,"byte_end":9434363,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8437},{"krate":0,"index":8438}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9435248,"byte_end":9435254,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8442},{"krate":0,"index":8444}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9435817,"byte_end":9435820,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8451}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439235,"byte_end":9439243,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8474},{"krate":0,"index":8478},{"krate":0,"index":8481}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441019,"byte_end":9441027,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8487}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441235,"byte_end":9441243,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441564,"byte_end":9441579,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8495},{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441880,"byte_end":9441885,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8505}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442503,"byte_end":9442504,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442689,"byte_end":9442700,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8512}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442844,"byte_end":9442855,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8514}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9443002,"byte_end":9443013,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9447598,"byte_end":9447603,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019},{"krate":0,"index":9020}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458125,"byte_end":9458135,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568},{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8576},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8587},{"krate":0,"index":8589}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9475778,"byte_end":9475788,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9475816,"byte_end":9475826,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8594}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9475963,"byte_end":9475973,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8597},{"krate":0,"index":8598}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9476355,"byte_end":9476360,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8601},{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8604},{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478487,"byte_end":9478492,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8611}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478622,"byte_end":9478625,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":8613}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478712,"byte_end":9478719,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481257,"byte_end":9481262,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8634},{"krate":0,"index":8635},{"krate":0,"index":8636},{"krate":0,"index":8637}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9482240,"byte_end":9482245,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8639},{"krate":0,"index":8640}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9495569,"byte_end":9495580,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8655},{"krate":0,"index":8656},{"krate":0,"index":8657},{"krate":0,"index":8658}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9497558,"byte_end":9497576,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8660},{"krate":0,"index":8661}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9498148,"byte_end":9498166,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8663}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9502139,"byte_end":9502144,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8689},{"krate":0,"index":8690},{"krate":0,"index":8691},{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8702}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9508372,"byte_end":9508377,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8705}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9508585,"byte_end":9508590,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9508615,"byte_end":9508620,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9508997,"byte_end":9509003,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9509648,"byte_end":9509654,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8721}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9510099,"byte_end":9510111,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8736},{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739},{"krate":0,"index":8740}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9511021,"byte_end":9511033,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8743}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9511317,"byte_end":9511322,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8751}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9511413,"byte_end":9511418,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9487135,"byte_end":9487141,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9490790,"byte_end":9490796,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807},{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9492785,"byte_end":9492791,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8811}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9493268,"byte_end":9493273,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9494890,"byte_end":9494895,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8821}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515690,"byte_end":9515695,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516410,"byte_end":9516415,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516442,"byte_end":9516447,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8833}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517153,"byte_end":9517160,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8841},{"krate":0,"index":8842},{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846},{"krate":0,"index":8847},{"krate":0,"index":8848},{"krate":0,"index":8849}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520934,"byte_end":9520941,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8851}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521070,"byte_end":9521077,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8853}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521192,"byte_end":9521199,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8855},{"krate":0,"index":8856}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521364,"byte_end":9521371,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8858}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521476,"byte_end":9521483,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8860},{"krate":0,"index":8861}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521624,"byte_end":9521631,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8863},{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521792,"byte_end":9521799,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8866}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521906,"byte_end":9521913,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525649,"byte_end":9525657,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8888},{"krate":0,"index":8889}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526952,"byte_end":9526960,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8894},{"krate":0,"index":8895}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530292,"byte_end":9530299,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8918}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530428,"byte_end":9530435,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530973,"byte_end":9530980,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8927},{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9531558,"byte_end":9531565,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8930}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9531709,"byte_end":9531716,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9531753,"byte_end":9531758,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8933}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549898,"byte_end":9549906,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9191},{"krate":0,"index":9192},{"krate":0,"index":9193}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550721,"byte_end":9550729,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9196},{"krate":0,"index":9197}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9541662,"byte_end":9541667,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8952},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9546419,"byte_end":9546424,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8961}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9533483,"byte_end":9533488,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8986},{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990},{"krate":0,"index":8992},{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9539196,"byte_end":9539200,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9002}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9551562,"byte_end":9551566,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9232},{"krate":0,"index":9233},{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":9238}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9553040,"byte_end":9553044,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9240}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9560263,"byte_end":9560270,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9563299,"byte_end":9563309,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9278},{"krate":0,"index":9279},{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":9282}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9564448,"byte_end":9564453,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9303},{"krate":0,"index":9304},{"krate":0,"index":9306}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9564795,"byte_end":9564801,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9313},{"krate":0,"index":9316},{"krate":0,"index":9319},{"krate":0,"index":9322}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9568753,"byte_end":9568758,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9327}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9569064,"byte_end":9569070,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9331}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9571213,"byte_end":9571218,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9345},{"krate":0,"index":9348},{"krate":0,"index":9349},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9572897,"byte_end":9572902,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9355}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9573279,"byte_end":9573283,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9368},{"krate":0,"index":9369},{"krate":0,"index":9370},{"krate":0,"index":9371},{"krate":0,"index":9372},{"krate":0,"index":9374}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9574254,"byte_end":9574267,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9386},{"krate":0,"index":9387},{"krate":0,"index":9388}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9575095,"byte_end":9575108,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9391}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9554642,"byte_end":9554646,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9554683,"byte_end":9554687,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9554710,"byte_end":9554714,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9556229,"byte_end":9556233,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9414}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9463}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9471}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9475},{"krate":0,"index":9476}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9575920,"byte_end":9575927,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9575964,"byte_end":9575971,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576009,"byte_end":9576018,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576204,"byte_end":9576211,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9520},{"krate":0,"index":9521}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576845,"byte_end":9576854,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9524},{"krate":0,"index":9525}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576986,"byte_end":9576995,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9528}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9577117,"byte_end":9577126,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9531}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Inherent","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14189,"byte_end":14191,"line_start":350,"line_end":350,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":896}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8356009,"byte_end":8356011,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8405928,"byte_end":8405932,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1092}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3263}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3566}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72961,"byte_end":72965,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3711}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14320,"byte_end":14327,"line_start":365,"line_end":365,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4103}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5750}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":8977965,"byte_end":8977969,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5811}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5931}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14470,"byte_end":14474,"line_start":381,"line_end":381,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6620}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133271,"byte_end":9133280,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6634}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133438,"byte_end":9133442,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6821}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9181828,"byte_end":9181833,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7220}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133589,"byte_end":9133596,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":7384}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9133910,"byte_end":9133915,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7864}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8337}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8541}},{"kind":"Mod","span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9445887,"byte_end":9445898,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":8544}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8363030,"byte_end":8363040,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8368811,"byte_end":8368815,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8382040,"byte_end":8382044,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8384528,"byte_end":8384532,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8386957,"byte_end":8386961,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8389932,"byte_end":8389936,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8390034,"byte_end":8390038,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8390267,"byte_end":8390271,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":967},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8395196,"byte_end":8395207,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405676,"byte_end":8405687,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8405805,"byte_end":8405816,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8409090,"byte_end":8409101,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1329},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8409930,"byte_end":8409940,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1116}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8413012,"byte_end":8413019,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8414254,"byte_end":8414261,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1336},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8415088,"byte_end":8415096,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8418878,"byte_end":8418886,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1350},"to":{"krate":1,"index":8266}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1375},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8424861,"byte_end":8424869,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8425142,"byte_end":8425150,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8426755,"byte_end":8426763,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8429488,"byte_end":8429491,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8431306,"byte_end":8431309,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":30012},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8443582,"byte_end":8443593,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1705},"to":{"krate":0,"index":9270}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8444352,"byte_end":8444363,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8444570,"byte_end":8444581,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8447203,"byte_end":8447214,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8432951,"byte_end":8432957,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8435818,"byte_end":8435824,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1573},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8436192,"byte_end":8436198,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8436334,"byte_end":8436340,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8437483,"byte_end":8437489,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1711},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8437567,"byte_end":8437573,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8437708,"byte_end":8437713,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8439257,"byte_end":8439266,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8453772,"byte_end":8453783,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8461574,"byte_end":8461585,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8462078,"byte_end":8462089,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8463170,"byte_end":8463181,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8463354,"byte_end":8463365,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8465513,"byte_end":8465525,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8476395,"byte_end":8476407,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8476432,"byte_end":8476444,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8476463,"byte_end":8476475,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8479034,"byte_end":8479040,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1788},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8479348,"byte_end":8479354,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1788},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8481762,"byte_end":8481767,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1793},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8482071,"byte_end":8482076,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1793},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8484859,"byte_end":8484865,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1798},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8485173,"byte_end":8485179,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1798},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8487299,"byte_end":8487307,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488224,"byte_end":8488233,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8488483,"byte_end":8488491,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1916},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8489046,"byte_end":8489055,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1919},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490004,"byte_end":8490009,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490402,"byte_end":8490407,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490660,"byte_end":8490665,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490788,"byte_end":8490796,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490833,"byte_end":8490842,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490879,"byte_end":8490887,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490924,"byte_end":8490933,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8490976,"byte_end":8490984,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8491152,"byte_end":8491161,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8491851,"byte_end":8491855,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8494772,"byte_end":8494784,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2614}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8503805,"byte_end":8503806,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1948},"to":{"krate":0,"index":2614}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8505833,"byte_end":8505842,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2622}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8543091,"byte_end":8543092,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1995},"to":{"krate":0,"index":2622}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8543971,"byte_end":8543980,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8544850,"byte_end":8544851,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8546908,"byte_end":8546918,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8580128,"byte_end":8580129,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2047},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8581545,"byte_end":8581554,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8583733,"byte_end":8583742,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8584718,"byte_end":8584727,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8585558,"byte_end":8585567,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8586283,"byte_end":8586292,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12234},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8587799,"byte_end":8587808,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589645,"byte_end":8589654,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12220},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8589796,"byte_end":8589805,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12220},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8590517,"byte_end":8590526,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12220},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8591056,"byte_end":8591065,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12220},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8591544,"byte_end":8591553,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12220},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8593507,"byte_end":8593516,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8595794,"byte_end":8595803,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8596693,"byte_end":8596702,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8597184,"byte_end":8597193,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8597480,"byte_end":8597489,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12157},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8598658,"byte_end":8598663,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8599803,"byte_end":8599808,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12108},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8600087,"byte_end":8600092,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12108},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8600915,"byte_end":8600920,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12108},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8603963,"byte_end":8603967,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607077,"byte_end":8607082,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607411,"byte_end":8607416,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8607649,"byte_end":8607654,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8608475,"byte_end":8608480,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8609660,"byte_end":8609665,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8610917,"byte_end":8610922,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8611669,"byte_end":8611674,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":12085},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8613072,"byte_end":8613076,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2751},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8614137,"byte_end":8614144,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2760},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8615509,"byte_end":8615518,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8623053,"byte_end":8623061,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2925},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8624287,"byte_end":8624292,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8625968,"byte_end":8625977,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8628041,"byte_end":8628053,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2947},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8630705,"byte_end":8630714,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8632548,"byte_end":8632554,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2970},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8633676,"byte_end":8633684,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2974},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8635517,"byte_end":8635521,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2982},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8636031,"byte_end":8636035,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637000,"byte_end":8637005,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8637744,"byte_end":8637749,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8638528,"byte_end":8638533,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11251},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8652072,"byte_end":8652084,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8652589,"byte_end":8652601,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11205},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8654140,"byte_end":8654152,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11205},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8639701,"byte_end":8639705,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641333,"byte_end":8641337,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11160},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8641994,"byte_end":8641998,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11160},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8643555,"byte_end":8643560,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3023},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8644353,"byte_end":8644361,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8645869,"byte_end":8645877,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3041},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":6744},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":6744},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":6774},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":1,"index":6774},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":1,"index":6777},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":152}},"from":{"krate":1,"index":6777},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"kind":{"Impl":{"id":156}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3244},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8659074,"byte_end":8659085,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8669789,"byte_end":8669800,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3527},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8670115,"byte_end":8670126,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":161}},"from":{"krate":19,"index":1033},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8670566,"byte_end":8670577,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8670903,"byte_end":8670914,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8671130,"byte_end":8671141,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3527},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8671973,"byte_end":8671981,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8672619,"byte_end":8672627,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3529},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8674777,"byte_end":8674785,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8677240,"byte_end":8677248,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8677568,"byte_end":8677577,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8678390,"byte_end":8678398,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8678492,"byte_end":8678501,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681564,"byte_end":8681576,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3558},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681779,"byte_end":8681791,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3558},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8681801,"byte_end":8681814,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684648,"byte_end":8684661,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3549},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8684966,"byte_end":8684980,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685532,"byte_end":8685546,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8685706,"byte_end":8685720,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3553},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8686541,"byte_end":8686554,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":8686650,"byte_end":8686664,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8688799,"byte_end":8688808,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8713614,"byte_end":8713623,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":182}},"from":{"krate":19,"index":977},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8714059,"byte_end":8714068,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3564},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8714421,"byte_end":8714430,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8714744,"byte_end":8714753,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8715497,"byte_end":8715506,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3564},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":8715720,"byte_end":8715729,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8716735,"byte_end":8716744,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730300,"byte_end":8730309,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":189}},"from":{"krate":19,"index":1091},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8730745,"byte_end":8730754,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8731074,"byte_end":8731083,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":8731302,"byte_end":8731311,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3693},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733392,"byte_end":8733404,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3705},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8733607,"byte_end":8733619,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3705},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8734146,"byte_end":8734154,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8735786,"byte_end":8735794,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8737114,"byte_end":8737122,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3695},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":8737213,"byte_end":8737221,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8738037,"byte_end":8738049,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8744672,"byte_end":8744684,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":200}},"from":{"krate":26,"index":182},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8745126,"byte_end":8745138,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8745467,"byte_end":8745479,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":8745604,"byte_end":8745616,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3954},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8745974,"byte_end":8745982,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":8746714,"byte_end":8746722,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3956},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8748849,"byte_end":8748861,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753365,"byte_end":8753377,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3962},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8753693,"byte_end":8753705,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":208}},"from":{"krate":26,"index":186},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8754147,"byte_end":8754159,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3962},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8754479,"byte_end":8754491,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3962},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":8754616,"byte_end":8754628,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3962},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755620,"byte_end":8755628,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3964},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8755948,"byte_end":8755957,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8756441,"byte_end":8756449,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":8756545,"byte_end":8756554,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8757492,"byte_end":8757502,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8760835,"byte_end":8760845,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":26,"index":190},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8761283,"byte_end":8761293,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8761606,"byte_end":8761616,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3978},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8761930,"byte_end":8761940,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3978},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8762427,"byte_end":8762437,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8763954,"byte_end":8763964,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":8764089,"byte_end":8764099,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3978},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8768456,"byte_end":8768462,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8769268,"byte_end":8769274,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":8769488,"byte_end":8769494,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4037},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4041},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4091},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":261}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8810385,"byte_end":8810400,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":8810644,"byte_end":8810659,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4379},"to":{"krate":0,"index":4116}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815142,"byte_end":8815147,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1944},"to":{"krate":0,"index":4149}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815240,"byte_end":8815246,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5923},"to":{"krate":0,"index":4149}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815390,"byte_end":8815396,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8815563,"byte_end":8815569,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8816036,"byte_end":8816042,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8818337,"byte_end":8818343,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4385},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":8818519,"byte_end":8818525,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805001,"byte_end":8805006,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":271}},"from":{"krate":1,"index":4207},"to":{"krate":0,"index":4109}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805184,"byte_end":8805189,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":272}},"from":{"krate":1,"index":4207},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805434,"byte_end":8805451,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4214},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805600,"byte_end":8805617,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4214},"to":{"krate":0,"index":4116}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8805964,"byte_end":8805969,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8806638,"byte_end":8806643,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8806730,"byte_end":8806735,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4221},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8806832,"byte_end":8806837,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807100,"byte_end":8807102,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807257,"byte_end":8807259,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":2991}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807489,"byte_end":8807491,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":8807614,"byte_end":8807616,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4408},"to":{"krate":19,"index":16}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8775032,"byte_end":8775039,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791289,"byte_end":8791296,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791626,"byte_end":8791640,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4419},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791846,"byte_end":8791860,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4419},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8791997,"byte_end":8792011,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4419},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8793860,"byte_end":8793865,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8796378,"byte_end":8796383,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4426},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797348,"byte_end":8797358,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4433},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8797883,"byte_end":8797894,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4437},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8798358,"byte_end":8798369,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4441},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8798960,"byte_end":8798970,"line_start":921,"line_end":921,"column_start":22,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4433},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8799095,"byte_end":8799106,"line_start":927,"line_end":927,"column_start":22,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4437},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":8799231,"byte_end":8799242,"line_start":933,"line_end":933,"column_start":22,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4441},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8834454,"byte_end":8834468,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8838007,"byte_end":8838012,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8838699,"byte_end":8838713,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8839600,"byte_end":8839614,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8839780,"byte_end":8839787,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8840245,"byte_end":8840252,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4984},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8840420,"byte_end":8840423,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":8841521,"byte_end":8841527,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4487},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8849210,"byte_end":8849216,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8849241,"byte_end":8849247,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8849606,"byte_end":8849610,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8850388,"byte_end":8850392,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":8856143,"byte_end":8856149,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8856774,"byte_end":8856783,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8859862,"byte_end":8859871,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4996},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8860114,"byte_end":8860123,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4996},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8860400,"byte_end":8860409,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4996},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":8860443,"byte_end":8860448,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8861126,"byte_end":8861133,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8861610,"byte_end":8861617,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":8863788,"byte_end":8863793,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4690},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876097,"byte_end":8876107,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876144,"byte_end":8876154,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876170,"byte_end":8876180,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876356,"byte_end":8876366,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8876393,"byte_end":8876403,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8877629,"byte_end":8877639,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":8877905,"byte_end":8877915,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8879162,"byte_end":8879169,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8880700,"byte_end":8880707,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":8880797,"byte_end":8880804,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8883486,"byte_end":8883491,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8892347,"byte_end":8892355,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8894232,"byte_end":8894237,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":8894396,"byte_end":8894404,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5002},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":8896222,"byte_end":8896230,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4896},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8897978,"byte_end":8897991,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8899149,"byte_end":8899153,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":8899553,"byte_end":8899557,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842540,"byte_end":8842544,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842575,"byte_end":8842579,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842716,"byte_end":8842724,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842765,"byte_end":8842773,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842898,"byte_end":8842902,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8842905,"byte_end":8842910,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8844697,"byte_end":8844701,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8844998,"byte_end":8845006,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845257,"byte_end":8845261,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845454,"byte_end":8845462,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845593,"byte_end":8845597,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8845766,"byte_end":8845774,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846060,"byte_end":8846064,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846304,"byte_end":8846308,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846460,"byte_end":8846468,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":8846684,"byte_end":8846688,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4930},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8901865,"byte_end":8901877,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8903513,"byte_end":8903525,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8903611,"byte_end":8903623,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8903784,"byte_end":8903791,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8905955,"byte_end":8905960,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":8908629,"byte_end":8908636,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/schedule.rs","byte_start":8909139,"byte_end":8909151,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5131},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs","byte_start":8910024,"byte_end":8910032,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8911652,"byte_end":8911664,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8911890,"byte_end":8911902,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":8911932,"byte_end":8911944,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5232},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8913915,"byte_end":8913921,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8914390,"byte_end":8914396,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5299},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8914712,"byte_end":8914718,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5299},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8915370,"byte_end":8915378,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5301},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":8915447,"byte_end":8915452,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922500,"byte_end":8922505,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922536,"byte_end":8922541,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922572,"byte_end":8922578,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8922609,"byte_end":8922615,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8923474,"byte_end":8923479,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8930013,"byte_end":8930018,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935186,"byte_end":8935191,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5388},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935287,"byte_end":8935292,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5385},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935451,"byte_end":8935456,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8935644,"byte_end":8935650,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":8939155,"byte_end":8939161,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8943315,"byte_end":8943325,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8943362,"byte_end":8943372,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8943388,"byte_end":8943398,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":8944185,"byte_end":8944195,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8945001,"byte_end":8945005,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8948878,"byte_end":8948883,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8950361,"byte_end":8950366,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":8950539,"byte_end":8950544,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8956308,"byte_end":8956313,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5681},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8960078,"byte_end":8960084,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8960859,"byte_end":8960866,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8965132,"byte_end":8965136,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8969922,"byte_end":8969928,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8970368,"byte_end":8970371,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"kind":{"Impl":{"id":414}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":8972942,"byte_end":8972948,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8941213,"byte_end":8941223,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942378,"byte_end":8942388,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942527,"byte_end":8942537,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942644,"byte_end":8942651,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":8942996,"byte_end":8943003,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5737},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8980795,"byte_end":8980798,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":428}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":5772}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8981520,"byte_end":8981528,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8981618,"byte_end":8981626,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8983779,"byte_end":8983786,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":8983894,"byte_end":8983901,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8989973,"byte_end":8989982,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5840},"to":{"krate":0,"index":5782}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990096,"byte_end":8990105,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5840},"to":{"krate":0,"index":5772}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990493,"byte_end":8990504,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5906},"to":{"krate":0,"index":5782}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8990790,"byte_end":8990800,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8994596,"byte_end":8994606,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8996955,"byte_end":8996961,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":8997246,"byte_end":8997252,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9003441,"byte_end":9003447,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9005305,"byte_end":9005311,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5923},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040303,"byte_end":9040312,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040458,"byte_end":9040467,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9040506,"byte_end":9040515,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041466,"byte_end":9041475,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041621,"byte_end":9041630,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9041669,"byte_end":9041678,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9042601,"byte_end":9042606,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":10287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9042786,"byte_end":9042791,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":10287},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044336,"byte_end":9044350,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6080},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044369,"byte_end":9044376,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":10266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9044660,"byte_end":9044667,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":10266},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9045643,"byte_end":9045649,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":452}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9045704,"byte_end":9045710,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":453}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046099,"byte_end":9046102,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":454}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046148,"byte_end":9046151,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046534,"byte_end":9046537,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":456}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9046585,"byte_end":9046588,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":457}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9047103,"byte_end":9047109,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":458}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9047198,"byte_end":9047204,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":459}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048282,"byte_end":9048287,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":460}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048335,"byte_end":9048340,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":461}},"from":{"krate":16,"index":341},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048740,"byte_end":9048748,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9048796,"byte_end":9048804,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":463}},"from":{"krate":16,"index":535},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050075,"byte_end":9050080,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050111,"byte_end":9050116,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050147,"byte_end":9050152,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9050695,"byte_end":9050700,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6541},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051314,"byte_end":9051320,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":10193},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051538,"byte_end":9051544,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":10193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9051663,"byte_end":9051669,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":10193},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9052755,"byte_end":9052764,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":10148},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9052985,"byte_end":9052994,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":10148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9053116,"byte_end":9053125,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":10148},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9054197,"byte_end":9054207,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":10120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9054403,"byte_end":9054413,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":10120},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9055312,"byte_end":9055316,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":10072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9055476,"byte_end":9055480,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":10072},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9056423,"byte_end":9056427,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6548},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9057089,"byte_end":9057093,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6548},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9057839,"byte_end":9057842,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":10005},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9058031,"byte_end":9058034,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":10005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9058155,"byte_end":9058158,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":10005},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9059003,"byte_end":9059008,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":9956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9059262,"byte_end":9059267,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":9956},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060779,"byte_end":9060783,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060817,"byte_end":9060821,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9060962,"byte_end":9060966,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9061462,"byte_end":9061466,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6562},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9062093,"byte_end":9062097,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6562},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062644,"byte_end":9062651,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062682,"byte_end":9062689,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9062720,"byte_end":9062727,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9063420,"byte_end":9063427,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6568},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9069092,"byte_end":9069101,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9076102,"byte_end":9076111,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9077650,"byte_end":9077659,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6575},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9078875,"byte_end":9078879,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":9919},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9079089,"byte_end":9079093,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":9919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9079226,"byte_end":9079230,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":9919},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080456,"byte_end":9080465,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":9874},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080686,"byte_end":9080695,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":9874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9080880,"byte_end":9080889,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":9874},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082238,"byte_end":9082245,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6587},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082279,"byte_end":9082286,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9082493,"byte_end":9082500,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6587},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083110,"byte_end":9083114,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9837},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083324,"byte_end":9083328,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":9837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9083461,"byte_end":9083465,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9837},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9084984,"byte_end":9084993,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":9788},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9085253,"byte_end":9085262,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9085455,"byte_end":9085464,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9788},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9116689,"byte_end":9116696,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9117051,"byte_end":9117058,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9765},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9015545,"byte_end":9015551,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":6482}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9039533,"byte_end":9039535,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6517},"to":{"krate":0,"index":6482}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9135526,"byte_end":9135533,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9138813,"byte_end":9138830,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149397,"byte_end":9149403,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149530,"byte_end":9149536,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149697,"byte_end":9149701,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9149771,"byte_end":9149775,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152549,"byte_end":9152555,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152592,"byte_end":9152598,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152636,"byte_end":9152644,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152681,"byte_end":9152689,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9152705,"byte_end":9152711,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9158347,"byte_end":9158351,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9158743,"byte_end":9158749,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9158929,"byte_end":9158935,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9159089,"byte_end":9159097,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9163962,"byte_end":9163970,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9166723,"byte_end":9166728,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6752},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9170142,"byte_end":9170150,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6659},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9170600,"byte_end":9170608,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9171792,"byte_end":9171796,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9172638,"byte_end":9172642,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9173372,"byte_end":9173380,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9174692,"byte_end":9174696,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6690},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9175420,"byte_end":9175424,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176222,"byte_end":9176228,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6681},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176643,"byte_end":9176649,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176793,"byte_end":9176801,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9176936,"byte_end":9176945,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177118,"byte_end":9177127,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6686},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177418,"byte_end":9177427,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177700,"byte_end":9177709,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7978},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9177736,"byte_end":9177748,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7990},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9178090,"byte_end":9178102,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7990},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9184411,"byte_end":9184416,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9194398,"byte_end":9194404,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9194886,"byte_end":9194892,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6853},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195530,"byte_end":9195536,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9195668,"byte_end":9195674,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9196081,"byte_end":9196089,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9197861,"byte_end":9197869,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200297,"byte_end":9200305,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200365,"byte_end":9200373,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6916},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9200561,"byte_end":9200567,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9211957,"byte_end":9211959,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9212360,"byte_end":9212362,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9212669,"byte_end":9212678,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9212940,"byte_end":9212952,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9214647,"byte_end":9214651,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9215284,"byte_end":9215292,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7026},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9215558,"byte_end":9215562,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9215611,"byte_end":9215615,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9216094,"byte_end":9216096,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9216794,"byte_end":9216796,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9216944,"byte_end":9216946,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9217124,"byte_end":9217126,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9217526,"byte_end":9217528,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9217937,"byte_end":9217939,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9221059,"byte_end":9221061,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9221497,"byte_end":9221501,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9221965,"byte_end":9221969,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9222518,"byte_end":9222530,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8022},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9224130,"byte_end":9224141,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":7004}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9226858,"byte_end":9226860,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9232564,"byte_end":9232566,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7139},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9232843,"byte_end":9232845,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9236244,"byte_end":9236246,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7143},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9236920,"byte_end":9236935,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7179},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237076,"byte_end":9237091,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7179},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9237549,"byte_end":9237566,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7188},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9238544,"byte_end":9238561,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241033,"byte_end":9241050,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7188},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9241216,"byte_end":9241231,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242341,"byte_end":9242350,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9242510,"byte_end":9242519,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":8035},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243005,"byte_end":9243017,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":8042},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243050,"byte_end":9243062,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243402,"byte_end":9243414,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243643,"byte_end":9243652,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":8053},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9243782,"byte_end":9243791,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8053},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244277,"byte_end":9244289,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8058},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244595,"byte_end":9244607,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8058},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244764,"byte_end":9244775,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9244874,"byte_end":9244885,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8068},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245015,"byte_end":9245026,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245530,"byte_end":9245546,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8078},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9245583,"byte_end":9245599,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8078},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251915,"byte_end":9251920,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9251974,"byte_end":9251979,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252033,"byte_end":9252043,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252108,"byte_end":9252123,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252410,"byte_end":9252422,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":8096},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9252559,"byte_end":9252571,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":8096},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9253379,"byte_end":9253384,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9257957,"byte_end":9257962,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258046,"byte_end":9258051,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258200,"byte_end":9258210,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258311,"byte_end":9258321,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258468,"byte_end":9258478,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258635,"byte_end":9258645,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258811,"byte_end":9258821,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9258999,"byte_end":9259014,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259111,"byte_end":9259126,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259269,"byte_end":9259284,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259437,"byte_end":9259452,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9259614,"byte_end":9259629,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263593,"byte_end":9263601,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263634,"byte_end":9263642,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9263905,"byte_end":9263911,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9267919,"byte_end":9267925,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8101},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9269663,"byte_end":9269671,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":8113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9270181,"byte_end":9270189,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9275019,"byte_end":9275027,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9277985,"byte_end":9277991,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":8106},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9279867,"byte_end":9279876,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":8142},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280038,"byte_end":9280047,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":8142},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280116,"byte_end":9280128,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":8154},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9280427,"byte_end":9280439,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8154},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9282250,"byte_end":9282256,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288557,"byte_end":9288563,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9288702,"byte_end":9288710,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":8136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9293101,"byte_end":9293109,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":8136},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9293256,"byte_end":9293264,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8136},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9293727,"byte_end":9293732,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298104,"byte_end":9298109,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298146,"byte_end":9298151,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298176,"byte_end":9298181,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298550,"byte_end":9298555,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9298950,"byte_end":9298955,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":8167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9300668,"byte_end":9300673,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":8167},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9304151,"byte_end":9304160,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9314081,"byte_end":9314090,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9314291,"byte_end":9314297,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9315163,"byte_end":9315170,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9315848,"byte_end":9315855,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9316654,"byte_end":9316661,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318303,"byte_end":9318310,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318357,"byte_end":9318369,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":8180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318462,"byte_end":9318474,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":8180},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318618,"byte_end":9318630,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9318677,"byte_end":9318692,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9319314,"byte_end":9319329,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9319615,"byte_end":9319630,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8173},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9319723,"byte_end":9319729,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7537},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9324998,"byte_end":9325007,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341201,"byte_end":9341210,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341289,"byte_end":9341298,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341676,"byte_end":9341685,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341710,"byte_end":9341719,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9341757,"byte_end":9341763,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348169,"byte_end":9348175,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8185},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348248,"byte_end":9348254,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8185},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348676,"byte_end":9348688,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9348868,"byte_end":9348880,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8190},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349024,"byte_end":9349036,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349083,"byte_end":9349098,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349628,"byte_end":9349643,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8195},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349929,"byte_end":9349944,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8195},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9349982,"byte_end":9349988,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9355401,"byte_end":9355409,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9359072,"byte_end":9359080,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8208},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9359433,"byte_end":9359444,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9362173,"byte_end":9362182,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364277,"byte_end":9364292,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364537,"byte_end":9364557,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364811,"byte_end":9364826,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9364934,"byte_end":9364954,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8245},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9368775,"byte_end":9368790,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9369057,"byte_end":9369072,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370076,"byte_end":9370082,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370136,"byte_end":9370142,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370203,"byte_end":9370218,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8262},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370283,"byte_end":9370299,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9370357,"byte_end":9370363,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373480,"byte_end":9373495,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8262},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373634,"byte_end":9373650,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373792,"byte_end":9373808,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9373930,"byte_end":9373936,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9374020,"byte_end":9374026,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9380301,"byte_end":9380312,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386239,"byte_end":9386250,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386336,"byte_end":9386347,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386480,"byte_end":9386491,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386516,"byte_end":9386527,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9386623,"byte_end":9386628,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":698}},"from":{"krate":2,"index":8443},"to":{"krate":0,"index":7853}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9390169,"byte_end":9390178,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8310},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9390358,"byte_end":9390367,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8310},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9392526,"byte_end":9392534,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9393806,"byte_end":9393814,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395180,"byte_end":9395188,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8289},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395447,"byte_end":9395455,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395758,"byte_end":9395766,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9395880,"byte_end":9395886,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397421,"byte_end":9397427,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8296},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397666,"byte_end":9397669,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8302},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397810,"byte_end":9397816,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8316},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9397918,"byte_end":9397925,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398148,"byte_end":9398155,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398272,"byte_end":9398279,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398309,"byte_end":9398316,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9398463,"byte_end":9398470,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9417281,"byte_end":9417289,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8369},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9424421,"byte_end":9424429,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9432271,"byte_end":9432279,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9432418,"byte_end":9432426,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9433391,"byte_end":9433399,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9433480,"byte_end":9433488,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9434355,"byte_end":9434363,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9719},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9435248,"byte_end":9435254,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9435817,"byte_end":9435820,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":723}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9439235,"byte_end":9439243,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441019,"byte_end":9441027,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441235,"byte_end":9441243,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8469},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441564,"byte_end":9441579,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":9642},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9441880,"byte_end":9441885,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8497},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442503,"byte_end":9442504,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8510},"to":{"krate":0,"index":8508}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442689,"byte_end":9442700,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9442844,"byte_end":9442855,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9443002,"byte_end":9443013,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8529},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9447598,"byte_end":9447603,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":9021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9458125,"byte_end":9458135,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":9026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9475778,"byte_end":9475788,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":9026},"to":{"krate":2,"index":1944}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9475816,"byte_end":9475826,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":9026},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9475963,"byte_end":9475973,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":9026},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9476355,"byte_end":9476360,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":9051},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478487,"byte_end":9478492,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":9051},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478622,"byte_end":9478625,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":9045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9478712,"byte_end":9478719,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":9037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9481257,"byte_end":9481262,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":9068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9482240,"byte_end":9482245,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":9068},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9495569,"byte_end":9495580,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":9072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9497558,"byte_end":9497576,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9498148,"byte_end":9498166,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9502139,"byte_end":9502144,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":9080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9508372,"byte_end":9508377,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9508585,"byte_end":9508590,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9508615,"byte_end":9508620,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9508997,"byte_end":9509003,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":9104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9509648,"byte_end":9509654,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":9104},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9510099,"byte_end":9510111,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":9108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9511021,"byte_end":9511033,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":9108},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9511317,"byte_end":9511322,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":9112},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9511413,"byte_end":9511418,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":9112},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9487135,"byte_end":9487141,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":9116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9490790,"byte_end":9490796,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":9116},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9492785,"byte_end":9492791,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":9116},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9493268,"byte_end":9493273,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9494890,"byte_end":9494895,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":8785},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9515690,"byte_end":9515695,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":9125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516410,"byte_end":9516415,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":9125},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9516442,"byte_end":9516447,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9517153,"byte_end":9517160,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":9137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9520934,"byte_end":9520941,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521070,"byte_end":9521077,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":767}},"from":{"krate":1,"index":7727},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521192,"byte_end":9521199,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521364,"byte_end":9521371,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521476,"byte_end":9521483,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521624,"byte_end":9521631,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521792,"byte_end":9521799,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9521906,"byte_end":9521913,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9525649,"byte_end":9525657,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":9160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9526952,"byte_end":9526960,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":9160},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530292,"byte_end":9530299,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":9165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530428,"byte_end":9530435,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":9625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9530973,"byte_end":9530980,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":9625},"to":{"krate":2,"index":8293}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9531558,"byte_end":9531565,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":9165},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9531709,"byte_end":9531716,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":9165},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9531753,"byte_end":9531758,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":781}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9549898,"byte_end":9549906,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":9579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9550721,"byte_end":9550729,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":9579},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9541662,"byte_end":9541667,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":8943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9546419,"byte_end":9546424,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":8943},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9547540,"byte_end":9547547,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9533483,"byte_end":9533488,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":9207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9539196,"byte_end":9539200,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":9221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9551562,"byte_end":9551566,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":9415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9553040,"byte_end":9553044,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":9415},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9560263,"byte_end":9560270,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":9421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/entry.rs","byte_start":9562905,"byte_end":9562912,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":9270}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9563299,"byte_end":9563309,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":9436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9564448,"byte_end":9564453,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":9293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9564795,"byte_end":9564801,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":9295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9568753,"byte_end":9568758,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":9293},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9569064,"byte_end":9569070,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":9295},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9571213,"byte_end":9571218,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":9339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9572897,"byte_end":9572902,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":9339},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9573279,"byte_end":9573283,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":9362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9574254,"byte_end":9574267,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":9383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9575095,"byte_end":9575108,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":9383},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9554642,"byte_end":9554646,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9554683,"byte_end":9554687,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9554710,"byte_end":9554714,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":9398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9556229,"byte_end":9556233,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":9464},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":9477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":9486},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9575920,"byte_end":9575927,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9575964,"byte_end":9575971,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576009,"byte_end":9576018,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576204,"byte_end":9576211,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":9502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576845,"byte_end":9576854,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9576986,"byte_end":9576995,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9577117,"byte_end":9577126,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":9535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":9535},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":9535},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/oleg/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":9544},"to":{"krate":4294967295,"index":4294967295}}]}